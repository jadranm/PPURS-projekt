
ppurs kod.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000180c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000060  00800060  0000180c  000018a0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  008000c0  008000c0  00001900  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001900  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000195c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  00001998  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000016d6  00000000  00000000  00001af0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b3d  00000000  00000000  000031c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016d8  00000000  00000000  00003d03  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003f8  00000000  00000000  000053dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008d84  00000000  00000000  000057d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001222  00000000  00000000  0000e558  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000120  00000000  00000000  0000f77a  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002d1b  00000000  00000000  0000f89a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	aa c0       	rjmp	.+340    	; 0x156 <__ctors_end>
       2:	00 00       	nop
       4:	c4 c0       	rjmp	.+392    	; 0x18e <__bad_interrupt>
       6:	00 00       	nop
       8:	38 c1       	rjmp	.+624    	; 0x27a <__vector_2>
       a:	00 00       	nop
       c:	42 c1       	rjmp	.+644    	; 0x292 <__vector_3>
       e:	00 00       	nop
      10:	be c0       	rjmp	.+380    	; 0x18e <__bad_interrupt>
      12:	00 00       	nop
      14:	bc c0       	rjmp	.+376    	; 0x18e <__bad_interrupt>
      16:	00 00       	nop
      18:	ba c0       	rjmp	.+372    	; 0x18e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b8 c0       	rjmp	.+368    	; 0x18e <__bad_interrupt>
      1e:	00 00       	nop
      20:	b6 c0       	rjmp	.+364    	; 0x18e <__bad_interrupt>
      22:	00 00       	nop
      24:	4a c1       	rjmp	.+660    	; 0x2ba <__vector_9>
      26:	00 00       	nop
      28:	b2 c0       	rjmp	.+356    	; 0x18e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b0 c0       	rjmp	.+352    	; 0x18e <__bad_interrupt>
      2e:	00 00       	nop
      30:	ae c0       	rjmp	.+348    	; 0x18e <__bad_interrupt>
      32:	00 00       	nop
      34:	ac c0       	rjmp	.+344    	; 0x18e <__bad_interrupt>
      36:	00 00       	nop
      38:	aa c0       	rjmp	.+340    	; 0x18e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a8 c0       	rjmp	.+336    	; 0x18e <__bad_interrupt>
      3e:	00 00       	nop
      40:	a6 c0       	rjmp	.+332    	; 0x18e <__bad_interrupt>
      42:	00 00       	nop
      44:	a4 c0       	rjmp	.+328    	; 0x18e <__bad_interrupt>
      46:	00 00       	nop
      48:	a2 c0       	rjmp	.+324    	; 0x18e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a0 c0       	rjmp	.+320    	; 0x18e <__bad_interrupt>
      4e:	00 00       	nop
      50:	9e c0       	rjmp	.+316    	; 0x18e <__bad_interrupt>
	...

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	ec e0       	ldi	r30, 0x0C	; 12
     16a:	f8 e1       	ldi	r31, 0x18	; 24
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	a0 3c       	cpi	r26, 0xC0	; 192
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	a0 ec       	ldi	r26, 0xC0	; 192
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a4 3c       	cpi	r26, 0xC4	; 196
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	dd d0       	rcall	.+442    	; 0x344 <main>
     18a:	0c 94 04 0c 	jmp	0x1808	; 0x1808 <_exit>

0000018e <__bad_interrupt>:
     18e:	38 cf       	rjmp	.-400    	; 0x0 <__vectors>

00000190 <adc_init>:

// inicijalizacija adc pretvorbe
void adc_init()
{
		// postavi referencu
		ADMUX &= ~ADC_REFERENCE_MASK;
     190:	87 b1       	in	r24, 0x07	; 7
     192:	8f 73       	andi	r24, 0x3F	; 63
     194:	87 b9       	out	0x07, r24	; 7
		ADMUX |= ADC_REFERENCE << 6;
     196:	3e 9a       	sbi	0x07, 6	; 7
		
		// postavi djelitelj frekvencije
		ADCSRA &= ~ADC_PRESCALE_MASK;
     198:	86 b1       	in	r24, 0x06	; 6
     19a:	88 7f       	andi	r24, 0xF8	; 248
     19c:	86 b9       	out	0x06, r24	; 6
		ADCSRA |=  ADC_PRESCALE;
     19e:	86 b1       	in	r24, 0x06	; 6
     1a0:	87 60       	ori	r24, 0x07	; 7
     1a2:	86 b9       	out	0x06, r24	; 6
		
		// omoguæi adc pretvorbu
		ADCSRA|=(1<<ADEN);
     1a4:	37 9a       	sbi	0x06, 7	; 6
     1a6:	08 95       	ret

000001a8 <adc_read_10bit>:
unsigned short adc_read_10bit(uint8_t ch)
{
	
	ch &= ADC_CH_MASK;
	
	ADMUX &= ~ADC_MUX_MASK;
     1a8:	97 b1       	in	r25, 0x07	; 7
     1aa:	90 7e       	andi	r25, 0xE0	; 224
     1ac:	97 b9       	out	0x07, r25	; 7
	ADMUX |= ch;
     1ae:	97 b1       	in	r25, 0x07	; 7
     1b0:	87 70       	andi	r24, 0x07	; 7
     1b2:	98 2b       	or	r25, r24
     1b4:	97 b9       	out	0x07, r25	; 7
	
	ADCSRA|=(1<<ADSC);
     1b6:	36 9a       	sbi	0x06, 6	; 6

	//Wait for conversion to complete
	while(!(ADCSRA & (1<<ADIF)));
     1b8:	34 9b       	sbis	0x06, 4	; 6
     1ba:	fe cf       	rjmp	.-4      	; 0x1b8 <adc_read_10bit+0x10>

	//Clear ADIF by writing one to it

	ADCSRA|=(1<<ADIF);
     1bc:	34 9a       	sbi	0x06, 4	; 6

	return(ADC);  // read ADC (full 10 bits);
     1be:	84 b1       	in	r24, 0x04	; 4
     1c0:	95 b1       	in	r25, 0x05	; 5
}
     1c2:	08 95       	ret

000001c4 <alarm>:


uint16_t duty_duljina;


void alarm(bool buzz){
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	d8 2f       	mov	r29, r24
     1ca:	c2 e0       	ldi	r28, 0x02	; 2
	uint8_t i;
	
	for (i = 0;i<BROJ_ZUJANJA;i++){
		
		if (buzz == true)
     1cc:	dd 23       	and	r29, r29
     1ce:	39 f0       	breq	.+14     	; 0x1de <alarm+0x1a>
			BUZZ (0.5 , 1000);
     1d0:	48 ee       	ldi	r20, 0xE8	; 232
     1d2:	53 e0       	ldi	r21, 0x03	; 3
     1d4:	60 e0       	ldi	r22, 0x00	; 0
     1d6:	70 e0       	ldi	r23, 0x00	; 0
     1d8:	80 e0       	ldi	r24, 0x00	; 0
     1da:	9f e3       	ldi	r25, 0x3F	; 63
     1dc:	4c d2       	rcall	.+1176   	; 0x676 <BUZZ>
		
		PORTB |= 0xF0;
     1de:	88 b3       	in	r24, 0x18	; 24
     1e0:	80 6f       	ori	r24, 0xF0	; 240
     1e2:	88 bb       	out	0x18, r24	; 24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     1e4:	2f ef       	ldi	r18, 0xFF	; 255
     1e6:	84 e3       	ldi	r24, 0x34	; 52
     1e8:	9c e0       	ldi	r25, 0x0C	; 12
     1ea:	21 50       	subi	r18, 0x01	; 1
     1ec:	80 40       	sbci	r24, 0x00	; 0
     1ee:	90 40       	sbci	r25, 0x00	; 0
     1f0:	e1 f7       	brne	.-8      	; 0x1ea <alarm+0x26>
     1f2:	00 c0       	rjmp	.+0      	; 0x1f4 <alarm+0x30>
     1f4:	00 00       	nop
		_delay_ms(500);
		PORTB &= ~0xF0;
     1f6:	88 b3       	in	r24, 0x18	; 24
     1f8:	8f 70       	andi	r24, 0x0F	; 15
     1fa:	88 bb       	out	0x18, r24	; 24
     1fc:	2f ef       	ldi	r18, 0xFF	; 255
     1fe:	84 e3       	ldi	r24, 0x34	; 52
     200:	9c e0       	ldi	r25, 0x0C	; 12
     202:	21 50       	subi	r18, 0x01	; 1
     204:	80 40       	sbci	r24, 0x00	; 0
     206:	90 40       	sbci	r25, 0x00	; 0
     208:	e1 f7       	brne	.-8      	; 0x202 <alarm+0x3e>
     20a:	00 c0       	rjmp	.+0      	; 0x20c <alarm+0x48>
     20c:	00 00       	nop
     20e:	c1 50       	subi	r28, 0x01	; 1


void alarm(bool buzz){
	uint8_t i;
	
	for (i = 0;i<BROJ_ZUJANJA;i++){
     210:	e9 f6       	brne	.-70     	; 0x1cc <alarm+0x8>
		_delay_ms(500);
		PORTB &= ~0xF0;
		_delay_ms(500);
	}
	return 0;
}
     212:	df 91       	pop	r29
     214:	cf 91       	pop	r28
     216:	08 95       	ret

00000218 <usrednjavanje>:

float usrednjavanje(uint8_t pin){
     218:	cf 92       	push	r12
     21a:	df 92       	push	r13
     21c:	ef 92       	push	r14
     21e:	ff 92       	push	r15
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	d8 2f       	mov	r29, r24
     226:	ca e0       	ldi	r28, 0x0A	; 10
	
	float ADC_zbroj = 0, ADC_prosjek = 0;
     228:	c1 2c       	mov	r12, r1
     22a:	d1 2c       	mov	r13, r1
     22c:	76 01       	movw	r14, r12
	uint8_t i;
	
	for(i = 0; i < BROJ_UZORKOVANJA; i++){		//usrednjavanje rezultata
		ADC = adc_read_10bit(pin);
     22e:	8d 2f       	mov	r24, r29
     230:	bb df       	rcall	.-138    	; 0x1a8 <adc_read_10bit>
     232:	95 b9       	out	0x05, r25	; 5
     234:	84 b9       	out	0x04, r24	; 4
		ADC_zbroj = ADC_zbroj + ADC;
     236:	64 b1       	in	r22, 0x04	; 4
     238:	75 b1       	in	r23, 0x05	; 5
     23a:	80 e0       	ldi	r24, 0x00	; 0
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	f3 d7       	rcall	.+4070   	; 0x1226 <__floatunsisf>
     240:	9b 01       	movw	r18, r22
     242:	ac 01       	movw	r20, r24
     244:	c7 01       	movw	r24, r14
     246:	b6 01       	movw	r22, r12
     248:	ed d6       	rcall	.+3546   	; 0x1024 <__addsf3>
     24a:	6b 01       	movw	r12, r22
     24c:	7c 01       	movw	r14, r24
     24e:	8f e1       	ldi	r24, 0x1F	; 31
     250:	9e e4       	ldi	r25, 0x4E	; 78
     252:	01 97       	sbiw	r24, 0x01	; 1
     254:	f1 f7       	brne	.-4      	; 0x252 <usrednjavanje+0x3a>
     256:	00 c0       	rjmp	.+0      	; 0x258 <usrednjavanje+0x40>
     258:	00 00       	nop
     25a:	c1 50       	subi	r28, 0x01	; 1
float usrednjavanje(uint8_t pin){
	
	float ADC_zbroj = 0, ADC_prosjek = 0;
	uint8_t i;
	
	for(i = 0; i < BROJ_UZORKOVANJA; i++){		//usrednjavanje rezultata
     25c:	41 f7       	brne	.-48     	; 0x22e <usrednjavanje+0x16>
		ADC_zbroj = ADC_zbroj + ADC;
		_delay_ms(10);
		}
		
	ADC_prosjek = ADC_zbroj / BROJ_UZORKOVANJA;
	return ADC_prosjek;
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	40 e2       	ldi	r20, 0x20	; 32
     264:	51 e4       	ldi	r21, 0x41	; 65
     266:	c7 01       	movw	r24, r14
     268:	b6 01       	movw	r22, r12
     26a:	44 d7       	rcall	.+3720   	; 0x10f4 <__divsf3>
}
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	ff 90       	pop	r15
     272:	ef 90       	pop	r14
     274:	df 90       	pop	r13
     276:	cf 90       	pop	r12
     278:	08 95       	ret

0000027a <__vector_2>:


ISR(INT1_vect){		// INT1 rastuci brid
     27a:	1f 92       	push	r1
     27c:	0f 92       	push	r0
     27e:	0f b6       	in	r0, 0x3f	; 63
     280:	0f 92       	push	r0
     282:	11 24       	eor	r1, r1
	
	TCNT1 = 0;
     284:	1d bc       	out	0x2d, r1	; 45
     286:	1c bc       	out	0x2c, r1	; 44
}
     288:	0f 90       	pop	r0
     28a:	0f be       	out	0x3f, r0	; 63
     28c:	0f 90       	pop	r0
     28e:	1f 90       	pop	r1
     290:	18 95       	reti

00000292 <__vector_3>:


ISR(INT2_vect){		// INT2 padajuci brid 
     292:	1f 92       	push	r1
     294:	0f 92       	push	r0
     296:	0f b6       	in	r0, 0x3f	; 63
     298:	0f 92       	push	r0
     29a:	11 24       	eor	r1, r1
     29c:	8f 93       	push	r24
     29e:	9f 93       	push	r25
	
	duty_duljina = TCNT1;
     2a0:	8c b5       	in	r24, 0x2c	; 44
     2a2:	9d b5       	in	r25, 0x2d	; 45
     2a4:	90 93 c3 00 	sts	0x00C3, r25	; 0x8000c3 <duty_duljina+0x1>
     2a8:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <duty_duljina>
}
     2ac:	9f 91       	pop	r25
     2ae:	8f 91       	pop	r24
     2b0:	0f 90       	pop	r0
     2b2:	0f be       	out	0x3f, r0	; 63
     2b4:	0f 90       	pop	r0
     2b6:	1f 90       	pop	r1
     2b8:	18 95       	reti

000002ba <__vector_9>:


ISR(TIMER1_OVF_vect){  //prekid timera1
     2ba:	1f 92       	push	r1
     2bc:	0f 92       	push	r0
     2be:	0f b6       	in	r0, 0x3f	; 63
     2c0:	0f 92       	push	r0
     2c2:	11 24       	eor	r1, r1
     2c4:	2f 93       	push	r18
     2c6:	3f 93       	push	r19
     2c8:	4f 93       	push	r20
     2ca:	5f 93       	push	r21
     2cc:	6f 93       	push	r22
     2ce:	7f 93       	push	r23
     2d0:	8f 93       	push	r24
     2d2:	9f 93       	push	r25
     2d4:	af 93       	push	r26
     2d6:	bf 93       	push	r27
     2d8:	ef 93       	push	r30
     2da:	ff 93       	push	r31
	
	lcd_clrscr();
     2dc:	2a d3       	rcall	.+1620   	; 0x932 <lcd_clrscr>
	lcd_home();
     2de:	36 d3       	rcall	.+1644   	; 0x94c <lcd_home>
     2e0:	80 e6       	ldi	r24, 0x60	; 96
	lcd_print("greska pwm-a");
     2e2:	90 e0       	ldi	r25, 0x00	; 0
     2e4:	9f 93       	push	r25
     2e6:	8f 93       	push	r24
     2e8:	f5 d2       	rcall	.+1514   	; 0x8d4 <lcd_print>
	
	alarm(false);
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	6b df       	rcall	.-298    	; 0x1c4 <alarm>
     2ee:	0f 90       	pop	r0
}
     2f0:	0f 90       	pop	r0
     2f2:	ff 91       	pop	r31
     2f4:	ef 91       	pop	r30
     2f6:	bf 91       	pop	r27
     2f8:	af 91       	pop	r26
     2fa:	9f 91       	pop	r25
     2fc:	8f 91       	pop	r24
     2fe:	7f 91       	pop	r23
     300:	6f 91       	pop	r22
     302:	5f 91       	pop	r21
     304:	4f 91       	pop	r20
     306:	3f 91       	pop	r19
     308:	2f 91       	pop	r18
     30a:	0f 90       	pop	r0
     30c:	0f be       	out	0x3f, r0	; 63
     30e:	0f 90       	pop	r0
     310:	1f 90       	pop	r1
     312:	18 95       	reti

00000314 <inicijalizacija>:
     314:	62 d2       	rcall	.+1220   	; 0x7da <lcd_init>


void inicijalizacija(){
	
	lcd_init();
	adc_init();
     316:	3c df       	rcall	.-392    	; 0x190 <adc_init>
	sei();
     318:	78 94       	sei
	timer1_init();
     31a:	58 d1       	rcall	.+688    	; 0x5cc <timer1_init>
     31c:	c0 9a       	sbi	0x18, 0	; 24
	
	
	set_port(PORTB ,PB0 ,1);	//PB0 tipkalo
     31e:	bc 9a       	sbi	0x17, 4	; 23
	output_port(DDRB,PB4);		//PB4 ledica
     320:	8b b7       	in	r24, 0x3b	; 59
	
	
	//omoguceni prekidi na INT1 i INT2
	set_bit_reg(GICR ,INT1);
     322:	80 68       	ori	r24, 0x80	; 128
     324:	8b bf       	out	0x3b, r24	; 59
     326:	8b b7       	in	r24, 0x3b	; 59
	set_bit_reg(GICR ,INT2); 
     328:	80 62       	ori	r24, 0x20	; 32
     32a:	8b bf       	out	0x3b, r24	; 59
     32c:	85 b7       	in	r24, 0x35	; 53
	
	
	//INT1 okida na rastuci bit
	set_bit_reg(MCUCR,ISC10); // ISC10 = 1
     32e:	84 60       	ori	r24, 0x04	; 4
     330:	85 bf       	out	0x35, r24	; 53
     332:	85 b7       	in	r24, 0x35	; 53
	set_bit_reg(MCUCR,ISC11); // ISC11 = 1
     334:	88 60       	ori	r24, 0x08	; 8
     336:	85 bf       	out	0x35, r24	; 53
     338:	85 b7       	in	r24, 0x35	; 53


	//INT2 okida na padajuci bit
	//specijalni slucaj konfiguracije
	reset_bit_reg(MCUCR,ISC2); // ISC2 = 0
     33a:	8f 7b       	andi	r24, 0xBF	; 191
     33c:	85 bf       	out	0x35, r24	; 53
     33e:	1d bc       	out	0x2d, r1	; 45


	TCNT1=0;
     340:	1c bc       	out	0x2c, r1	; 44
     342:	08 95       	ret

00000344 <main>:
     344:	e7 df       	rcall	.-50     	; 0x314 <inicijalizacija>
		float Vout0;
		float Temp, Temp_stara, rezultat0;
		
		//za CO2
		float CO2, duty_cycle, postotak_duty;
		uint8_t brojac_ekrana = 0;
     346:	c0 e0       	ldi	r28, 0x00	; 0
		if (brojac_ekrana == 0){
			
			lcd_clrscr();
			lcd_home();
			//lcd_print("%0.2f ", postotak_duty);
			lcd_print("CO2:");
     348:	0d e6       	ldi	r16, 0x6D	; 109
     34a:	10 e0       	ldi	r17, 0x00	; 0
			
			}else if(brojac_ekrana == 2){
				
				lcd_clrscr();
				lcd_home();
				lcd_print("Kvaliteta zraka:");
     34c:	0f 2e       	mov	r0, r31
     34e:	f2 e9       	ldi	r31, 0x92	; 146
     350:	4f 2e       	mov	r4, r31
     352:	f0 e0       	ldi	r31, 0x00	; 0
     354:	5f 2e       	mov	r5, r31
     356:	f0 2d       	mov	r31, r0
					
				}else if (CO2>1001 && CO2<1500){
					lcd_print("losa");
					
				}else{
					lcd_print("jako losa");
     358:	0f 2e       	mov	r0, r31
     35a:	f6 eb       	ldi	r31, 0xB6	; 182
     35c:	2f 2e       	mov	r2, r31
     35e:	f0 e0       	ldi	r31, 0x00	; 0
     360:	3f 2e       	mov	r3, r31
     362:	f0 2d       	mov	r31, r0
					
				}else{
				
					lcd_clrscr();
					lcd_home();
					lcd_print("Temperatura:");
     364:	0f 2e       	mov	r0, r31
     366:	fc e7       	ldi	r31, 0x7C	; 124
     368:	cf 2e       	mov	r12, r31
     36a:	f0 e0       	ldi	r31, 0x00	; 0
     36c:	df 2e       	mov	r13, r31
     36e:	f0 2d       	mov	r31, r0
					lcd_gotoxy(1,0);
					lcd_print("%0.2f%cC", Temp, 178);
     370:	0f 2e       	mov	r0, r31
     372:	f2 eb       	ldi	r31, 0xB2	; 178
     374:	6f 2e       	mov	r6, r31
     376:	f0 2d       	mov	r31, r0
     378:	0f 2e       	mov	r0, r31
     37a:	f9 e8       	ldi	r31, 0x89	; 137
     37c:	ef 2e       	mov	r14, r31
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	ff 2e       	mov	r15, r31
     382:	f0 2d       	mov	r31, r0
		
	while (1){
		
		duty_cycle = duty_duljina * 0.001;
		postotak_duty = (duty_cycle/1.002)*100;  //1.002 je sirina impulsa
		CO2 = 2000 * (postotak_duty/100);
     384:	60 91 c2 00 	lds	r22, 0x00C2	; 0x8000c2 <duty_duljina>
     388:	70 91 c3 00 	lds	r23, 0x00C3	; 0x8000c3 <duty_duljina+0x1>
     38c:	80 e0       	ldi	r24, 0x00	; 0
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	4a d7       	rcall	.+3732   	; 0x1226 <__floatunsisf>
     392:	2f e6       	ldi	r18, 0x6F	; 111
     394:	32 e1       	ldi	r19, 0x12	; 18
     396:	43 e8       	ldi	r20, 0x83	; 131
     398:	5a e3       	ldi	r21, 0x3A	; 58
     39a:	fb d7       	rcall	.+4086   	; 0x1392 <__mulsf3>
     39c:	29 e8       	ldi	r18, 0x89	; 137
     39e:	31 e4       	ldi	r19, 0x41	; 65
     3a0:	40 e8       	ldi	r20, 0x80	; 128
     3a2:	5f e3       	ldi	r21, 0x3F	; 63
     3a4:	a7 d6       	rcall	.+3406   	; 0x10f4 <__divsf3>
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	48 ec       	ldi	r20, 0xC8	; 200
     3ac:	52 e4       	ldi	r21, 0x42	; 66
     3ae:	f1 d7       	rcall	.+4066   	; 0x1392 <__mulsf3>
     3b0:	20 e0       	ldi	r18, 0x00	; 0
     3b2:	30 e0       	ldi	r19, 0x00	; 0
     3b4:	48 ec       	ldi	r20, 0xC8	; 200
     3b6:	52 e4       	ldi	r21, 0x42	; 66
     3b8:	9d d6       	rcall	.+3386   	; 0x10f4 <__divsf3>
     3ba:	20 e0       	ldi	r18, 0x00	; 0
     3bc:	30 e0       	ldi	r19, 0x00	; 0
     3be:	4a ef       	ldi	r20, 0xFA	; 250
     3c0:	54 e4       	ldi	r21, 0x44	; 68
     3c2:	e7 d7       	rcall	.+4046   	; 0x1392 <__mulsf3>
     3c4:	96 2e       	mov	r9, r22
     3c6:	a7 2e       	mov	r10, r23
     3c8:	b8 2e       	mov	r11, r24
     3ca:	d9 2f       	mov	r29, r25
		
		if (CO2>1000){
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	4a e7       	ldi	r20, 0x7A	; 122
     3d2:	54 e4       	ldi	r21, 0x44	; 68
     3d4:	da d7       	rcall	.+4020   	; 0x138a <__gesf2>
     3d6:	18 16       	cp	r1, r24
     3d8:	14 f4       	brge	.+4      	; 0x3de <main+0x9a>
			alarm(true);
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	f3 de       	rcall	.-538    	; 0x1c4 <alarm>
		}
		
		
		if(debounce (&PINB , PB0 , 0) == 0){
     3de:	40 e0       	ldi	r20, 0x00	; 0
     3e0:	60 e0       	ldi	r22, 0x00	; 0
     3e2:	86 e3       	ldi	r24, 0x36	; 54
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	fc d0       	rcall	.+504    	; 0x5e0 <debounce>
     3e8:	81 11       	cpse	r24, r1
     3ea:	05 c0       	rjmp	.+10     	; 0x3f6 <main+0xb2>
     3ec:	c0 9a       	sbi	0x18, 0	; 24
			set_port(PORTB , PB0 , 1);
     3ee:	cf 5f       	subi	r28, 0xFF	; 255
			brojac_ekrana++;
     3f0:	c3 30       	cpi	r28, 0x03	; 3
						
			if(brojac_ekrana == 3)
     3f2:	11 f4       	brne	.+4      	; 0x3f8 <main+0xb4>
				brojac_ekrana = 0;
				
		}else{
			set_port(PORTB , PB7 , 0);
     3f4:	03 c0       	rjmp	.+6      	; 0x3fc <main+0xb8>
		}
		
	
		
		if (brojac_ekrana == 0){
     3f6:	c7 98       	cbi	0x18, 7	; 24
			
			lcd_clrscr();
     3f8:	c1 11       	cpse	r28, r1
			lcd_home();
     3fa:	24 c0       	rjmp	.+72     	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     3fc:	9a d2       	rcall	.+1332   	; 0x932 <lcd_clrscr>
			//lcd_print("%0.2f ", postotak_duty);
			lcd_print("CO2:");
     3fe:	a6 d2       	rcall	.+1356   	; 0x94c <lcd_home>
     400:	1f 93       	push	r17
     402:	0f 93       	push	r16
     404:	67 d2       	rcall	.+1230   	; 0x8d4 <lcd_print>
			lcd_gotoxy(1,0);
     406:	60 e0       	ldi	r22, 0x00	; 0
     408:	81 e0       	ldi	r24, 0x01	; 1
     40a:	86 d2       	rcall	.+1292   	; 0x918 <lcd_gotoxy>
			lcd_print("%0.0f ppm", CO2);
     40c:	df 93       	push	r29
     40e:	bf 92       	push	r11
     410:	af 92       	push	r10
     412:	9f 92       	push	r9
     414:	82 e7       	ldi	r24, 0x72	; 114
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	9f 93       	push	r25
     41a:	8f 93       	push	r24
     41c:	5b d2       	rcall	.+1206   	; 0x8d4 <lcd_print>
     41e:	8f ef       	ldi	r24, 0xFF	; 255
     420:	94 e3       	ldi	r25, 0x34	; 52
     422:	2c e0       	ldi	r18, 0x0C	; 12
     424:	81 50       	subi	r24, 0x01	; 1
     426:	90 40       	sbci	r25, 0x00	; 0
     428:	20 40       	sbci	r18, 0x00	; 0
     42a:	e1 f7       	brne	.-8      	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
     42c:	00 c0       	rjmp	.+0      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
     42e:	00 00       	nop
     430:	8d b7       	in	r24, 0x3d	; 61
     432:	9e b7       	in	r25, 0x3e	; 62
     434:	08 96       	adiw	r24, 0x08	; 8
     436:	0f b6       	in	r0, 0x3f	; 63
     438:	f8 94       	cli
     43a:	9e bf       	out	0x3e, r25	; 62
     43c:	0f be       	out	0x3f, r0	; 63
     43e:	8d bf       	out	0x3d, r24	; 61
			
			_delay_ms(500);
			
		
		}else if (brojac_ekrana == 1){
     440:	c0 e0       	ldi	r28, 0x00	; 0
     442:	a0 cf       	rjmp	.-192    	; 0x384 <main+0x40>
			
			//za ADC0 za LM35
			rezultat0 = usrednjavanje(0);
     444:	c1 30       	cpi	r28, 0x01	; 1
     446:	09 f0       	breq	.+2      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
     448:	38 c0       	rjmp	.+112    	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     44a:	80 e0       	ldi	r24, 0x00	; 0
					
					_delay_ms(500);
					
				}else{
				
					lcd_clrscr();
     44c:	e5 de       	rcall	.-566    	; 0x218 <usrednjavanje>
					lcd_home();
     44e:	4b 01       	movw	r8, r22
     450:	5c 01       	movw	r10, r24
					lcd_print("Temperatura:");
     452:	6f d2       	rcall	.+1246   	; 0x932 <lcd_clrscr>
     454:	7b d2       	rcall	.+1270   	; 0x94c <lcd_home>
     456:	df 92       	push	r13
     458:	cf 92       	push	r12
					lcd_gotoxy(1,0);
     45a:	3c d2       	rcall	.+1144   	; 0x8d4 <lcd_print>
     45c:	60 e0       	ldi	r22, 0x00	; 0
     45e:	81 e0       	ldi	r24, 0x01	; 1
					lcd_print("%0.2f%cC", Temp, 178);
     460:	5b d2       	rcall	.+1206   	; 0x918 <lcd_gotoxy>
     462:	1f 92       	push	r1
     464:	6f 92       	push	r6
     466:	20 e0       	ldi	r18, 0x00	; 0
     468:	30 e0       	ldi	r19, 0x00	; 0
     46a:	40 ea       	ldi	r20, 0xA0	; 160
     46c:	50 e4       	ldi	r21, 0x40	; 64
     46e:	c5 01       	movw	r24, r10
     470:	b4 01       	movw	r22, r8
     472:	8f d7       	rcall	.+3870   	; 0x1392 <__mulsf3>
     474:	20 e0       	ldi	r18, 0x00	; 0
     476:	30 ec       	ldi	r19, 0xC0	; 192
     478:	4f e7       	ldi	r20, 0x7F	; 127
     47a:	54 e4       	ldi	r21, 0x44	; 68
     47c:	3b d6       	rcall	.+3190   	; 0x10f4 <__divsf3>
     47e:	20 e0       	ldi	r18, 0x00	; 0
     480:	30 e0       	ldi	r19, 0x00	; 0
     482:	48 ec       	ldi	r20, 0xC8	; 200
     484:	52 e4       	ldi	r21, 0x42	; 66
     486:	85 d7       	rcall	.+3850   	; 0x1392 <__mulsf3>
     488:	9f 93       	push	r25
     48a:	8f 93       	push	r24
     48c:	7f 93       	push	r23
     48e:	6f 93       	push	r22
     490:	ff 92       	push	r15
     492:	ef 92       	push	r14
     494:	1f d2       	rcall	.+1086   	; 0x8d4 <lcd_print>
     496:	9f ef       	ldi	r25, 0xFF	; 255
     498:	24 e3       	ldi	r18, 0x34	; 52
     49a:	8c e0       	ldi	r24, 0x0C	; 12
     49c:	91 50       	subi	r25, 0x01	; 1
     49e:	20 40       	sbci	r18, 0x00	; 0
     4a0:	80 40       	sbci	r24, 0x00	; 0
     4a2:	e1 f7       	brne	.-8      	; 0x49c <__EEPROM_REGION_LENGTH__+0x9c>
     4a4:	00 c0       	rjmp	.+0      	; 0x4a6 <__EEPROM_REGION_LENGTH__+0xa6>
     4a6:	00 00       	nop
     4a8:	8d b7       	in	r24, 0x3d	; 61
     4aa:	9e b7       	in	r25, 0x3e	; 62
     4ac:	0a 96       	adiw	r24, 0x0a	; 10
     4ae:	0f b6       	in	r0, 0x3f	; 63
     4b0:	f8 94       	cli
     4b2:	9e bf       	out	0x3e, r25	; 62
					
					_delay_ms(500);
				}
				
			
			}else if(brojac_ekrana == 2){
     4b4:	0f be       	out	0x3f, r0	; 63
     4b6:	8d bf       	out	0x3d, r24	; 61
				
				lcd_clrscr();
     4b8:	65 cf       	rjmp	.-310    	; 0x384 <main+0x40>
     4ba:	c2 30       	cpi	r28, 0x02	; 2
				lcd_home();
     4bc:	09 f0       	breq	.+2      	; 0x4c0 <__EEPROM_REGION_LENGTH__+0xc0>
     4be:	62 cf       	rjmp	.-316    	; 0x384 <main+0x40>
				lcd_print("Kvaliteta zraka:");
     4c0:	38 d2       	rcall	.+1136   	; 0x932 <lcd_clrscr>
     4c2:	44 d2       	rcall	.+1160   	; 0x94c <lcd_home>
     4c4:	5f 92       	push	r5
				//lcd_print("%0.0f ppm", CO2);
				lcd_gotoxy(1,0);
     4c6:	4f 92       	push	r4
     4c8:	05 d2       	rcall	.+1034   	; 0x8d4 <lcd_print>
     4ca:	60 e0       	ldi	r22, 0x00	; 0
     4cc:	81 e0       	ldi	r24, 0x01	; 1
				
				
				if (CO2<600){
     4ce:	24 d2       	rcall	.+1096   	; 0x918 <lcd_gotoxy>
     4d0:	0f 90       	pop	r0
     4d2:	0f 90       	pop	r0
     4d4:	20 e0       	ldi	r18, 0x00	; 0
     4d6:	30 e0       	ldi	r19, 0x00	; 0
     4d8:	46 e1       	ldi	r20, 0x16	; 22
     4da:	54 e4       	ldi	r21, 0x44	; 68
     4dc:	69 2d       	mov	r22, r9
     4de:	7a 2d       	mov	r23, r10
     4e0:	8b 2d       	mov	r24, r11
     4e2:	9d 2f       	mov	r25, r29
     4e4:	03 d6       	rcall	.+3078   	; 0x10ec <__cmpsf2>
     4e6:	88 23       	and	r24, r24
					lcd_print("odlicna");
     4e8:	44 f4       	brge	.+16     	; 0x4fa <__EEPROM_REGION_LENGTH__+0xfa>
     4ea:	83 ea       	ldi	r24, 0xA3	; 163
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	9f 93       	push	r25
     4f0:	8f 93       	push	r24
     4f2:	f0 d1       	rcall	.+992    	; 0x8d4 <lcd_print>
     4f4:	0f 90       	pop	r0
     4f6:	0f 90       	pop	r0
					
				}else if(CO2>601 && CO2<800){
     4f8:	5f c0       	rjmp	.+190    	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
     4fa:	20 e0       	ldi	r18, 0x00	; 0
     4fc:	30 e4       	ldi	r19, 0x40	; 64
     4fe:	46 e1       	ldi	r20, 0x16	; 22
     500:	54 e4       	ldi	r21, 0x44	; 68
     502:	69 2d       	mov	r22, r9
     504:	7a 2d       	mov	r23, r10
     506:	8b 2d       	mov	r24, r11
     508:	9d 2f       	mov	r25, r29
     50a:	3f d7       	rcall	.+3710   	; 0x138a <__gesf2>
     50c:	18 16       	cp	r1, r24
     50e:	9c f4       	brge	.+38     	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
     510:	20 e0       	ldi	r18, 0x00	; 0
     512:	30 e0       	ldi	r19, 0x00	; 0
     514:	48 e4       	ldi	r20, 0x48	; 72
     516:	54 e4       	ldi	r21, 0x44	; 68
     518:	69 2d       	mov	r22, r9
     51a:	7a 2d       	mov	r23, r10
     51c:	8b 2d       	mov	r24, r11
     51e:	9d 2f       	mov	r25, r29
     520:	e5 d5       	rcall	.+3018   	; 0x10ec <__cmpsf2>
     522:	88 23       	and	r24, r24
					lcd_print("jako dobra");
     524:	44 f4       	brge	.+16     	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
     526:	8b ea       	ldi	r24, 0xAB	; 171
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	9f 93       	push	r25
     52c:	8f 93       	push	r24
     52e:	d2 d1       	rcall	.+932    	; 0x8d4 <lcd_print>
     530:	0f 90       	pop	r0
					
				}else if(CO2>801 && CO2<1000){
     532:	0f 90       	pop	r0
     534:	41 c0       	rjmp	.+130    	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
     536:	20 e0       	ldi	r18, 0x00	; 0
     538:	30 e4       	ldi	r19, 0x40	; 64
     53a:	48 e4       	ldi	r20, 0x48	; 72
     53c:	54 e4       	ldi	r21, 0x44	; 68
     53e:	69 2d       	mov	r22, r9
     540:	7a 2d       	mov	r23, r10
     542:	8b 2d       	mov	r24, r11
     544:	9d 2f       	mov	r25, r29
     546:	21 d7       	rcall	.+3650   	; 0x138a <__gesf2>
     548:	18 16       	cp	r1, r24
     54a:	9c f4       	brge	.+38     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
     54c:	20 e0       	ldi	r18, 0x00	; 0
     54e:	30 e0       	ldi	r19, 0x00	; 0
     550:	4a e7       	ldi	r20, 0x7A	; 122
     552:	54 e4       	ldi	r21, 0x44	; 68
     554:	69 2d       	mov	r22, r9
     556:	7a 2d       	mov	r23, r10
     558:	8b 2d       	mov	r24, r11
     55a:	9d 2f       	mov	r25, r29
     55c:	c7 d5       	rcall	.+2958   	; 0x10ec <__cmpsf2>
					lcd_print("dobra");
     55e:	88 23       	and	r24, r24
     560:	44 f4       	brge	.+16     	; 0x572 <__EEPROM_REGION_LENGTH__+0x172>
     562:	80 eb       	ldi	r24, 0xB0	; 176
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	9f 93       	push	r25
     568:	8f 93       	push	r24
     56a:	b4 d1       	rcall	.+872    	; 0x8d4 <lcd_print>
     56c:	0f 90       	pop	r0
					
				}else if (CO2>1001 && CO2<1500){
     56e:	0f 90       	pop	r0
     570:	23 c0       	rjmp	.+70     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
     572:	20 e0       	ldi	r18, 0x00	; 0
     574:	30 e4       	ldi	r19, 0x40	; 64
     576:	4a e7       	ldi	r20, 0x7A	; 122
     578:	54 e4       	ldi	r21, 0x44	; 68
     57a:	69 2d       	mov	r22, r9
     57c:	7a 2d       	mov	r23, r10
     57e:	8b 2d       	mov	r24, r11
     580:	9d 2f       	mov	r25, r29
     582:	03 d7       	rcall	.+3590   	; 0x138a <__gesf2>
     584:	18 16       	cp	r1, r24
     586:	9c f4       	brge	.+38     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
     588:	20 e0       	ldi	r18, 0x00	; 0
     58a:	30 e8       	ldi	r19, 0x80	; 128
     58c:	4b eb       	ldi	r20, 0xBB	; 187
     58e:	54 e4       	ldi	r21, 0x44	; 68
     590:	69 2d       	mov	r22, r9
     592:	7a 2d       	mov	r23, r10
     594:	8b 2d       	mov	r24, r11
     596:	9d 2f       	mov	r25, r29
     598:	a9 d5       	rcall	.+2898   	; 0x10ec <__cmpsf2>
     59a:	88 23       	and	r24, r24
					lcd_print("losa");
     59c:	44 f4       	brge	.+16     	; 0x5ae <__EEPROM_REGION_LENGTH__+0x1ae>
     59e:	8b eb       	ldi	r24, 0xBB	; 187
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	9f 93       	push	r25
     5a4:	8f 93       	push	r24
     5a6:	96 d1       	rcall	.+812    	; 0x8d4 <lcd_print>
     5a8:	0f 90       	pop	r0
     5aa:	0f 90       	pop	r0
     5ac:	05 c0       	rjmp	.+10     	; 0x5b8 <__EEPROM_REGION_LENGTH__+0x1b8>
					
				}else{
					lcd_print("jako losa");
     5ae:	3f 92       	push	r3
     5b0:	2f 92       	push	r2
     5b2:	90 d1       	rcall	.+800    	; 0x8d4 <lcd_print>
     5b4:	0f 90       	pop	r0
     5b6:	0f 90       	pop	r0
     5b8:	8f ef       	ldi	r24, 0xFF	; 255
     5ba:	92 e5       	ldi	r25, 0x52	; 82
     5bc:	27 e0       	ldi	r18, 0x07	; 7
     5be:	81 50       	subi	r24, 0x01	; 1
     5c0:	90 40       	sbci	r25, 0x00	; 0
     5c2:	20 40       	sbci	r18, 0x00	; 0
     5c4:	e1 f7       	brne	.-8      	; 0x5be <__EEPROM_REGION_LENGTH__+0x1be>
     5c6:	00 c0       	rjmp	.+0      	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
     5c8:	00 00       	nop
     5ca:	dc ce       	rjmp	.-584    	; 0x384 <main+0x40>

000005cc <timer1_init>:
     5cc:	8e b5       	in	r24, 0x2e	; 46
	TIMSK |= (1 << TOIE0); // omoguæi prekid TOV0
}

void timer1_init(){
	
	TCCR1B &= ~TIMER_PRESCALER_MASK;
     5ce:	88 7f       	andi	r24, 0xF8	; 248
     5d0:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= TIMER1_PRESCALER_8; // postavi djelitelj za timer1
     5d2:	8e b5       	in	r24, 0x2e	; 46
     5d4:	82 60       	ori	r24, 0x02	; 2
     5d6:	8e bd       	out	0x2e, r24	; 46
	
	TIMSK |= (1 << TOIE1); // omoguæi prekid TOV1
     5d8:	89 b7       	in	r24, 0x39	; 57
     5da:	84 60       	ori	r24, 0x04	; 4
     5dc:	89 bf       	out	0x39, r24	; 57
     5de:	08 95       	ret

000005e0 <debounce>:
		if (brojac >= DEBOUNCE_TIME * 9 /10){
			f();
		}
	
	}
}
     5e0:	ef 92       	push	r14
     5e2:	ff 92       	push	r15
     5e4:	0f 93       	push	r16
     5e6:	1f 93       	push	r17
     5e8:	cf 93       	push	r28
     5ea:	df 93       	push	r29
     5ec:	ec 01       	movw	r28, r24
     5ee:	06 2f       	mov	r16, r22
     5f0:	a1 e0       	ldi	r26, 0x01	; 1
     5f2:	b0 e0       	ldi	r27, 0x00	; 0
     5f4:	06 2e       	mov	r0, r22
     5f6:	02 c0       	rjmp	.+4      	; 0x5fc <debounce+0x1c>
     5f8:	aa 0f       	add	r26, r26
     5fa:	bb 1f       	adc	r27, r27
     5fc:	0a 94       	dec	r0
     5fe:	e2 f7       	brpl	.-8      	; 0x5f8 <debounce+0x18>
     600:	e8 81       	ld	r30, Y
     602:	f0 e0       	ldi	r31, 0x00	; 0
     604:	ea 23       	and	r30, r26
     606:	fb 23       	and	r31, r27
     608:	02 c0       	rjmp	.+4      	; 0x60e <debounce+0x2e>
     60a:	f5 95       	asr	r31
     60c:	e7 95       	ror	r30
     60e:	6a 95       	dec	r22
     610:	e2 f7       	brpl	.-8      	; 0x60a <debounce+0x2a>
     612:	84 2f       	mov	r24, r20
     614:	90 e0       	ldi	r25, 0x00	; 0
     616:	e8 17       	cp	r30, r24
     618:	f9 07       	cpc	r31, r25
     61a:	09 f5       	brne	.+66     	; 0x65e <debounce+0x7e>
     61c:	69 e1       	ldi	r22, 0x19	; 25
     61e:	70 e0       	ldi	r23, 0x00	; 0
     620:	e1 2c       	mov	r14, r1
     622:	f1 2c       	mov	r15, r1
     624:	8f ec       	ldi	r24, 0xCF	; 207
     626:	97 e0       	ldi	r25, 0x07	; 7
     628:	01 97       	sbiw	r24, 0x01	; 1
     62a:	f1 f7       	brne	.-4      	; 0x628 <debounce+0x48>
     62c:	00 c0       	rjmp	.+0      	; 0x62e <debounce+0x4e>
     62e:	00 00       	nop
     630:	28 81       	ld	r18, Y
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	2a 23       	and	r18, r26
     636:	3b 23       	and	r19, r27
     638:	00 2e       	mov	r0, r16
     63a:	02 c0       	rjmp	.+4      	; 0x640 <debounce+0x60>
     63c:	35 95       	asr	r19
     63e:	27 95       	ror	r18
     640:	0a 94       	dec	r0
     642:	e2 f7       	brpl	.-8      	; 0x63c <debounce+0x5c>
     644:	e2 17       	cp	r30, r18
     646:	f3 07       	cpc	r31, r19
     648:	19 f4       	brne	.+6      	; 0x650 <debounce+0x70>
     64a:	9f ef       	ldi	r25, 0xFF	; 255
     64c:	e9 1a       	sub	r14, r25
     64e:	f9 0a       	sbc	r15, r25
     650:	61 50       	subi	r22, 0x01	; 1
     652:	71 09       	sbc	r23, r1
     654:	39 f7       	brne	.-50     	; 0x624 <debounce+0x44>
     656:	86 e1       	ldi	r24, 0x16	; 22
     658:	e8 16       	cp	r14, r24
     65a:	f1 04       	cpc	r15, r1
     65c:	24 f4       	brge	.+8      	; 0x666 <debounce+0x86>
     65e:	91 e0       	ldi	r25, 0x01	; 1
     660:	84 2f       	mov	r24, r20
     662:	89 27       	eor	r24, r25
     664:	01 c0       	rjmp	.+2      	; 0x668 <debounce+0x88>
     666:	84 2f       	mov	r24, r20
     668:	df 91       	pop	r29
     66a:	cf 91       	pop	r28
     66c:	1f 91       	pop	r17
     66e:	0f 91       	pop	r16
     670:	ff 90       	pop	r15
     672:	ef 90       	pop	r14
     674:	08 95       	ret

00000676 <BUZZ>:

// funkcija za zujalicu
// duration - trajanje zvuka u sekundama
// freq - frekvencija
void BUZZ(double duration, int freq) 
{
     676:	8f 92       	push	r8
     678:	9f 92       	push	r9
     67a:	af 92       	push	r10
     67c:	bf 92       	push	r11
     67e:	cf 92       	push	r12
     680:	df 92       	push	r13
     682:	ef 92       	push	r14
     684:	ff 92       	push	r15
     686:	0f 93       	push	r16
     688:	1f 93       	push	r17
     68a:	6b 01       	movw	r12, r22
     68c:	7c 01       	movw	r14, r24
	long int i,cycles;
	cycles = duration * freq; // Compute the number of cycles to loop toggling the pin
     68e:	ba 01       	movw	r22, r20
     690:	55 0f       	add	r21, r21
     692:	88 0b       	sbc	r24, r24
     694:	99 0b       	sbc	r25, r25
     696:	c9 d5       	rcall	.+2962   	; 0x122a <__floatsisf>
     698:	4b 01       	movw	r8, r22
     69a:	5c 01       	movw	r10, r24
     69c:	a7 01       	movw	r20, r14
     69e:	96 01       	movw	r18, r12
     6a0:	78 d6       	rcall	.+3312   	; 0x1392 <__mulsf3>
     6a2:	90 d5       	rcall	.+2848   	; 0x11c4 <__fixsfsi>
     6a4:	6b 01       	movw	r12, r22
     6a6:	7c 01       	movw	r14, r24
	long int period = 1.0/freq * 100000; // Compute a half cycle period
     6a8:	a5 01       	movw	r20, r10
     6aa:	94 01       	movw	r18, r8
     6ac:	60 e0       	ldi	r22, 0x00	; 0
     6ae:	70 e0       	ldi	r23, 0x00	; 0
     6b0:	80 e8       	ldi	r24, 0x80	; 128
     6b2:	9f e3       	ldi	r25, 0x3F	; 63
     6b4:	1f d5       	rcall	.+2622   	; 0x10f4 <__divsf3>
     6b6:	20 e0       	ldi	r18, 0x00	; 0
     6b8:	30 e5       	ldi	r19, 0x50	; 80
     6ba:	43 ec       	ldi	r20, 0xC3	; 195
     6bc:	57 e4       	ldi	r21, 0x47	; 71
     6be:	69 d6       	rcall	.+3282   	; 0x1392 <__mulsf3>
     6c0:	81 d5       	rcall	.+2818   	; 0x11c4 <__fixsfsi>
	long int half_period =  period / 2;
	BUZZER_DDR = (1 << BUZZER_PIN) | BUZZER_DDR;  // Set the port for the buzzer output
     6c2:	8a 9a       	sbi	0x11, 2	; 17
	
	for (i=0; i < cycles; i++)   // Toggle the speaker the appropriate number of cycles
     6c4:	1c 14       	cp	r1, r12
     6c6:	1d 04       	cpc	r1, r13
     6c8:	1e 04       	cpc	r1, r14
     6ca:	1f 04       	cpc	r1, r15
     6cc:	0c f0       	brlt	.+2      	; 0x6d0 <BUZZ+0x5a>
     6ce:	3a c0       	rjmp	.+116    	; 0x744 <BUZZ+0xce>
	{
		half_period = period/2;
     6d0:	8b 01       	movw	r16, r22
     6d2:	9c 01       	movw	r18, r24
     6d4:	99 23       	and	r25, r25
     6d6:	24 f4       	brge	.+8      	; 0x6e0 <BUZZ+0x6a>
     6d8:	0f 5f       	subi	r16, 0xFF	; 255
     6da:	1f 4f       	sbci	r17, 0xFF	; 255
     6dc:	2f 4f       	sbci	r18, 0xFF	; 255
     6de:	3f 4f       	sbci	r19, 0xFF	; 255
     6e0:	35 95       	asr	r19
     6e2:	27 95       	ror	r18
     6e4:	17 95       	ror	r17
     6e6:	07 95       	ror	r16
     6e8:	81 2c       	mov	r8, r1
     6ea:	91 2c       	mov	r9, r1
     6ec:	54 01       	movw	r10, r8
		while(half_period--) {
     6ee:	01 15       	cp	r16, r1
     6f0:	11 05       	cpc	r17, r1
     6f2:	21 05       	cpc	r18, r1
     6f4:	31 05       	cpc	r19, r1
     6f6:	11 f1       	breq	.+68     	; 0x73c <BUZZ+0xc6>
     6f8:	d9 01       	movw	r26, r18
     6fa:	c8 01       	movw	r24, r16
     6fc:	b9 01       	movw	r22, r18
     6fe:	a8 01       	movw	r20, r16
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     700:	ea e1       	ldi	r30, 0x1A	; 26
     702:	ea 95       	dec	r30
     704:	f1 f7       	brne	.-4      	; 0x702 <BUZZ+0x8c>
     706:	00 c0       	rjmp	.+0      	; 0x708 <BUZZ+0x92>
     708:	41 50       	subi	r20, 0x01	; 1
     70a:	51 09       	sbc	r21, r1
     70c:	61 09       	sbc	r22, r1
     70e:	71 09       	sbc	r23, r1
     710:	b9 f7       	brne	.-18     	; 0x700 <BUZZ+0x8a>
     712:	16 c0       	rjmp	.+44     	; 0x740 <BUZZ+0xca>
     714:	4a e1       	ldi	r20, 0x1A	; 26
     716:	4a 95       	dec	r20
     718:	f1 f7       	brne	.-4      	; 0x716 <BUZZ+0xa0>
     71a:	00 c0       	rjmp	.+0      	; 0x71c <BUZZ+0xa6>
     71c:	01 97       	sbiw	r24, 0x01	; 1
     71e:	a1 09       	sbc	r26, r1
     720:	b1 09       	sbc	r27, r1
		}                       
		
		BUZZER_PORT = (1 << BUZZER_PIN) | BUZZER_PORT;    // Set the port pin
		
		half_period = period/2;
		while(half_period--) {
     722:	c1 f7       	brne	.-16     	; 0x714 <BUZZ+0x9e>
			_delay_us(10);
		}                       // Wait a half cycle to clear the port pin
		BUZZER_PORT = ~(1 << BUZZER_PIN) & BUZZER_PORT;   // Clear the port pin
     724:	92 98       	cbi	0x12, 2	; 18
	cycles = duration * freq; // Compute the number of cycles to loop toggling the pin
	long int period = 1.0/freq * 100000; // Compute a half cycle period
	long int half_period =  period / 2;
	BUZZER_DDR = (1 << BUZZER_PIN) | BUZZER_DDR;  // Set the port for the buzzer output
	
	for (i=0; i < cycles; i++)   // Toggle the speaker the appropriate number of cycles
     726:	8f ef       	ldi	r24, 0xFF	; 255
     728:	88 1a       	sub	r8, r24
     72a:	98 0a       	sbc	r9, r24
     72c:	a8 0a       	sbc	r10, r24
     72e:	b8 0a       	sbc	r11, r24
     730:	c8 14       	cp	r12, r8
     732:	d9 04       	cpc	r13, r9
     734:	ea 04       	cpc	r14, r10
     736:	fb 04       	cpc	r15, r11
     738:	d1 f6       	brne	.-76     	; 0x6ee <BUZZ+0x78>
     73a:	04 c0       	rjmp	.+8      	; 0x744 <BUZZ+0xce>
		half_period = period/2;
		while(half_period--) {
			_delay_us(10);
		}                       
		
		BUZZER_PORT = (1 << BUZZER_PIN) | BUZZER_PORT;    // Set the port pin
     73c:	92 9a       	sbi	0x12, 2	; 18
     73e:	f2 cf       	rjmp	.-28     	; 0x724 <BUZZ+0xae>
     740:	92 9a       	sbi	0x12, 2	; 18
     742:	e8 cf       	rjmp	.-48     	; 0x714 <BUZZ+0x9e>
			_delay_us(10);
		}                       // Wait a half cycle to clear the port pin
		BUZZER_PORT = ~(1 << BUZZER_PIN) & BUZZER_PORT;   // Clear the port pin
	}
	
     744:	1f 91       	pop	r17
     746:	0f 91       	pop	r16
     748:	ff 90       	pop	r15
     74a:	ef 90       	pop	r14
     74c:	df 90       	pop	r13
     74e:	cf 90       	pop	r12
     750:	bf 90       	pop	r11
     752:	af 90       	pop	r10
     754:	9f 90       	pop	r9
     756:	8f 90       	pop	r8
     758:	08 95       	ret

0000075a <lcd_e_toggle>:
     75a:	89 ef       	ldi	r24, 0xF9	; 249
     75c:	90 e0       	ldi	r25, 0x00	; 0
     75e:	01 97       	sbiw	r24, 0x01	; 1
     760:	f1 f7       	brne	.-4      	; 0x75e <lcd_e_toggle+0x4>
     762:	00 c0       	rjmp	.+0      	; 0x764 <lcd_e_toggle+0xa>
     764:	00 00       	nop
// FUNCTION: _auxToggleE
// PURPOSE: flush channel E
void lcd_e_toggle(void)
{
	_delay_us(1000);
    lcd_e_high();
     766:	c7 9a       	sbi	0x18, 7	; 24
     768:	89 ef       	ldi	r24, 0xF9	; 249
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	01 97       	sbiw	r24, 0x01	; 1
     76e:	f1 f7       	brne	.-4      	; 0x76c <lcd_e_toggle+0x12>
     770:	00 c0       	rjmp	.+0      	; 0x772 <lcd_e_toggle+0x18>
     772:	00 00       	nop
	_delay_us(1000);	//sensitive when changing CPU MHz!!!!!!!!!!!!!
    lcd_e_low();
     774:	c7 98       	cbi	0x18, 7	; 24
     776:	89 ef       	ldi	r24, 0xF9	; 249
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	01 97       	sbiw	r24, 0x01	; 1
     77c:	f1 f7       	brne	.-4      	; 0x77a <lcd_e_toggle+0x20>
     77e:	00 c0       	rjmp	.+0      	; 0x780 <lcd_e_toggle+0x26>
     780:	00 00       	nop
     782:	08 95       	ret

00000784 <lcd_write>:

//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_write
// PURPOSE: send a character or an instruction to the LCD
void lcd_write(uint8_t data,uint8_t rs) 
{
     784:	cf 93       	push	r28
     786:	c8 2f       	mov	r28, r24
	//check write type
    if (rs)    
     788:	66 23       	and	r22, r22
     78a:	11 f0       	breq	.+4      	; 0x790 <lcd_write+0xc>
       lcd_rs_high(); //write data
     78c:	95 9a       	sbi	0x12, 5	; 18
     78e:	01 c0       	rjmp	.+2      	; 0x792 <lcd_write+0xe>
    else     
       lcd_rs_low();  //write instruciton
     790:	95 98       	cbi	0x12, 5	; 18
        
    // output high nibble first 
	// prvo se alje gornjih 4 bita instrukcije, zatim donjih 4 bita instruukcije
	
    LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     792:	ab 98       	cbi	0x15, 3	; 21
    LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     794:	aa 98       	cbi	0x15, 2	; 21
    LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     796:	a9 98       	cbi	0x15, 1	; 21
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     798:	a8 98       	cbi	0x15, 0	; 21
	if(data & 0x80) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     79a:	cc 23       	and	r28, r28
     79c:	0c f4       	brge	.+2      	; 0x7a0 <lcd_write+0x1c>
     79e:	ab 9a       	sbi	0x15, 3	; 21
	if(data & 0x40) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     7a0:	c6 fd       	sbrc	r28, 6
     7a2:	aa 9a       	sbi	0x15, 2	; 21
	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     7a4:	c5 fd       	sbrc	r28, 5
     7a6:	a9 9a       	sbi	0x15, 1	; 21
	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
     7a8:	c4 fd       	sbrc	r28, 4
     7aa:	a8 9a       	sbi	0x15, 0	; 21
    lcd_e_toggle();
     7ac:	d6 df       	rcall	.-84     	; 0x75a <lcd_e_toggle>
 
    // output low nibble 
    LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     7ae:	ab 98       	cbi	0x15, 3	; 21
    LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     7b0:	aa 98       	cbi	0x15, 2	; 21
    LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     7b2:	a9 98       	cbi	0x15, 1	; 21
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     7b4:	a8 98       	cbi	0x15, 0	; 21
	if(data & 0x08) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     7b6:	c3 fd       	sbrc	r28, 3
     7b8:	ab 9a       	sbi	0x15, 3	; 21
	if(data & 0x04) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     7ba:	c2 fd       	sbrc	r28, 2
     7bc:	aa 9a       	sbi	0x15, 2	; 21
	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     7be:	c1 fd       	sbrc	r28, 1
     7c0:	a9 9a       	sbi	0x15, 1	; 21
	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     7c2:	c0 fd       	sbrc	r28, 0
    lcd_e_toggle();     
     7c4:	a8 9a       	sbi	0x15, 0	; 21
     7c6:	c9 df       	rcall	.-110    	; 0x75a <lcd_e_toggle>
  
    
    // all data pins high (inactive) 
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     7c8:	a8 9a       	sbi	0x15, 0	; 21
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     7ca:	a9 9a       	sbi	0x15, 1	; 21
    LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     7cc:	aa 9a       	sbi	0x15, 2	; 21
    LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     7ce:	ab 9a       	sbi	0x15, 3	; 21
}
     7d0:	cf 91       	pop	r28
     7d2:	08 95       	ret

000007d4 <lcd_instr>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_instr
// PURPOSE:  send an instruction to the LCD
void lcd_instr(uint8_t instr)
{
	lcd_write(instr,0);
     7d4:	60 e0       	ldi	r22, 0x00	; 0
     7d6:	d6 cf       	rjmp	.-84     	; 0x784 <lcd_write>
     7d8:	08 95       	ret

000007da <lcd_init>:
// FUNCTION: lcd_init
// PURPOSE:  Initialize LCD to 4 bit I/O mode
void lcd_init()
{
    // configure all port bits as output (LCD data and control lines on different ports 
    LCD_DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     7da:	8d 9a       	sbi	0x11, 5	; 17
    LCD_DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     7dc:	bf 9a       	sbi	0x17, 7	; 23
    LCD_DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     7de:	a0 9a       	sbi	0x14, 0	; 20
    LCD_DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     7e0:	a1 9a       	sbi	0x14, 1	; 20
    LCD_DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     7e2:	a2 9a       	sbi	0x14, 2	; 20
    LCD_DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     7e4:	a3 9a       	sbi	0x14, 3	; 20
	
	lcd_e_low();
     7e6:	c7 98       	cbi	0x18, 7	; 24
	lcd_rs_low();
     7e8:	95 98       	cbi	0x12, 5	; 18
     7ea:	8f e9       	ldi	r24, 0x9F	; 159
     7ec:	9f e0       	ldi	r25, 0x0F	; 15
     7ee:	01 97       	sbiw	r24, 0x01	; 1
     7f0:	f1 f7       	brne	.-4      	; 0x7ee <lcd_init+0x14>
     7f2:	00 c0       	rjmp	.+0      	; 0x7f4 <lcd_init+0x1a>
     7f4:	00 00       	nop
	
    // wait 16ms or more after power-on
    _delay_us(16000);
    // initial write to lcd is 8bit 
    lcd_instr(0x3);
     7f6:	83 e0       	ldi	r24, 0x03	; 3
     7f8:	ed df       	rcall	.-38     	; 0x7d4 <lcd_instr>
    lcd_e_toggle();
     7fa:	af df       	rcall	.-162    	; 0x75a <lcd_e_toggle>
     7fc:	81 ee       	ldi	r24, 0xE1	; 225
     7fe:	94 e0       	ldi	r25, 0x04	; 4
     800:	01 97       	sbiw	r24, 0x01	; 1
     802:	f1 f7       	brne	.-4      	; 0x800 <__DATA_REGION_LENGTH__>
     804:	00 c0       	rjmp	.+0      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     806:	00 00       	nop
    _delay_us(5000); //4992        // delay, busy flag can't be checked here 
	
	lcd_instr(0x3);
     808:	83 e0       	ldi	r24, 0x03	; 3
     80a:	e4 df       	rcall	.-56     	; 0x7d4 <lcd_instr>
	lcd_e_toggle();
     80c:	a6 df       	rcall	.-180    	; 0x75a <lcd_e_toggle>
     80e:	89 ef       	ldi	r24, 0xF9	; 249
     810:	90 e0       	ldi	r25, 0x00	; 0
     812:	01 97       	sbiw	r24, 0x01	; 1
     814:	f1 f7       	brne	.-4      	; 0x812 <__DATA_REGION_LENGTH__+0x12>
     816:	00 c0       	rjmp	.+0      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
	_delay_us(1000); //4992        // delay, busy flag can't be checked here
	
	lcd_instr(0x3);
     818:	00 00       	nop
     81a:	83 e0       	ldi	r24, 0x03	; 3
     81c:	db df       	rcall	.-74     	; 0x7d4 <lcd_instr>
	lcd_e_toggle();
     81e:	9d df       	rcall	.-198    	; 0x75a <lcd_e_toggle>
     820:	81 ee       	ldi	r24, 0xE1	; 225
     822:	94 e0       	ldi	r25, 0x04	; 4
     824:	01 97       	sbiw	r24, 0x01	; 1
     826:	f1 f7       	brne	.-4      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
     828:	00 c0       	rjmp	.+0      	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
	_delay_us(5000); //4992        // delay, busy flag can't be checked here

   
    lcd_instr(LCD_FUNCTION_4BIT_2LINES); // 4-bit interface, dual line,   5x7 dots 
     82a:	00 00       	nop
     82c:	88 e3       	ldi	r24, 0x38	; 56
     82e:	d2 df       	rcall	.-92     	; 0x7d4 <lcd_instr>
	lcd_e_toggle();           // some displays need this additional delay 
     830:	94 df       	rcall	.-216    	; 0x75a <lcd_e_toggle>
     832:	81 e0       	ldi	r24, 0x01	; 1
	
	  
	lcd_instr(1<<LCD_CLR);	//clear display
     834:	cf df       	rcall	.-98     	; 0x7d4 <lcd_instr>
     836:	83 ec       	ldi	r24, 0xC3	; 195
     838:	99 e0       	ldi	r25, 0x09	; 9
     83a:	01 97       	sbiw	r24, 0x01	; 1
     83c:	f1 f7       	brne	.-4      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     83e:	00 c0       	rjmp	.+0      	; 0x840 <__DATA_REGION_LENGTH__+0x40>
     840:	00 00       	nop
     842:	82 e0       	ldi	r24, 0x02	; 2
	_delay_us(10000);	// some displays need this additional delay 
	
  	 lcd_instr(1<<LCD_HOME);
     844:	c7 df       	rcall	.-114    	; 0x7d4 <lcd_instr>
     846:	83 ec       	ldi	r24, 0xC3	; 195
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     848:	99 e0       	ldi	r25, 0x09	; 9
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	f1 f7       	brne	.-4      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
     84e:	00 c0       	rjmp	.+0      	; 0x850 <__DATA_REGION_LENGTH__+0x50>
     850:	00 00       	nop
     852:	8c e0       	ldi	r24, 0x0C	; 12
  	 _delay_ms(10);
	
	
	lcd_instr(LCD_DISP_ON);
     854:	bf df       	rcall	.-130    	; 0x7d4 <lcd_instr>
     856:	83 ec       	ldi	r24, 0xC3	; 195
     858:	99 e0       	ldi	r25, 0x09	; 9
     85a:	01 97       	sbiw	r24, 0x01	; 1
     85c:	f1 f7       	brne	.-4      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     85e:	00 c0       	rjmp	.+0      	; 0x860 <__stack+0x1>
     860:	00 00       	nop
     862:	08 95       	ret

00000864 <lcd_setline>:
     864:	82 30       	cpi	r24, 0x02	; 2
     866:	31 f0       	breq	.+12     	; 0x874 <lcd_setline+0x10>
// FUNCTION: lcd_newline
// PURPOSE:  Move cursor on specified line
void lcd_setline(uint8_t line)
{
    uint8_t addressCounter = 0;
	switch(line)
     868:	83 30       	cpi	r24, 0x03	; 3
     86a:	31 f0       	breq	.+12     	; 0x878 <lcd_setline+0x14>
     86c:	81 30       	cpi	r24, 0x01	; 1
     86e:	31 f4       	brne	.+12     	; 0x87c <lcd_setline+0x18>
	{
		case 0: addressCounter = LCD_START_LINE1; break;
		case 1: addressCounter = LCD_START_LINE2; break;
     870:	90 e4       	ldi	r25, 0x40	; 64
     872:	05 c0       	rjmp	.+10     	; 0x87e <lcd_setline+0x1a>
		case 2: addressCounter = LCD_START_LINE3; break;
     874:	94 e1       	ldi	r25, 0x14	; 20
     876:	03 c0       	rjmp	.+6      	; 0x87e <lcd_setline+0x1a>
		case 3: addressCounter = LCD_START_LINE4; break;
     878:	94 e5       	ldi	r25, 0x54	; 84
     87a:	01 c0       	rjmp	.+2      	; 0x87e <lcd_setline+0x1a>
void lcd_setline(uint8_t line)
{
    uint8_t addressCounter = 0;
	switch(line)
	{
		case 0: addressCounter = LCD_START_LINE1; break;
     87c:	90 e0       	ldi	r25, 0x00	; 0
		case 1: addressCounter = LCD_START_LINE2; break;
		case 2: addressCounter = LCD_START_LINE3; break;
		case 3: addressCounter = LCD_START_LINE4; break;
		default:addressCounter = LCD_START_LINE1; break;
	}
	g_nCurrentLine = line;
     87e:	28 2f       	mov	r18, r24
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	30 93 c1 00 	sts	0x00C1, r19	; 0x8000c1 <__data_end+0x1>
     886:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__data_end>

    lcd_instr((1<<LCD_DDRAM)+addressCounter);
     88a:	80 e8       	ldi	r24, 0x80	; 128
     88c:	89 0f       	add	r24, r25
     88e:	a2 cf       	rjmp	.-188    	; 0x7d4 <lcd_instr>
     890:	08 95       	ret

00000892 <lcd_char>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_char
// PURPOSE:  send a character to the LCD
void lcd_char(uint8_t data)
{
	if (data =='\n')
     892:	8a 30       	cpi	r24, 0x0A	; 10
     894:	69 f4       	brne	.+26     	; 0x8b0 <lcd_char+0x1e>
	{
		if (g_nCurrentLine >= LCD_LINES - 1)
     896:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__data_end>
     89a:	90 91 c1 00 	lds	r25, 0x00C1	; 0x8000c1 <__data_end+0x1>
     89e:	18 16       	cp	r1, r24
     8a0:	19 06       	cpc	r1, r25
     8a2:	1c f4       	brge	.+6      	; 0x8aa <lcd_char+0x18>
			lcd_setline(0);
     8a4:	80 e0       	ldi	r24, 0x00	; 0
     8a6:	de cf       	rjmp	.-68     	; 0x864 <lcd_setline>
     8a8:	08 95       	ret
		else
			lcd_setline(g_nCurrentLine+1);
     8aa:	8f 5f       	subi	r24, 0xFF	; 255
     8ac:	db cf       	rjmp	.-74     	; 0x864 <lcd_setline>
     8ae:	08 95       	ret
	}
	else
	lcd_write(data,1);
     8b0:	61 e0       	ldi	r22, 0x01	; 1
     8b2:	68 cf       	rjmp	.-304    	; 0x784 <lcd_write>
     8b4:	08 95       	ret

000008b6 <lcd_print2>:
     8b6:	cf 93       	push	r28

//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_print
// PURPOSE:  send a null terminated string to the LCD eg. char x[10]="hello!";
void lcd_print2(char *text)
{
     8b8:	df 93       	push	r29
	char c;
    while ( (c = *text++) )
     8ba:	ec 01       	movw	r28, r24
     8bc:	21 96       	adiw	r28, 0x01	; 1
     8be:	fc 01       	movw	r30, r24
     8c0:	80 81       	ld	r24, Z
     8c2:	88 23       	and	r24, r24
     8c4:	21 f0       	breq	.+8      	; 0x8ce <lcd_print2+0x18>
	lcd_char(c);	
     8c6:	e5 df       	rcall	.-54     	; 0x892 <lcd_char>
// FUNCTION: lcd_print
// PURPOSE:  send a null terminated string to the LCD eg. char x[10]="hello!";
void lcd_print2(char *text)
{
	char c;
    while ( (c = *text++) )
     8c8:	89 91       	ld	r24, Y+
     8ca:	81 11       	cpse	r24, r1
     8cc:	fc cf       	rjmp	.-8      	; 0x8c6 <lcd_print2+0x10>
	lcd_char(c);	
}
     8ce:	df 91       	pop	r29
     8d0:	cf 91       	pop	r28
     8d2:	08 95       	ret

000008d4 <lcd_print>:

void lcd_print(char *szFormat, ...)
{	
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	cd b7       	in	r28, 0x3d	; 61
     8da:	de b7       	in	r29, 0x3e	; 62
     8dc:	c0 55       	subi	r28, 0x50	; 80
     8de:	d1 09       	sbc	r29, r1
     8e0:	0f b6       	in	r0, 0x3f	; 63
     8e2:	f8 94       	cli
     8e4:	de bf       	out	0x3e, r29	; 62
     8e6:	0f be       	out	0x3f, r0	; 63
     8e8:	cd bf       	out	0x3d, r28	; 61
     8ea:	ae 01       	movw	r20, r28
     8ec:	4b 5a       	subi	r20, 0xAB	; 171
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	fa 01       	movw	r30, r20
     8f2:	61 91       	ld	r22, Z+
     8f4:	71 91       	ld	r23, Z+
     8f6:	af 01       	movw	r20, r30
    char szBuffer[80]; //in this buffer we form the message
    va_list pArgs;
    va_start(pArgs, szFormat);
    vsprintf(szBuffer, szFormat, pArgs);
     8f8:	ce 01       	movw	r24, r28
     8fa:	01 96       	adiw	r24, 0x01	; 1
     8fc:	0e d7       	rcall	.+3612   	; 0x171a <vsprintf>
    va_end(pArgs);
	
	lcd_print2(szBuffer);
     8fe:	ce 01       	movw	r24, r28
     900:	01 96       	adiw	r24, 0x01	; 1
     902:	d9 df       	rcall	.-78     	; 0x8b6 <lcd_print2>

}
     904:	c0 5b       	subi	r28, 0xB0	; 176
     906:	df 4f       	sbci	r29, 0xFF	; 255
     908:	0f b6       	in	r0, 0x3f	; 63
     90a:	f8 94       	cli
     90c:	de bf       	out	0x3e, r29	; 62
     90e:	0f be       	out	0x3f, r0	; 63
     910:	cd bf       	out	0x3d, r28	; 61
     912:	df 91       	pop	r29
     914:	cf 91       	pop	r28
     916:	08 95       	ret

00000918 <lcd_gotoxy>:
void lcd_gotoxy(uint8_t y, uint8_t x)
{
#if LCD_LINES==1
    lcd_instr((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#elif LCD_LINES==2
   	switch (y) 
     918:	88 23       	and	r24, r24
     91a:	19 f0       	breq	.+6      	; 0x922 <lcd_gotoxy+0xa>
     91c:	81 30       	cpi	r24, 0x01	; 1
     91e:	29 f0       	breq	.+10     	; 0x92a <lcd_gotoxy+0x12>
     920:	08 95       	ret
	{
		case 0:lcd_instr((1<<LCD_DDRAM)+LCD_START_LINE1+x);break;
     922:	80 e8       	ldi	r24, 0x80	; 128
     924:	86 0f       	add	r24, r22
     926:	56 cf       	rjmp	.-340    	; 0x7d4 <lcd_instr>
     928:	08 95       	ret
    	case 1:lcd_instr((1<<LCD_DDRAM)+LCD_START_LINE2+x);break;
     92a:	80 ec       	ldi	r24, 0xC0	; 192
     92c:	86 0f       	add	r24, r22
     92e:	52 cf       	rjmp	.-348    	; 0x7d4 <lcd_instr>
     930:	08 95       	ret

00000932 <lcd_clrscr>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_clrscr
// PURPOSE:  Clear display and set cursor to home position
void lcd_clrscr(void)
{
	g_nCurrentLine = 0;
     932:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__data_end+0x1>
     936:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__data_end>
   	lcd_instr(1<<LCD_CLR);
     93a:	81 e0       	ldi	r24, 0x01	; 1
     93c:	4b df       	rcall	.-362    	; 0x7d4 <lcd_instr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     93e:	83 ec       	ldi	r24, 0xC3	; 195
     940:	99 e0       	ldi	r25, 0x09	; 9
     942:	01 97       	sbiw	r24, 0x01	; 1
     944:	f1 f7       	brne	.-4      	; 0x942 <lcd_clrscr+0x10>
     946:	00 c0       	rjmp	.+0      	; 0x948 <lcd_clrscr+0x16>
     948:	00 00       	nop
     94a:	08 95       	ret

0000094c <lcd_home>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_home
// PURPOSE:  Set cursor to home position
void lcd_home(void)
{
	g_nCurrentLine = 0;
     94c:	10 92 c1 00 	sts	0x00C1, r1	; 0x8000c1 <__data_end+0x1>
     950:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__data_end>
    lcd_instr(1<<LCD_HOME);
     954:	82 e0       	ldi	r24, 0x02	; 2
     956:	3e df       	rcall	.-388    	; 0x7d4 <lcd_instr>
     958:	83 ec       	ldi	r24, 0xC3	; 195
     95a:	99 e0       	ldi	r25, 0x09	; 9
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <lcd_home+0x10>
     960:	00 c0       	rjmp	.+0      	; 0x962 <lcd_home+0x16>
     962:	00 00       	nop
     964:	08 95       	ret

00000966 <vfprintf>:
     966:	a0 e1       	ldi	r26, 0x10	; 16
     968:	b0 e0       	ldi	r27, 0x00	; 0
     96a:	e8 eb       	ldi	r30, 0xB8	; 184
     96c:	f4 e0       	ldi	r31, 0x04	; 4
     96e:	74 c5       	rjmp	.+2792   	; 0x1458 <__prologue_saves__>
     970:	7c 01       	movw	r14, r24
     972:	1b 01       	movw	r2, r22
     974:	6a 01       	movw	r12, r20
     976:	fc 01       	movw	r30, r24
     978:	17 82       	std	Z+7, r1	; 0x07
     97a:	16 82       	std	Z+6, r1	; 0x06
     97c:	83 81       	ldd	r24, Z+3	; 0x03
     97e:	81 ff       	sbrs	r24, 1
     980:	2a c3       	rjmp	.+1620   	; 0xfd6 <vfprintf+0x670>
     982:	9e 01       	movw	r18, r28
     984:	2f 5f       	subi	r18, 0xFF	; 255
     986:	3f 4f       	sbci	r19, 0xFF	; 255
     988:	39 01       	movw	r6, r18
     98a:	f7 01       	movw	r30, r14
     98c:	93 81       	ldd	r25, Z+3	; 0x03
     98e:	f1 01       	movw	r30, r2
     990:	93 fd       	sbrc	r25, 3
     992:	85 91       	lpm	r24, Z+
     994:	93 ff       	sbrs	r25, 3
     996:	81 91       	ld	r24, Z+
     998:	1f 01       	movw	r2, r30
     99a:	88 23       	and	r24, r24
     99c:	09 f4       	brne	.+2      	; 0x9a0 <vfprintf+0x3a>
     99e:	17 c3       	rjmp	.+1582   	; 0xfce <vfprintf+0x668>
     9a0:	85 32       	cpi	r24, 0x25	; 37
     9a2:	39 f4       	brne	.+14     	; 0x9b2 <vfprintf+0x4c>
     9a4:	93 fd       	sbrc	r25, 3
     9a6:	85 91       	lpm	r24, Z+
     9a8:	93 ff       	sbrs	r25, 3
     9aa:	81 91       	ld	r24, Z+
     9ac:	1f 01       	movw	r2, r30
     9ae:	85 32       	cpi	r24, 0x25	; 37
     9b0:	31 f4       	brne	.+12     	; 0x9be <vfprintf+0x58>
     9b2:	b7 01       	movw	r22, r14
     9b4:	90 e0       	ldi	r25, 0x00	; 0
     9b6:	75 d6       	rcall	.+3306   	; 0x16a2 <fputc>
     9b8:	56 01       	movw	r10, r12
     9ba:	65 01       	movw	r12, r10
     9bc:	e6 cf       	rjmp	.-52     	; 0x98a <vfprintf+0x24>
     9be:	10 e0       	ldi	r17, 0x00	; 0
     9c0:	51 2c       	mov	r5, r1
     9c2:	91 2c       	mov	r9, r1
     9c4:	ff e1       	ldi	r31, 0x1F	; 31
     9c6:	f9 15       	cp	r31, r9
     9c8:	d8 f0       	brcs	.+54     	; 0xa00 <vfprintf+0x9a>
     9ca:	8b 32       	cpi	r24, 0x2B	; 43
     9cc:	79 f0       	breq	.+30     	; 0x9ec <vfprintf+0x86>
     9ce:	38 f4       	brcc	.+14     	; 0x9de <vfprintf+0x78>
     9d0:	80 32       	cpi	r24, 0x20	; 32
     9d2:	79 f0       	breq	.+30     	; 0x9f2 <vfprintf+0x8c>
     9d4:	83 32       	cpi	r24, 0x23	; 35
     9d6:	a1 f4       	brne	.+40     	; 0xa00 <vfprintf+0x9a>
     9d8:	f9 2d       	mov	r31, r9
     9da:	f0 61       	ori	r31, 0x10	; 16
     9dc:	2e c0       	rjmp	.+92     	; 0xa3a <vfprintf+0xd4>
     9de:	8d 32       	cpi	r24, 0x2D	; 45
     9e0:	61 f0       	breq	.+24     	; 0x9fa <vfprintf+0x94>
     9e2:	80 33       	cpi	r24, 0x30	; 48
     9e4:	69 f4       	brne	.+26     	; 0xa00 <vfprintf+0x9a>
     9e6:	29 2d       	mov	r18, r9
     9e8:	21 60       	ori	r18, 0x01	; 1
     9ea:	2d c0       	rjmp	.+90     	; 0xa46 <vfprintf+0xe0>
     9ec:	39 2d       	mov	r19, r9
     9ee:	32 60       	ori	r19, 0x02	; 2
     9f0:	93 2e       	mov	r9, r19
     9f2:	89 2d       	mov	r24, r9
     9f4:	84 60       	ori	r24, 0x04	; 4
     9f6:	98 2e       	mov	r9, r24
     9f8:	2a c0       	rjmp	.+84     	; 0xa4e <vfprintf+0xe8>
     9fa:	e9 2d       	mov	r30, r9
     9fc:	e8 60       	ori	r30, 0x08	; 8
     9fe:	15 c0       	rjmp	.+42     	; 0xa2a <vfprintf+0xc4>
     a00:	97 fc       	sbrc	r9, 7
     a02:	2d c0       	rjmp	.+90     	; 0xa5e <vfprintf+0xf8>
     a04:	20 ed       	ldi	r18, 0xD0	; 208
     a06:	28 0f       	add	r18, r24
     a08:	2a 30       	cpi	r18, 0x0A	; 10
     a0a:	88 f4       	brcc	.+34     	; 0xa2e <vfprintf+0xc8>
     a0c:	96 fe       	sbrs	r9, 6
     a0e:	06 c0       	rjmp	.+12     	; 0xa1c <vfprintf+0xb6>
     a10:	3a e0       	ldi	r19, 0x0A	; 10
     a12:	13 9f       	mul	r17, r19
     a14:	20 0d       	add	r18, r0
     a16:	11 24       	eor	r1, r1
     a18:	12 2f       	mov	r17, r18
     a1a:	19 c0       	rjmp	.+50     	; 0xa4e <vfprintf+0xe8>
     a1c:	8a e0       	ldi	r24, 0x0A	; 10
     a1e:	58 9e       	mul	r5, r24
     a20:	20 0d       	add	r18, r0
     a22:	11 24       	eor	r1, r1
     a24:	52 2e       	mov	r5, r18
     a26:	e9 2d       	mov	r30, r9
     a28:	e0 62       	ori	r30, 0x20	; 32
     a2a:	9e 2e       	mov	r9, r30
     a2c:	10 c0       	rjmp	.+32     	; 0xa4e <vfprintf+0xe8>
     a2e:	8e 32       	cpi	r24, 0x2E	; 46
     a30:	31 f4       	brne	.+12     	; 0xa3e <vfprintf+0xd8>
     a32:	96 fc       	sbrc	r9, 6
     a34:	cc c2       	rjmp	.+1432   	; 0xfce <vfprintf+0x668>
     a36:	f9 2d       	mov	r31, r9
     a38:	f0 64       	ori	r31, 0x40	; 64
     a3a:	9f 2e       	mov	r9, r31
     a3c:	08 c0       	rjmp	.+16     	; 0xa4e <vfprintf+0xe8>
     a3e:	8c 36       	cpi	r24, 0x6C	; 108
     a40:	21 f4       	brne	.+8      	; 0xa4a <vfprintf+0xe4>
     a42:	29 2d       	mov	r18, r9
     a44:	20 68       	ori	r18, 0x80	; 128
     a46:	92 2e       	mov	r9, r18
     a48:	02 c0       	rjmp	.+4      	; 0xa4e <vfprintf+0xe8>
     a4a:	88 36       	cpi	r24, 0x68	; 104
     a4c:	41 f4       	brne	.+16     	; 0xa5e <vfprintf+0xf8>
     a4e:	f1 01       	movw	r30, r2
     a50:	93 fd       	sbrc	r25, 3
     a52:	85 91       	lpm	r24, Z+
     a54:	93 ff       	sbrs	r25, 3
     a56:	81 91       	ld	r24, Z+
     a58:	1f 01       	movw	r2, r30
     a5a:	81 11       	cpse	r24, r1
     a5c:	b3 cf       	rjmp	.-154    	; 0x9c4 <vfprintf+0x5e>
     a5e:	9b eb       	ldi	r25, 0xBB	; 187
     a60:	98 0f       	add	r25, r24
     a62:	93 30       	cpi	r25, 0x03	; 3
     a64:	20 f4       	brcc	.+8      	; 0xa6e <vfprintf+0x108>
     a66:	99 2d       	mov	r25, r9
     a68:	90 61       	ori	r25, 0x10	; 16
     a6a:	80 5e       	subi	r24, 0xE0	; 224
     a6c:	07 c0       	rjmp	.+14     	; 0xa7c <vfprintf+0x116>
     a6e:	9b e9       	ldi	r25, 0x9B	; 155
     a70:	98 0f       	add	r25, r24
     a72:	93 30       	cpi	r25, 0x03	; 3
     a74:	08 f0       	brcs	.+2      	; 0xa78 <vfprintf+0x112>
     a76:	59 c1       	rjmp	.+690    	; 0xd2a <vfprintf+0x3c4>
     a78:	99 2d       	mov	r25, r9
     a7a:	9f 7e       	andi	r25, 0xEF	; 239
     a7c:	96 ff       	sbrs	r25, 6
     a7e:	16 e0       	ldi	r17, 0x06	; 6
     a80:	9f 73       	andi	r25, 0x3F	; 63
     a82:	99 2e       	mov	r9, r25
     a84:	85 36       	cpi	r24, 0x65	; 101
     a86:	19 f4       	brne	.+6      	; 0xa8e <vfprintf+0x128>
     a88:	90 64       	ori	r25, 0x40	; 64
     a8a:	99 2e       	mov	r9, r25
     a8c:	08 c0       	rjmp	.+16     	; 0xa9e <vfprintf+0x138>
     a8e:	86 36       	cpi	r24, 0x66	; 102
     a90:	21 f4       	brne	.+8      	; 0xa9a <vfprintf+0x134>
     a92:	39 2f       	mov	r19, r25
     a94:	30 68       	ori	r19, 0x80	; 128
     a96:	93 2e       	mov	r9, r19
     a98:	02 c0       	rjmp	.+4      	; 0xa9e <vfprintf+0x138>
     a9a:	11 11       	cpse	r17, r1
     a9c:	11 50       	subi	r17, 0x01	; 1
     a9e:	97 fe       	sbrs	r9, 7
     aa0:	07 c0       	rjmp	.+14     	; 0xab0 <vfprintf+0x14a>
     aa2:	1c 33       	cpi	r17, 0x3C	; 60
     aa4:	50 f4       	brcc	.+20     	; 0xaba <vfprintf+0x154>
     aa6:	44 24       	eor	r4, r4
     aa8:	43 94       	inc	r4
     aaa:	41 0e       	add	r4, r17
     aac:	27 e0       	ldi	r18, 0x07	; 7
     aae:	0b c0       	rjmp	.+22     	; 0xac6 <vfprintf+0x160>
     ab0:	18 30       	cpi	r17, 0x08	; 8
     ab2:	38 f0       	brcs	.+14     	; 0xac2 <vfprintf+0x15c>
     ab4:	27 e0       	ldi	r18, 0x07	; 7
     ab6:	17 e0       	ldi	r17, 0x07	; 7
     ab8:	05 c0       	rjmp	.+10     	; 0xac4 <vfprintf+0x15e>
     aba:	27 e0       	ldi	r18, 0x07	; 7
     abc:	9c e3       	ldi	r25, 0x3C	; 60
     abe:	49 2e       	mov	r4, r25
     ac0:	02 c0       	rjmp	.+4      	; 0xac6 <vfprintf+0x160>
     ac2:	21 2f       	mov	r18, r17
     ac4:	41 2c       	mov	r4, r1
     ac6:	56 01       	movw	r10, r12
     ac8:	84 e0       	ldi	r24, 0x04	; 4
     aca:	a8 0e       	add	r10, r24
     acc:	b1 1c       	adc	r11, r1
     ace:	f6 01       	movw	r30, r12
     ad0:	60 81       	ld	r22, Z
     ad2:	71 81       	ldd	r23, Z+1	; 0x01
     ad4:	82 81       	ldd	r24, Z+2	; 0x02
     ad6:	93 81       	ldd	r25, Z+3	; 0x03
     ad8:	04 2d       	mov	r16, r4
     ada:	a3 01       	movw	r20, r6
     adc:	f4 d4       	rcall	.+2536   	; 0x14c6 <__ftoa_engine>
     ade:	6c 01       	movw	r12, r24
     ae0:	f9 81       	ldd	r31, Y+1	; 0x01
     ae2:	fc 87       	std	Y+12, r31	; 0x0c
     ae4:	f0 ff       	sbrs	r31, 0
     ae6:	02 c0       	rjmp	.+4      	; 0xaec <vfprintf+0x186>
     ae8:	f3 ff       	sbrs	r31, 3
     aea:	06 c0       	rjmp	.+12     	; 0xaf8 <vfprintf+0x192>
     aec:	91 fc       	sbrc	r9, 1
     aee:	06 c0       	rjmp	.+12     	; 0xafc <vfprintf+0x196>
     af0:	92 fe       	sbrs	r9, 2
     af2:	06 c0       	rjmp	.+12     	; 0xb00 <vfprintf+0x19a>
     af4:	00 e2       	ldi	r16, 0x20	; 32
     af6:	05 c0       	rjmp	.+10     	; 0xb02 <vfprintf+0x19c>
     af8:	0d e2       	ldi	r16, 0x2D	; 45
     afa:	03 c0       	rjmp	.+6      	; 0xb02 <vfprintf+0x19c>
     afc:	0b e2       	ldi	r16, 0x2B	; 43
     afe:	01 c0       	rjmp	.+2      	; 0xb02 <vfprintf+0x19c>
     b00:	00 e0       	ldi	r16, 0x00	; 0
     b02:	8c 85       	ldd	r24, Y+12	; 0x0c
     b04:	8c 70       	andi	r24, 0x0C	; 12
     b06:	19 f0       	breq	.+6      	; 0xb0e <vfprintf+0x1a8>
     b08:	01 11       	cpse	r16, r1
     b0a:	43 c2       	rjmp	.+1158   	; 0xf92 <vfprintf+0x62c>
     b0c:	80 c2       	rjmp	.+1280   	; 0x100e <vfprintf+0x6a8>
     b0e:	97 fe       	sbrs	r9, 7
     b10:	10 c0       	rjmp	.+32     	; 0xb32 <vfprintf+0x1cc>
     b12:	4c 0c       	add	r4, r12
     b14:	fc 85       	ldd	r31, Y+12	; 0x0c
     b16:	f4 ff       	sbrs	r31, 4
     b18:	04 c0       	rjmp	.+8      	; 0xb22 <vfprintf+0x1bc>
     b1a:	8a 81       	ldd	r24, Y+2	; 0x02
     b1c:	81 33       	cpi	r24, 0x31	; 49
     b1e:	09 f4       	brne	.+2      	; 0xb22 <vfprintf+0x1bc>
     b20:	4a 94       	dec	r4
     b22:	14 14       	cp	r1, r4
     b24:	74 f5       	brge	.+92     	; 0xb82 <vfprintf+0x21c>
     b26:	28 e0       	ldi	r18, 0x08	; 8
     b28:	24 15       	cp	r18, r4
     b2a:	78 f5       	brcc	.+94     	; 0xb8a <vfprintf+0x224>
     b2c:	88 e0       	ldi	r24, 0x08	; 8
     b2e:	48 2e       	mov	r4, r24
     b30:	2c c0       	rjmp	.+88     	; 0xb8a <vfprintf+0x224>
     b32:	96 fc       	sbrc	r9, 6
     b34:	2a c0       	rjmp	.+84     	; 0xb8a <vfprintf+0x224>
     b36:	81 2f       	mov	r24, r17
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	8c 15       	cp	r24, r12
     b3c:	9d 05       	cpc	r25, r13
     b3e:	9c f0       	brlt	.+38     	; 0xb66 <vfprintf+0x200>
     b40:	3c ef       	ldi	r19, 0xFC	; 252
     b42:	c3 16       	cp	r12, r19
     b44:	3f ef       	ldi	r19, 0xFF	; 255
     b46:	d3 06       	cpc	r13, r19
     b48:	74 f0       	brlt	.+28     	; 0xb66 <vfprintf+0x200>
     b4a:	89 2d       	mov	r24, r9
     b4c:	80 68       	ori	r24, 0x80	; 128
     b4e:	98 2e       	mov	r9, r24
     b50:	0a c0       	rjmp	.+20     	; 0xb66 <vfprintf+0x200>
     b52:	e2 e0       	ldi	r30, 0x02	; 2
     b54:	f0 e0       	ldi	r31, 0x00	; 0
     b56:	ec 0f       	add	r30, r28
     b58:	fd 1f       	adc	r31, r29
     b5a:	e1 0f       	add	r30, r17
     b5c:	f1 1d       	adc	r31, r1
     b5e:	80 81       	ld	r24, Z
     b60:	80 33       	cpi	r24, 0x30	; 48
     b62:	19 f4       	brne	.+6      	; 0xb6a <vfprintf+0x204>
     b64:	11 50       	subi	r17, 0x01	; 1
     b66:	11 11       	cpse	r17, r1
     b68:	f4 cf       	rjmp	.-24     	; 0xb52 <vfprintf+0x1ec>
     b6a:	97 fe       	sbrs	r9, 7
     b6c:	0e c0       	rjmp	.+28     	; 0xb8a <vfprintf+0x224>
     b6e:	44 24       	eor	r4, r4
     b70:	43 94       	inc	r4
     b72:	41 0e       	add	r4, r17
     b74:	81 2f       	mov	r24, r17
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	c8 16       	cp	r12, r24
     b7a:	d9 06       	cpc	r13, r25
     b7c:	2c f4       	brge	.+10     	; 0xb88 <vfprintf+0x222>
     b7e:	1c 19       	sub	r17, r12
     b80:	04 c0       	rjmp	.+8      	; 0xb8a <vfprintf+0x224>
     b82:	44 24       	eor	r4, r4
     b84:	43 94       	inc	r4
     b86:	01 c0       	rjmp	.+2      	; 0xb8a <vfprintf+0x224>
     b88:	10 e0       	ldi	r17, 0x00	; 0
     b8a:	97 fe       	sbrs	r9, 7
     b8c:	06 c0       	rjmp	.+12     	; 0xb9a <vfprintf+0x234>
     b8e:	1c 14       	cp	r1, r12
     b90:	1d 04       	cpc	r1, r13
     b92:	34 f4       	brge	.+12     	; 0xba0 <vfprintf+0x23a>
     b94:	c6 01       	movw	r24, r12
     b96:	01 96       	adiw	r24, 0x01	; 1
     b98:	05 c0       	rjmp	.+10     	; 0xba4 <vfprintf+0x23e>
     b9a:	85 e0       	ldi	r24, 0x05	; 5
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	02 c0       	rjmp	.+4      	; 0xba4 <vfprintf+0x23e>
     ba0:	81 e0       	ldi	r24, 0x01	; 1
     ba2:	90 e0       	ldi	r25, 0x00	; 0
     ba4:	01 11       	cpse	r16, r1
     ba6:	01 96       	adiw	r24, 0x01	; 1
     ba8:	11 23       	and	r17, r17
     baa:	31 f0       	breq	.+12     	; 0xbb8 <vfprintf+0x252>
     bac:	21 2f       	mov	r18, r17
     bae:	30 e0       	ldi	r19, 0x00	; 0
     bb0:	2f 5f       	subi	r18, 0xFF	; 255
     bb2:	3f 4f       	sbci	r19, 0xFF	; 255
     bb4:	82 0f       	add	r24, r18
     bb6:	93 1f       	adc	r25, r19
     bb8:	25 2d       	mov	r18, r5
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	82 17       	cp	r24, r18
     bbe:	93 07       	cpc	r25, r19
     bc0:	14 f4       	brge	.+4      	; 0xbc6 <vfprintf+0x260>
     bc2:	58 1a       	sub	r5, r24
     bc4:	01 c0       	rjmp	.+2      	; 0xbc8 <vfprintf+0x262>
     bc6:	51 2c       	mov	r5, r1
     bc8:	89 2d       	mov	r24, r9
     bca:	89 70       	andi	r24, 0x09	; 9
     bcc:	41 f4       	brne	.+16     	; 0xbde <vfprintf+0x278>
     bce:	55 20       	and	r5, r5
     bd0:	31 f0       	breq	.+12     	; 0xbde <vfprintf+0x278>
     bd2:	b7 01       	movw	r22, r14
     bd4:	80 e2       	ldi	r24, 0x20	; 32
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	64 d5       	rcall	.+2760   	; 0x16a2 <fputc>
     bda:	5a 94       	dec	r5
     bdc:	f8 cf       	rjmp	.-16     	; 0xbce <vfprintf+0x268>
     bde:	00 23       	and	r16, r16
     be0:	21 f0       	breq	.+8      	; 0xbea <vfprintf+0x284>
     be2:	b7 01       	movw	r22, r14
     be4:	80 2f       	mov	r24, r16
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	5c d5       	rcall	.+2744   	; 0x16a2 <fputc>
     bea:	93 fc       	sbrc	r9, 3
     bec:	08 c0       	rjmp	.+16     	; 0xbfe <vfprintf+0x298>
     bee:	55 20       	and	r5, r5
     bf0:	31 f0       	breq	.+12     	; 0xbfe <vfprintf+0x298>
     bf2:	b7 01       	movw	r22, r14
     bf4:	80 e3       	ldi	r24, 0x30	; 48
     bf6:	90 e0       	ldi	r25, 0x00	; 0
     bf8:	54 d5       	rcall	.+2728   	; 0x16a2 <fputc>
     bfa:	5a 94       	dec	r5
     bfc:	f8 cf       	rjmp	.-16     	; 0xbee <vfprintf+0x288>
     bfe:	97 fe       	sbrs	r9, 7
     c00:	4a c0       	rjmp	.+148    	; 0xc96 <vfprintf+0x330>
     c02:	46 01       	movw	r8, r12
     c04:	d7 fe       	sbrs	r13, 7
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <vfprintf+0x2a6>
     c08:	81 2c       	mov	r8, r1
     c0a:	91 2c       	mov	r9, r1
     c0c:	c6 01       	movw	r24, r12
     c0e:	88 19       	sub	r24, r8
     c10:	99 09       	sbc	r25, r9
     c12:	f3 01       	movw	r30, r6
     c14:	e8 0f       	add	r30, r24
     c16:	f9 1f       	adc	r31, r25
     c18:	fe 87       	std	Y+14, r31	; 0x0e
     c1a:	ed 87       	std	Y+13, r30	; 0x0d
     c1c:	96 01       	movw	r18, r12
     c1e:	24 19       	sub	r18, r4
     c20:	31 09       	sbc	r19, r1
     c22:	38 8b       	std	Y+16, r19	; 0x10
     c24:	2f 87       	std	Y+15, r18	; 0x0f
     c26:	01 2f       	mov	r16, r17
     c28:	10 e0       	ldi	r17, 0x00	; 0
     c2a:	11 95       	neg	r17
     c2c:	01 95       	neg	r16
     c2e:	11 09       	sbc	r17, r1
     c30:	3f ef       	ldi	r19, 0xFF	; 255
     c32:	83 16       	cp	r8, r19
     c34:	93 06       	cpc	r9, r19
     c36:	21 f4       	brne	.+8      	; 0xc40 <vfprintf+0x2da>
     c38:	b7 01       	movw	r22, r14
     c3a:	8e e2       	ldi	r24, 0x2E	; 46
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	31 d5       	rcall	.+2658   	; 0x16a2 <fputc>
     c40:	c8 14       	cp	r12, r8
     c42:	d9 04       	cpc	r13, r9
     c44:	4c f0       	brlt	.+18     	; 0xc58 <vfprintf+0x2f2>
     c46:	8f 85       	ldd	r24, Y+15	; 0x0f
     c48:	98 89       	ldd	r25, Y+16	; 0x10
     c4a:	88 15       	cp	r24, r8
     c4c:	99 05       	cpc	r25, r9
     c4e:	24 f4       	brge	.+8      	; 0xc58 <vfprintf+0x2f2>
     c50:	ed 85       	ldd	r30, Y+13	; 0x0d
     c52:	fe 85       	ldd	r31, Y+14	; 0x0e
     c54:	81 81       	ldd	r24, Z+1	; 0x01
     c56:	01 c0       	rjmp	.+2      	; 0xc5a <vfprintf+0x2f4>
     c58:	80 e3       	ldi	r24, 0x30	; 48
     c5a:	f1 e0       	ldi	r31, 0x01	; 1
     c5c:	8f 1a       	sub	r8, r31
     c5e:	91 08       	sbc	r9, r1
     c60:	2d 85       	ldd	r18, Y+13	; 0x0d
     c62:	3e 85       	ldd	r19, Y+14	; 0x0e
     c64:	2f 5f       	subi	r18, 0xFF	; 255
     c66:	3f 4f       	sbci	r19, 0xFF	; 255
     c68:	3e 87       	std	Y+14, r19	; 0x0e
     c6a:	2d 87       	std	Y+13, r18	; 0x0d
     c6c:	80 16       	cp	r8, r16
     c6e:	91 06       	cpc	r9, r17
     c70:	24 f0       	brlt	.+8      	; 0xc7a <vfprintf+0x314>
     c72:	b7 01       	movw	r22, r14
     c74:	90 e0       	ldi	r25, 0x00	; 0
     c76:	15 d5       	rcall	.+2602   	; 0x16a2 <fputc>
     c78:	db cf       	rjmp	.-74     	; 0xc30 <vfprintf+0x2ca>
     c7a:	c8 14       	cp	r12, r8
     c7c:	d9 04       	cpc	r13, r9
     c7e:	41 f4       	brne	.+16     	; 0xc90 <vfprintf+0x32a>
     c80:	9a 81       	ldd	r25, Y+2	; 0x02
     c82:	96 33       	cpi	r25, 0x36	; 54
     c84:	20 f4       	brcc	.+8      	; 0xc8e <vfprintf+0x328>
     c86:	95 33       	cpi	r25, 0x35	; 53
     c88:	19 f4       	brne	.+6      	; 0xc90 <vfprintf+0x32a>
     c8a:	3c 85       	ldd	r19, Y+12	; 0x0c
     c8c:	34 ff       	sbrs	r19, 4
     c8e:	81 e3       	ldi	r24, 0x31	; 49
     c90:	b7 01       	movw	r22, r14
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	48 c0       	rjmp	.+144    	; 0xd26 <vfprintf+0x3c0>
     c96:	8a 81       	ldd	r24, Y+2	; 0x02
     c98:	81 33       	cpi	r24, 0x31	; 49
     c9a:	19 f0       	breq	.+6      	; 0xca2 <vfprintf+0x33c>
     c9c:	9c 85       	ldd	r25, Y+12	; 0x0c
     c9e:	9f 7e       	andi	r25, 0xEF	; 239
     ca0:	9c 87       	std	Y+12, r25	; 0x0c
     ca2:	b7 01       	movw	r22, r14
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	fd d4       	rcall	.+2554   	; 0x16a2 <fputc>
     ca8:	11 11       	cpse	r17, r1
     caa:	05 c0       	rjmp	.+10     	; 0xcb6 <vfprintf+0x350>
     cac:	94 fc       	sbrc	r9, 4
     cae:	16 c0       	rjmp	.+44     	; 0xcdc <vfprintf+0x376>
     cb0:	85 e6       	ldi	r24, 0x65	; 101
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	15 c0       	rjmp	.+42     	; 0xce0 <vfprintf+0x37a>
     cb6:	b7 01       	movw	r22, r14
     cb8:	8e e2       	ldi	r24, 0x2E	; 46
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	f2 d4       	rcall	.+2532   	; 0x16a2 <fputc>
     cbe:	1e 5f       	subi	r17, 0xFE	; 254
     cc0:	82 e0       	ldi	r24, 0x02	; 2
     cc2:	01 e0       	ldi	r16, 0x01	; 1
     cc4:	08 0f       	add	r16, r24
     cc6:	f3 01       	movw	r30, r6
     cc8:	e8 0f       	add	r30, r24
     cca:	f1 1d       	adc	r31, r1
     ccc:	80 81       	ld	r24, Z
     cce:	b7 01       	movw	r22, r14
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	e7 d4       	rcall	.+2510   	; 0x16a2 <fputc>
     cd4:	80 2f       	mov	r24, r16
     cd6:	01 13       	cpse	r16, r17
     cd8:	f4 cf       	rjmp	.-24     	; 0xcc2 <vfprintf+0x35c>
     cda:	e8 cf       	rjmp	.-48     	; 0xcac <vfprintf+0x346>
     cdc:	85 e4       	ldi	r24, 0x45	; 69
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	b7 01       	movw	r22, r14
     ce2:	df d4       	rcall	.+2494   	; 0x16a2 <fputc>
     ce4:	d7 fc       	sbrc	r13, 7
     ce6:	06 c0       	rjmp	.+12     	; 0xcf4 <vfprintf+0x38e>
     ce8:	c1 14       	cp	r12, r1
     cea:	d1 04       	cpc	r13, r1
     cec:	41 f4       	brne	.+16     	; 0xcfe <vfprintf+0x398>
     cee:	ec 85       	ldd	r30, Y+12	; 0x0c
     cf0:	e4 ff       	sbrs	r30, 4
     cf2:	05 c0       	rjmp	.+10     	; 0xcfe <vfprintf+0x398>
     cf4:	d1 94       	neg	r13
     cf6:	c1 94       	neg	r12
     cf8:	d1 08       	sbc	r13, r1
     cfa:	8d e2       	ldi	r24, 0x2D	; 45
     cfc:	01 c0       	rjmp	.+2      	; 0xd00 <vfprintf+0x39a>
     cfe:	8b e2       	ldi	r24, 0x2B	; 43
     d00:	b7 01       	movw	r22, r14
     d02:	90 e0       	ldi	r25, 0x00	; 0
     d04:	ce d4       	rcall	.+2460   	; 0x16a2 <fputc>
     d06:	80 e3       	ldi	r24, 0x30	; 48
     d08:	2a e0       	ldi	r18, 0x0A	; 10
     d0a:	c2 16       	cp	r12, r18
     d0c:	d1 04       	cpc	r13, r1
     d0e:	2c f0       	brlt	.+10     	; 0xd1a <vfprintf+0x3b4>
     d10:	8f 5f       	subi	r24, 0xFF	; 255
     d12:	fa e0       	ldi	r31, 0x0A	; 10
     d14:	cf 1a       	sub	r12, r31
     d16:	d1 08       	sbc	r13, r1
     d18:	f7 cf       	rjmp	.-18     	; 0xd08 <vfprintf+0x3a2>
     d1a:	b7 01       	movw	r22, r14
     d1c:	90 e0       	ldi	r25, 0x00	; 0
     d1e:	c1 d4       	rcall	.+2434   	; 0x16a2 <fputc>
     d20:	b7 01       	movw	r22, r14
     d22:	c6 01       	movw	r24, r12
     d24:	c0 96       	adiw	r24, 0x30	; 48
     d26:	bd d4       	rcall	.+2426   	; 0x16a2 <fputc>
     d28:	49 c1       	rjmp	.+658    	; 0xfbc <vfprintf+0x656>
     d2a:	83 36       	cpi	r24, 0x63	; 99
     d2c:	31 f0       	breq	.+12     	; 0xd3a <vfprintf+0x3d4>
     d2e:	83 37       	cpi	r24, 0x73	; 115
     d30:	79 f0       	breq	.+30     	; 0xd50 <vfprintf+0x3ea>
     d32:	83 35       	cpi	r24, 0x53	; 83
     d34:	09 f0       	breq	.+2      	; 0xd38 <vfprintf+0x3d2>
     d36:	52 c0       	rjmp	.+164    	; 0xddc <vfprintf+0x476>
     d38:	1f c0       	rjmp	.+62     	; 0xd78 <vfprintf+0x412>
     d3a:	56 01       	movw	r10, r12
     d3c:	32 e0       	ldi	r19, 0x02	; 2
     d3e:	a3 0e       	add	r10, r19
     d40:	b1 1c       	adc	r11, r1
     d42:	f6 01       	movw	r30, r12
     d44:	80 81       	ld	r24, Z
     d46:	89 83       	std	Y+1, r24	; 0x01
     d48:	01 e0       	ldi	r16, 0x01	; 1
     d4a:	10 e0       	ldi	r17, 0x00	; 0
     d4c:	63 01       	movw	r12, r6
     d4e:	11 c0       	rjmp	.+34     	; 0xd72 <vfprintf+0x40c>
     d50:	56 01       	movw	r10, r12
     d52:	f2 e0       	ldi	r31, 0x02	; 2
     d54:	af 0e       	add	r10, r31
     d56:	b1 1c       	adc	r11, r1
     d58:	f6 01       	movw	r30, r12
     d5a:	c0 80       	ld	r12, Z
     d5c:	d1 80       	ldd	r13, Z+1	; 0x01
     d5e:	96 fe       	sbrs	r9, 6
     d60:	03 c0       	rjmp	.+6      	; 0xd68 <vfprintf+0x402>
     d62:	61 2f       	mov	r22, r17
     d64:	70 e0       	ldi	r23, 0x00	; 0
     d66:	02 c0       	rjmp	.+4      	; 0xd6c <vfprintf+0x406>
     d68:	6f ef       	ldi	r22, 0xFF	; 255
     d6a:	7f ef       	ldi	r23, 0xFF	; 255
     d6c:	c6 01       	movw	r24, r12
     d6e:	8e d4       	rcall	.+2332   	; 0x168c <strnlen>
     d70:	8c 01       	movw	r16, r24
     d72:	f9 2d       	mov	r31, r9
     d74:	ff 77       	andi	r31, 0x7F	; 127
     d76:	13 c0       	rjmp	.+38     	; 0xd9e <vfprintf+0x438>
     d78:	56 01       	movw	r10, r12
     d7a:	22 e0       	ldi	r18, 0x02	; 2
     d7c:	a2 0e       	add	r10, r18
     d7e:	b1 1c       	adc	r11, r1
     d80:	f6 01       	movw	r30, r12
     d82:	c0 80       	ld	r12, Z
     d84:	d1 80       	ldd	r13, Z+1	; 0x01
     d86:	96 fe       	sbrs	r9, 6
     d88:	03 c0       	rjmp	.+6      	; 0xd90 <vfprintf+0x42a>
     d8a:	61 2f       	mov	r22, r17
     d8c:	70 e0       	ldi	r23, 0x00	; 0
     d8e:	02 c0       	rjmp	.+4      	; 0xd94 <vfprintf+0x42e>
     d90:	6f ef       	ldi	r22, 0xFF	; 255
     d92:	7f ef       	ldi	r23, 0xFF	; 255
     d94:	c6 01       	movw	r24, r12
     d96:	6f d4       	rcall	.+2270   	; 0x1676 <strnlen_P>
     d98:	8c 01       	movw	r16, r24
     d9a:	f9 2d       	mov	r31, r9
     d9c:	f0 68       	ori	r31, 0x80	; 128
     d9e:	9f 2e       	mov	r9, r31
     da0:	f3 fd       	sbrc	r31, 3
     da2:	18 c0       	rjmp	.+48     	; 0xdd4 <vfprintf+0x46e>
     da4:	85 2d       	mov	r24, r5
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	08 17       	cp	r16, r24
     daa:	19 07       	cpc	r17, r25
     dac:	98 f4       	brcc	.+38     	; 0xdd4 <vfprintf+0x46e>
     dae:	b7 01       	movw	r22, r14
     db0:	80 e2       	ldi	r24, 0x20	; 32
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	76 d4       	rcall	.+2284   	; 0x16a2 <fputc>
     db6:	5a 94       	dec	r5
     db8:	f5 cf       	rjmp	.-22     	; 0xda4 <vfprintf+0x43e>
     dba:	f6 01       	movw	r30, r12
     dbc:	97 fc       	sbrc	r9, 7
     dbe:	85 91       	lpm	r24, Z+
     dc0:	97 fe       	sbrs	r9, 7
     dc2:	81 91       	ld	r24, Z+
     dc4:	6f 01       	movw	r12, r30
     dc6:	b7 01       	movw	r22, r14
     dc8:	90 e0       	ldi	r25, 0x00	; 0
     dca:	6b d4       	rcall	.+2262   	; 0x16a2 <fputc>
     dcc:	51 10       	cpse	r5, r1
     dce:	5a 94       	dec	r5
     dd0:	01 50       	subi	r16, 0x01	; 1
     dd2:	11 09       	sbc	r17, r1
     dd4:	01 15       	cp	r16, r1
     dd6:	11 05       	cpc	r17, r1
     dd8:	81 f7       	brne	.-32     	; 0xdba <vfprintf+0x454>
     dda:	f0 c0       	rjmp	.+480    	; 0xfbc <vfprintf+0x656>
     ddc:	84 36       	cpi	r24, 0x64	; 100
     dde:	11 f0       	breq	.+4      	; 0xde4 <vfprintf+0x47e>
     de0:	89 36       	cpi	r24, 0x69	; 105
     de2:	59 f5       	brne	.+86     	; 0xe3a <vfprintf+0x4d4>
     de4:	56 01       	movw	r10, r12
     de6:	97 fe       	sbrs	r9, 7
     de8:	09 c0       	rjmp	.+18     	; 0xdfc <vfprintf+0x496>
     dea:	24 e0       	ldi	r18, 0x04	; 4
     dec:	a2 0e       	add	r10, r18
     dee:	b1 1c       	adc	r11, r1
     df0:	f6 01       	movw	r30, r12
     df2:	60 81       	ld	r22, Z
     df4:	71 81       	ldd	r23, Z+1	; 0x01
     df6:	82 81       	ldd	r24, Z+2	; 0x02
     df8:	93 81       	ldd	r25, Z+3	; 0x03
     dfa:	0a c0       	rjmp	.+20     	; 0xe10 <vfprintf+0x4aa>
     dfc:	f2 e0       	ldi	r31, 0x02	; 2
     dfe:	af 0e       	add	r10, r31
     e00:	b1 1c       	adc	r11, r1
     e02:	f6 01       	movw	r30, r12
     e04:	60 81       	ld	r22, Z
     e06:	71 81       	ldd	r23, Z+1	; 0x01
     e08:	07 2e       	mov	r0, r23
     e0a:	00 0c       	add	r0, r0
     e0c:	88 0b       	sbc	r24, r24
     e0e:	99 0b       	sbc	r25, r25
     e10:	f9 2d       	mov	r31, r9
     e12:	ff 76       	andi	r31, 0x6F	; 111
     e14:	9f 2e       	mov	r9, r31
     e16:	97 ff       	sbrs	r25, 7
     e18:	09 c0       	rjmp	.+18     	; 0xe2c <vfprintf+0x4c6>
     e1a:	90 95       	com	r25
     e1c:	80 95       	com	r24
     e1e:	70 95       	com	r23
     e20:	61 95       	neg	r22
     e22:	7f 4f       	sbci	r23, 0xFF	; 255
     e24:	8f 4f       	sbci	r24, 0xFF	; 255
     e26:	9f 4f       	sbci	r25, 0xFF	; 255
     e28:	f0 68       	ori	r31, 0x80	; 128
     e2a:	9f 2e       	mov	r9, r31
     e2c:	2a e0       	ldi	r18, 0x0A	; 10
     e2e:	30 e0       	ldi	r19, 0x00	; 0
     e30:	a3 01       	movw	r20, r6
     e32:	8c d4       	rcall	.+2328   	; 0x174c <__ultoa_invert>
     e34:	c8 2e       	mov	r12, r24
     e36:	c6 18       	sub	r12, r6
     e38:	3e c0       	rjmp	.+124    	; 0xeb6 <vfprintf+0x550>
     e3a:	09 2d       	mov	r16, r9
     e3c:	85 37       	cpi	r24, 0x75	; 117
     e3e:	21 f4       	brne	.+8      	; 0xe48 <vfprintf+0x4e2>
     e40:	0f 7e       	andi	r16, 0xEF	; 239
     e42:	2a e0       	ldi	r18, 0x0A	; 10
     e44:	30 e0       	ldi	r19, 0x00	; 0
     e46:	1d c0       	rjmp	.+58     	; 0xe82 <vfprintf+0x51c>
     e48:	09 7f       	andi	r16, 0xF9	; 249
     e4a:	8f 36       	cpi	r24, 0x6F	; 111
     e4c:	91 f0       	breq	.+36     	; 0xe72 <vfprintf+0x50c>
     e4e:	18 f4       	brcc	.+6      	; 0xe56 <vfprintf+0x4f0>
     e50:	88 35       	cpi	r24, 0x58	; 88
     e52:	59 f0       	breq	.+22     	; 0xe6a <vfprintf+0x504>
     e54:	bc c0       	rjmp	.+376    	; 0xfce <vfprintf+0x668>
     e56:	80 37       	cpi	r24, 0x70	; 112
     e58:	19 f0       	breq	.+6      	; 0xe60 <vfprintf+0x4fa>
     e5a:	88 37       	cpi	r24, 0x78	; 120
     e5c:	11 f0       	breq	.+4      	; 0xe62 <vfprintf+0x4fc>
     e5e:	b7 c0       	rjmp	.+366    	; 0xfce <vfprintf+0x668>
     e60:	00 61       	ori	r16, 0x10	; 16
     e62:	04 ff       	sbrs	r16, 4
     e64:	09 c0       	rjmp	.+18     	; 0xe78 <vfprintf+0x512>
     e66:	04 60       	ori	r16, 0x04	; 4
     e68:	07 c0       	rjmp	.+14     	; 0xe78 <vfprintf+0x512>
     e6a:	94 fe       	sbrs	r9, 4
     e6c:	08 c0       	rjmp	.+16     	; 0xe7e <vfprintf+0x518>
     e6e:	06 60       	ori	r16, 0x06	; 6
     e70:	06 c0       	rjmp	.+12     	; 0xe7e <vfprintf+0x518>
     e72:	28 e0       	ldi	r18, 0x08	; 8
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	05 c0       	rjmp	.+10     	; 0xe82 <vfprintf+0x51c>
     e78:	20 e1       	ldi	r18, 0x10	; 16
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	02 c0       	rjmp	.+4      	; 0xe82 <vfprintf+0x51c>
     e7e:	20 e1       	ldi	r18, 0x10	; 16
     e80:	32 e0       	ldi	r19, 0x02	; 2
     e82:	56 01       	movw	r10, r12
     e84:	07 ff       	sbrs	r16, 7
     e86:	09 c0       	rjmp	.+18     	; 0xe9a <vfprintf+0x534>
     e88:	84 e0       	ldi	r24, 0x04	; 4
     e8a:	a8 0e       	add	r10, r24
     e8c:	b1 1c       	adc	r11, r1
     e8e:	f6 01       	movw	r30, r12
     e90:	60 81       	ld	r22, Z
     e92:	71 81       	ldd	r23, Z+1	; 0x01
     e94:	82 81       	ldd	r24, Z+2	; 0x02
     e96:	93 81       	ldd	r25, Z+3	; 0x03
     e98:	08 c0       	rjmp	.+16     	; 0xeaa <vfprintf+0x544>
     e9a:	f2 e0       	ldi	r31, 0x02	; 2
     e9c:	af 0e       	add	r10, r31
     e9e:	b1 1c       	adc	r11, r1
     ea0:	f6 01       	movw	r30, r12
     ea2:	60 81       	ld	r22, Z
     ea4:	71 81       	ldd	r23, Z+1	; 0x01
     ea6:	80 e0       	ldi	r24, 0x00	; 0
     ea8:	90 e0       	ldi	r25, 0x00	; 0
     eaa:	a3 01       	movw	r20, r6
     eac:	4f d4       	rcall	.+2206   	; 0x174c <__ultoa_invert>
     eae:	c8 2e       	mov	r12, r24
     eb0:	c6 18       	sub	r12, r6
     eb2:	0f 77       	andi	r16, 0x7F	; 127
     eb4:	90 2e       	mov	r9, r16
     eb6:	96 fe       	sbrs	r9, 6
     eb8:	0b c0       	rjmp	.+22     	; 0xed0 <vfprintf+0x56a>
     eba:	09 2d       	mov	r16, r9
     ebc:	0e 7f       	andi	r16, 0xFE	; 254
     ebe:	c1 16       	cp	r12, r17
     ec0:	50 f4       	brcc	.+20     	; 0xed6 <vfprintf+0x570>
     ec2:	94 fe       	sbrs	r9, 4
     ec4:	0a c0       	rjmp	.+20     	; 0xeda <vfprintf+0x574>
     ec6:	92 fc       	sbrc	r9, 2
     ec8:	08 c0       	rjmp	.+16     	; 0xeda <vfprintf+0x574>
     eca:	09 2d       	mov	r16, r9
     ecc:	0e 7e       	andi	r16, 0xEE	; 238
     ece:	05 c0       	rjmp	.+10     	; 0xeda <vfprintf+0x574>
     ed0:	dc 2c       	mov	r13, r12
     ed2:	09 2d       	mov	r16, r9
     ed4:	03 c0       	rjmp	.+6      	; 0xedc <vfprintf+0x576>
     ed6:	dc 2c       	mov	r13, r12
     ed8:	01 c0       	rjmp	.+2      	; 0xedc <vfprintf+0x576>
     eda:	d1 2e       	mov	r13, r17
     edc:	04 ff       	sbrs	r16, 4
     ede:	0d c0       	rjmp	.+26     	; 0xefa <vfprintf+0x594>
     ee0:	fe 01       	movw	r30, r28
     ee2:	ec 0d       	add	r30, r12
     ee4:	f1 1d       	adc	r31, r1
     ee6:	80 81       	ld	r24, Z
     ee8:	80 33       	cpi	r24, 0x30	; 48
     eea:	11 f4       	brne	.+4      	; 0xef0 <vfprintf+0x58a>
     eec:	09 7e       	andi	r16, 0xE9	; 233
     eee:	09 c0       	rjmp	.+18     	; 0xf02 <vfprintf+0x59c>
     ef0:	02 ff       	sbrs	r16, 2
     ef2:	06 c0       	rjmp	.+12     	; 0xf00 <vfprintf+0x59a>
     ef4:	d3 94       	inc	r13
     ef6:	d3 94       	inc	r13
     ef8:	04 c0       	rjmp	.+8      	; 0xf02 <vfprintf+0x59c>
     efa:	80 2f       	mov	r24, r16
     efc:	86 78       	andi	r24, 0x86	; 134
     efe:	09 f0       	breq	.+2      	; 0xf02 <vfprintf+0x59c>
     f00:	d3 94       	inc	r13
     f02:	03 fd       	sbrc	r16, 3
     f04:	10 c0       	rjmp	.+32     	; 0xf26 <vfprintf+0x5c0>
     f06:	00 ff       	sbrs	r16, 0
     f08:	06 c0       	rjmp	.+12     	; 0xf16 <vfprintf+0x5b0>
     f0a:	1c 2d       	mov	r17, r12
     f0c:	d5 14       	cp	r13, r5
     f0e:	78 f4       	brcc	.+30     	; 0xf2e <vfprintf+0x5c8>
     f10:	15 0d       	add	r17, r5
     f12:	1d 19       	sub	r17, r13
     f14:	0c c0       	rjmp	.+24     	; 0xf2e <vfprintf+0x5c8>
     f16:	d5 14       	cp	r13, r5
     f18:	50 f4       	brcc	.+20     	; 0xf2e <vfprintf+0x5c8>
     f1a:	b7 01       	movw	r22, r14
     f1c:	80 e2       	ldi	r24, 0x20	; 32
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	c0 d3       	rcall	.+1920   	; 0x16a2 <fputc>
     f22:	d3 94       	inc	r13
     f24:	f8 cf       	rjmp	.-16     	; 0xf16 <vfprintf+0x5b0>
     f26:	d5 14       	cp	r13, r5
     f28:	10 f4       	brcc	.+4      	; 0xf2e <vfprintf+0x5c8>
     f2a:	5d 18       	sub	r5, r13
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <vfprintf+0x5ca>
     f2e:	51 2c       	mov	r5, r1
     f30:	04 ff       	sbrs	r16, 4
     f32:	0f c0       	rjmp	.+30     	; 0xf52 <vfprintf+0x5ec>
     f34:	b7 01       	movw	r22, r14
     f36:	80 e3       	ldi	r24, 0x30	; 48
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	b3 d3       	rcall	.+1894   	; 0x16a2 <fputc>
     f3c:	02 ff       	sbrs	r16, 2
     f3e:	16 c0       	rjmp	.+44     	; 0xf6c <vfprintf+0x606>
     f40:	01 fd       	sbrc	r16, 1
     f42:	03 c0       	rjmp	.+6      	; 0xf4a <vfprintf+0x5e4>
     f44:	88 e7       	ldi	r24, 0x78	; 120
     f46:	90 e0       	ldi	r25, 0x00	; 0
     f48:	02 c0       	rjmp	.+4      	; 0xf4e <vfprintf+0x5e8>
     f4a:	88 e5       	ldi	r24, 0x58	; 88
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	b7 01       	movw	r22, r14
     f50:	0c c0       	rjmp	.+24     	; 0xf6a <vfprintf+0x604>
     f52:	80 2f       	mov	r24, r16
     f54:	86 78       	andi	r24, 0x86	; 134
     f56:	51 f0       	breq	.+20     	; 0xf6c <vfprintf+0x606>
     f58:	01 ff       	sbrs	r16, 1
     f5a:	02 c0       	rjmp	.+4      	; 0xf60 <vfprintf+0x5fa>
     f5c:	8b e2       	ldi	r24, 0x2B	; 43
     f5e:	01 c0       	rjmp	.+2      	; 0xf62 <vfprintf+0x5fc>
     f60:	80 e2       	ldi	r24, 0x20	; 32
     f62:	07 fd       	sbrc	r16, 7
     f64:	8d e2       	ldi	r24, 0x2D	; 45
     f66:	b7 01       	movw	r22, r14
     f68:	90 e0       	ldi	r25, 0x00	; 0
     f6a:	9b d3       	rcall	.+1846   	; 0x16a2 <fputc>
     f6c:	c1 16       	cp	r12, r17
     f6e:	30 f4       	brcc	.+12     	; 0xf7c <vfprintf+0x616>
     f70:	b7 01       	movw	r22, r14
     f72:	80 e3       	ldi	r24, 0x30	; 48
     f74:	90 e0       	ldi	r25, 0x00	; 0
     f76:	95 d3       	rcall	.+1834   	; 0x16a2 <fputc>
     f78:	11 50       	subi	r17, 0x01	; 1
     f7a:	f8 cf       	rjmp	.-16     	; 0xf6c <vfprintf+0x606>
     f7c:	ca 94       	dec	r12
     f7e:	f3 01       	movw	r30, r6
     f80:	ec 0d       	add	r30, r12
     f82:	f1 1d       	adc	r31, r1
     f84:	80 81       	ld	r24, Z
     f86:	b7 01       	movw	r22, r14
     f88:	90 e0       	ldi	r25, 0x00	; 0
     f8a:	8b d3       	rcall	.+1814   	; 0x16a2 <fputc>
     f8c:	c1 10       	cpse	r12, r1
     f8e:	f6 cf       	rjmp	.-20     	; 0xf7c <vfprintf+0x616>
     f90:	15 c0       	rjmp	.+42     	; 0xfbc <vfprintf+0x656>
     f92:	f4 e0       	ldi	r31, 0x04	; 4
     f94:	f5 15       	cp	r31, r5
     f96:	50 f5       	brcc	.+84     	; 0xfec <vfprintf+0x686>
     f98:	84 e0       	ldi	r24, 0x04	; 4
     f9a:	58 1a       	sub	r5, r24
     f9c:	93 fe       	sbrs	r9, 3
     f9e:	1e c0       	rjmp	.+60     	; 0xfdc <vfprintf+0x676>
     fa0:	01 11       	cpse	r16, r1
     fa2:	25 c0       	rjmp	.+74     	; 0xfee <vfprintf+0x688>
     fa4:	2c 85       	ldd	r18, Y+12	; 0x0c
     fa6:	23 ff       	sbrs	r18, 3
     fa8:	27 c0       	rjmp	.+78     	; 0xff8 <vfprintf+0x692>
     faa:	04 e5       	ldi	r16, 0x54	; 84
     fac:	10 e0       	ldi	r17, 0x00	; 0
     fae:	39 2d       	mov	r19, r9
     fb0:	30 71       	andi	r19, 0x10	; 16
     fb2:	93 2e       	mov	r9, r19
     fb4:	f8 01       	movw	r30, r16
     fb6:	84 91       	lpm	r24, Z
     fb8:	81 11       	cpse	r24, r1
     fba:	21 c0       	rjmp	.+66     	; 0xffe <vfprintf+0x698>
     fbc:	55 20       	and	r5, r5
     fbe:	09 f4       	brne	.+2      	; 0xfc2 <vfprintf+0x65c>
     fc0:	fc cc       	rjmp	.-1544   	; 0x9ba <vfprintf+0x54>
     fc2:	b7 01       	movw	r22, r14
     fc4:	80 e2       	ldi	r24, 0x20	; 32
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	6c d3       	rcall	.+1752   	; 0x16a2 <fputc>
     fca:	5a 94       	dec	r5
     fcc:	f7 cf       	rjmp	.-18     	; 0xfbc <vfprintf+0x656>
     fce:	f7 01       	movw	r30, r14
     fd0:	86 81       	ldd	r24, Z+6	; 0x06
     fd2:	97 81       	ldd	r25, Z+7	; 0x07
     fd4:	23 c0       	rjmp	.+70     	; 0x101c <vfprintf+0x6b6>
     fd6:	8f ef       	ldi	r24, 0xFF	; 255
     fd8:	9f ef       	ldi	r25, 0xFF	; 255
     fda:	20 c0       	rjmp	.+64     	; 0x101c <vfprintf+0x6b6>
     fdc:	b7 01       	movw	r22, r14
     fde:	80 e2       	ldi	r24, 0x20	; 32
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	5f d3       	rcall	.+1726   	; 0x16a2 <fputc>
     fe4:	5a 94       	dec	r5
     fe6:	51 10       	cpse	r5, r1
     fe8:	f9 cf       	rjmp	.-14     	; 0xfdc <vfprintf+0x676>
     fea:	da cf       	rjmp	.-76     	; 0xfa0 <vfprintf+0x63a>
     fec:	51 2c       	mov	r5, r1
     fee:	b7 01       	movw	r22, r14
     ff0:	80 2f       	mov	r24, r16
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	56 d3       	rcall	.+1708   	; 0x16a2 <fputc>
     ff6:	d6 cf       	rjmp	.-84     	; 0xfa4 <vfprintf+0x63e>
     ff8:	08 e5       	ldi	r16, 0x58	; 88
     ffa:	10 e0       	ldi	r17, 0x00	; 0
     ffc:	d8 cf       	rjmp	.-80     	; 0xfae <vfprintf+0x648>
     ffe:	91 10       	cpse	r9, r1
    1000:	80 52       	subi	r24, 0x20	; 32
    1002:	b7 01       	movw	r22, r14
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	4d d3       	rcall	.+1690   	; 0x16a2 <fputc>
    1008:	0f 5f       	subi	r16, 0xFF	; 255
    100a:	1f 4f       	sbci	r17, 0xFF	; 255
    100c:	d3 cf       	rjmp	.-90     	; 0xfb4 <vfprintf+0x64e>
    100e:	23 e0       	ldi	r18, 0x03	; 3
    1010:	25 15       	cp	r18, r5
    1012:	10 f4       	brcc	.+4      	; 0x1018 <vfprintf+0x6b2>
    1014:	83 e0       	ldi	r24, 0x03	; 3
    1016:	c1 cf       	rjmp	.-126    	; 0xf9a <vfprintf+0x634>
    1018:	51 2c       	mov	r5, r1
    101a:	c4 cf       	rjmp	.-120    	; 0xfa4 <vfprintf+0x63e>
    101c:	60 96       	adiw	r28, 0x10	; 16
    101e:	e2 e1       	ldi	r30, 0x12	; 18
    1020:	37 c2       	rjmp	.+1134   	; 0x1490 <__epilogue_restores__>

00001022 <__subsf3>:
    1022:	50 58       	subi	r21, 0x80	; 128

00001024 <__addsf3>:
    1024:	bb 27       	eor	r27, r27
    1026:	aa 27       	eor	r26, r26
    1028:	0e d0       	rcall	.+28     	; 0x1046 <__addsf3x>
    102a:	75 c1       	rjmp	.+746    	; 0x1316 <__fp_round>
    102c:	66 d1       	rcall	.+716    	; 0x12fa <__fp_pscA>
    102e:	30 f0       	brcs	.+12     	; 0x103c <__addsf3+0x18>
    1030:	6b d1       	rcall	.+726    	; 0x1308 <__fp_pscB>
    1032:	20 f0       	brcs	.+8      	; 0x103c <__addsf3+0x18>
    1034:	31 f4       	brne	.+12     	; 0x1042 <__addsf3+0x1e>
    1036:	9f 3f       	cpi	r25, 0xFF	; 255
    1038:	11 f4       	brne	.+4      	; 0x103e <__addsf3+0x1a>
    103a:	1e f4       	brtc	.+6      	; 0x1042 <__addsf3+0x1e>
    103c:	5b c1       	rjmp	.+694    	; 0x12f4 <__fp_nan>
    103e:	0e f4       	brtc	.+2      	; 0x1042 <__addsf3+0x1e>
    1040:	e0 95       	com	r30
    1042:	e7 fb       	bst	r30, 7
    1044:	51 c1       	rjmp	.+674    	; 0x12e8 <__fp_inf>

00001046 <__addsf3x>:
    1046:	e9 2f       	mov	r30, r25
    1048:	77 d1       	rcall	.+750    	; 0x1338 <__fp_split3>
    104a:	80 f3       	brcs	.-32     	; 0x102c <__addsf3+0x8>
    104c:	ba 17       	cp	r27, r26
    104e:	62 07       	cpc	r22, r18
    1050:	73 07       	cpc	r23, r19
    1052:	84 07       	cpc	r24, r20
    1054:	95 07       	cpc	r25, r21
    1056:	18 f0       	brcs	.+6      	; 0x105e <__addsf3x+0x18>
    1058:	71 f4       	brne	.+28     	; 0x1076 <__addsf3x+0x30>
    105a:	9e f5       	brtc	.+102    	; 0x10c2 <__addsf3x+0x7c>
    105c:	8f c1       	rjmp	.+798    	; 0x137c <__fp_zero>
    105e:	0e f4       	brtc	.+2      	; 0x1062 <__addsf3x+0x1c>
    1060:	e0 95       	com	r30
    1062:	0b 2e       	mov	r0, r27
    1064:	ba 2f       	mov	r27, r26
    1066:	a0 2d       	mov	r26, r0
    1068:	0b 01       	movw	r0, r22
    106a:	b9 01       	movw	r22, r18
    106c:	90 01       	movw	r18, r0
    106e:	0c 01       	movw	r0, r24
    1070:	ca 01       	movw	r24, r20
    1072:	a0 01       	movw	r20, r0
    1074:	11 24       	eor	r1, r1
    1076:	ff 27       	eor	r31, r31
    1078:	59 1b       	sub	r21, r25
    107a:	99 f0       	breq	.+38     	; 0x10a2 <__addsf3x+0x5c>
    107c:	59 3f       	cpi	r21, 0xF9	; 249
    107e:	50 f4       	brcc	.+20     	; 0x1094 <__addsf3x+0x4e>
    1080:	50 3e       	cpi	r21, 0xE0	; 224
    1082:	68 f1       	brcs	.+90     	; 0x10de <__addsf3x+0x98>
    1084:	1a 16       	cp	r1, r26
    1086:	f0 40       	sbci	r31, 0x00	; 0
    1088:	a2 2f       	mov	r26, r18
    108a:	23 2f       	mov	r18, r19
    108c:	34 2f       	mov	r19, r20
    108e:	44 27       	eor	r20, r20
    1090:	58 5f       	subi	r21, 0xF8	; 248
    1092:	f3 cf       	rjmp	.-26     	; 0x107a <__addsf3x+0x34>
    1094:	46 95       	lsr	r20
    1096:	37 95       	ror	r19
    1098:	27 95       	ror	r18
    109a:	a7 95       	ror	r26
    109c:	f0 40       	sbci	r31, 0x00	; 0
    109e:	53 95       	inc	r21
    10a0:	c9 f7       	brne	.-14     	; 0x1094 <__addsf3x+0x4e>
    10a2:	7e f4       	brtc	.+30     	; 0x10c2 <__addsf3x+0x7c>
    10a4:	1f 16       	cp	r1, r31
    10a6:	ba 0b       	sbc	r27, r26
    10a8:	62 0b       	sbc	r22, r18
    10aa:	73 0b       	sbc	r23, r19
    10ac:	84 0b       	sbc	r24, r20
    10ae:	ba f0       	brmi	.+46     	; 0x10de <__addsf3x+0x98>
    10b0:	91 50       	subi	r25, 0x01	; 1
    10b2:	a1 f0       	breq	.+40     	; 0x10dc <__addsf3x+0x96>
    10b4:	ff 0f       	add	r31, r31
    10b6:	bb 1f       	adc	r27, r27
    10b8:	66 1f       	adc	r22, r22
    10ba:	77 1f       	adc	r23, r23
    10bc:	88 1f       	adc	r24, r24
    10be:	c2 f7       	brpl	.-16     	; 0x10b0 <__addsf3x+0x6a>
    10c0:	0e c0       	rjmp	.+28     	; 0x10de <__addsf3x+0x98>
    10c2:	ba 0f       	add	r27, r26
    10c4:	62 1f       	adc	r22, r18
    10c6:	73 1f       	adc	r23, r19
    10c8:	84 1f       	adc	r24, r20
    10ca:	48 f4       	brcc	.+18     	; 0x10de <__addsf3x+0x98>
    10cc:	87 95       	ror	r24
    10ce:	77 95       	ror	r23
    10d0:	67 95       	ror	r22
    10d2:	b7 95       	ror	r27
    10d4:	f7 95       	ror	r31
    10d6:	9e 3f       	cpi	r25, 0xFE	; 254
    10d8:	08 f0       	brcs	.+2      	; 0x10dc <__addsf3x+0x96>
    10da:	b3 cf       	rjmp	.-154    	; 0x1042 <__addsf3+0x1e>
    10dc:	93 95       	inc	r25
    10de:	88 0f       	add	r24, r24
    10e0:	08 f0       	brcs	.+2      	; 0x10e4 <__addsf3x+0x9e>
    10e2:	99 27       	eor	r25, r25
    10e4:	ee 0f       	add	r30, r30
    10e6:	97 95       	ror	r25
    10e8:	87 95       	ror	r24
    10ea:	08 95       	ret

000010ec <__cmpsf2>:
    10ec:	d9 d0       	rcall	.+434    	; 0x12a0 <__fp_cmp>
    10ee:	08 f4       	brcc	.+2      	; 0x10f2 <__cmpsf2+0x6>
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	08 95       	ret

000010f4 <__divsf3>:
    10f4:	0c d0       	rcall	.+24     	; 0x110e <__divsf3x>
    10f6:	0f c1       	rjmp	.+542    	; 0x1316 <__fp_round>
    10f8:	07 d1       	rcall	.+526    	; 0x1308 <__fp_pscB>
    10fa:	40 f0       	brcs	.+16     	; 0x110c <__divsf3+0x18>
    10fc:	fe d0       	rcall	.+508    	; 0x12fa <__fp_pscA>
    10fe:	30 f0       	brcs	.+12     	; 0x110c <__divsf3+0x18>
    1100:	21 f4       	brne	.+8      	; 0x110a <__divsf3+0x16>
    1102:	5f 3f       	cpi	r21, 0xFF	; 255
    1104:	19 f0       	breq	.+6      	; 0x110c <__divsf3+0x18>
    1106:	f0 c0       	rjmp	.+480    	; 0x12e8 <__fp_inf>
    1108:	51 11       	cpse	r21, r1
    110a:	39 c1       	rjmp	.+626    	; 0x137e <__fp_szero>
    110c:	f3 c0       	rjmp	.+486    	; 0x12f4 <__fp_nan>

0000110e <__divsf3x>:
    110e:	14 d1       	rcall	.+552    	; 0x1338 <__fp_split3>
    1110:	98 f3       	brcs	.-26     	; 0x10f8 <__divsf3+0x4>

00001112 <__divsf3_pse>:
    1112:	99 23       	and	r25, r25
    1114:	c9 f3       	breq	.-14     	; 0x1108 <__divsf3+0x14>
    1116:	55 23       	and	r21, r21
    1118:	b1 f3       	breq	.-20     	; 0x1106 <__divsf3+0x12>
    111a:	95 1b       	sub	r25, r21
    111c:	55 0b       	sbc	r21, r21
    111e:	bb 27       	eor	r27, r27
    1120:	aa 27       	eor	r26, r26
    1122:	62 17       	cp	r22, r18
    1124:	73 07       	cpc	r23, r19
    1126:	84 07       	cpc	r24, r20
    1128:	38 f0       	brcs	.+14     	; 0x1138 <__divsf3_pse+0x26>
    112a:	9f 5f       	subi	r25, 0xFF	; 255
    112c:	5f 4f       	sbci	r21, 0xFF	; 255
    112e:	22 0f       	add	r18, r18
    1130:	33 1f       	adc	r19, r19
    1132:	44 1f       	adc	r20, r20
    1134:	aa 1f       	adc	r26, r26
    1136:	a9 f3       	breq	.-22     	; 0x1122 <__divsf3_pse+0x10>
    1138:	33 d0       	rcall	.+102    	; 0x11a0 <__divsf3_pse+0x8e>
    113a:	0e 2e       	mov	r0, r30
    113c:	3a f0       	brmi	.+14     	; 0x114c <__divsf3_pse+0x3a>
    113e:	e0 e8       	ldi	r30, 0x80	; 128
    1140:	30 d0       	rcall	.+96     	; 0x11a2 <__divsf3_pse+0x90>
    1142:	91 50       	subi	r25, 0x01	; 1
    1144:	50 40       	sbci	r21, 0x00	; 0
    1146:	e6 95       	lsr	r30
    1148:	00 1c       	adc	r0, r0
    114a:	ca f7       	brpl	.-14     	; 0x113e <__divsf3_pse+0x2c>
    114c:	29 d0       	rcall	.+82     	; 0x11a0 <__divsf3_pse+0x8e>
    114e:	fe 2f       	mov	r31, r30
    1150:	27 d0       	rcall	.+78     	; 0x11a0 <__divsf3_pse+0x8e>
    1152:	66 0f       	add	r22, r22
    1154:	77 1f       	adc	r23, r23
    1156:	88 1f       	adc	r24, r24
    1158:	bb 1f       	adc	r27, r27
    115a:	26 17       	cp	r18, r22
    115c:	37 07       	cpc	r19, r23
    115e:	48 07       	cpc	r20, r24
    1160:	ab 07       	cpc	r26, r27
    1162:	b0 e8       	ldi	r27, 0x80	; 128
    1164:	09 f0       	breq	.+2      	; 0x1168 <__divsf3_pse+0x56>
    1166:	bb 0b       	sbc	r27, r27
    1168:	80 2d       	mov	r24, r0
    116a:	bf 01       	movw	r22, r30
    116c:	ff 27       	eor	r31, r31
    116e:	93 58       	subi	r25, 0x83	; 131
    1170:	5f 4f       	sbci	r21, 0xFF	; 255
    1172:	2a f0       	brmi	.+10     	; 0x117e <__divsf3_pse+0x6c>
    1174:	9e 3f       	cpi	r25, 0xFE	; 254
    1176:	51 05       	cpc	r21, r1
    1178:	68 f0       	brcs	.+26     	; 0x1194 <__divsf3_pse+0x82>
    117a:	b6 c0       	rjmp	.+364    	; 0x12e8 <__fp_inf>
    117c:	00 c1       	rjmp	.+512    	; 0x137e <__fp_szero>
    117e:	5f 3f       	cpi	r21, 0xFF	; 255
    1180:	ec f3       	brlt	.-6      	; 0x117c <__divsf3_pse+0x6a>
    1182:	98 3e       	cpi	r25, 0xE8	; 232
    1184:	dc f3       	brlt	.-10     	; 0x117c <__divsf3_pse+0x6a>
    1186:	86 95       	lsr	r24
    1188:	77 95       	ror	r23
    118a:	67 95       	ror	r22
    118c:	b7 95       	ror	r27
    118e:	f7 95       	ror	r31
    1190:	9f 5f       	subi	r25, 0xFF	; 255
    1192:	c9 f7       	brne	.-14     	; 0x1186 <__divsf3_pse+0x74>
    1194:	88 0f       	add	r24, r24
    1196:	91 1d       	adc	r25, r1
    1198:	96 95       	lsr	r25
    119a:	87 95       	ror	r24
    119c:	97 f9       	bld	r25, 7
    119e:	08 95       	ret
    11a0:	e1 e0       	ldi	r30, 0x01	; 1
    11a2:	66 0f       	add	r22, r22
    11a4:	77 1f       	adc	r23, r23
    11a6:	88 1f       	adc	r24, r24
    11a8:	bb 1f       	adc	r27, r27
    11aa:	62 17       	cp	r22, r18
    11ac:	73 07       	cpc	r23, r19
    11ae:	84 07       	cpc	r24, r20
    11b0:	ba 07       	cpc	r27, r26
    11b2:	20 f0       	brcs	.+8      	; 0x11bc <__divsf3_pse+0xaa>
    11b4:	62 1b       	sub	r22, r18
    11b6:	73 0b       	sbc	r23, r19
    11b8:	84 0b       	sbc	r24, r20
    11ba:	ba 0b       	sbc	r27, r26
    11bc:	ee 1f       	adc	r30, r30
    11be:	88 f7       	brcc	.-30     	; 0x11a2 <__divsf3_pse+0x90>
    11c0:	e0 95       	com	r30
    11c2:	08 95       	ret

000011c4 <__fixsfsi>:
    11c4:	04 d0       	rcall	.+8      	; 0x11ce <__fixunssfsi>
    11c6:	68 94       	set
    11c8:	b1 11       	cpse	r27, r1
    11ca:	d9 c0       	rjmp	.+434    	; 0x137e <__fp_szero>
    11cc:	08 95       	ret

000011ce <__fixunssfsi>:
    11ce:	bc d0       	rcall	.+376    	; 0x1348 <__fp_splitA>
    11d0:	88 f0       	brcs	.+34     	; 0x11f4 <__fixunssfsi+0x26>
    11d2:	9f 57       	subi	r25, 0x7F	; 127
    11d4:	90 f0       	brcs	.+36     	; 0x11fa <__fixunssfsi+0x2c>
    11d6:	b9 2f       	mov	r27, r25
    11d8:	99 27       	eor	r25, r25
    11da:	b7 51       	subi	r27, 0x17	; 23
    11dc:	a0 f0       	brcs	.+40     	; 0x1206 <__fixunssfsi+0x38>
    11de:	d1 f0       	breq	.+52     	; 0x1214 <__fixunssfsi+0x46>
    11e0:	66 0f       	add	r22, r22
    11e2:	77 1f       	adc	r23, r23
    11e4:	88 1f       	adc	r24, r24
    11e6:	99 1f       	adc	r25, r25
    11e8:	1a f0       	brmi	.+6      	; 0x11f0 <__fixunssfsi+0x22>
    11ea:	ba 95       	dec	r27
    11ec:	c9 f7       	brne	.-14     	; 0x11e0 <__fixunssfsi+0x12>
    11ee:	12 c0       	rjmp	.+36     	; 0x1214 <__fixunssfsi+0x46>
    11f0:	b1 30       	cpi	r27, 0x01	; 1
    11f2:	81 f0       	breq	.+32     	; 0x1214 <__fixunssfsi+0x46>
    11f4:	c3 d0       	rcall	.+390    	; 0x137c <__fp_zero>
    11f6:	b1 e0       	ldi	r27, 0x01	; 1
    11f8:	08 95       	ret
    11fa:	c0 c0       	rjmp	.+384    	; 0x137c <__fp_zero>
    11fc:	67 2f       	mov	r22, r23
    11fe:	78 2f       	mov	r23, r24
    1200:	88 27       	eor	r24, r24
    1202:	b8 5f       	subi	r27, 0xF8	; 248
    1204:	39 f0       	breq	.+14     	; 0x1214 <__fixunssfsi+0x46>
    1206:	b9 3f       	cpi	r27, 0xF9	; 249
    1208:	cc f3       	brlt	.-14     	; 0x11fc <__fixunssfsi+0x2e>
    120a:	86 95       	lsr	r24
    120c:	77 95       	ror	r23
    120e:	67 95       	ror	r22
    1210:	b3 95       	inc	r27
    1212:	d9 f7       	brne	.-10     	; 0x120a <__fixunssfsi+0x3c>
    1214:	3e f4       	brtc	.+14     	; 0x1224 <__fixunssfsi+0x56>
    1216:	90 95       	com	r25
    1218:	80 95       	com	r24
    121a:	70 95       	com	r23
    121c:	61 95       	neg	r22
    121e:	7f 4f       	sbci	r23, 0xFF	; 255
    1220:	8f 4f       	sbci	r24, 0xFF	; 255
    1222:	9f 4f       	sbci	r25, 0xFF	; 255
    1224:	08 95       	ret

00001226 <__floatunsisf>:
    1226:	e8 94       	clt
    1228:	09 c0       	rjmp	.+18     	; 0x123c <__floatsisf+0x12>

0000122a <__floatsisf>:
    122a:	97 fb       	bst	r25, 7
    122c:	3e f4       	brtc	.+14     	; 0x123c <__floatsisf+0x12>
    122e:	90 95       	com	r25
    1230:	80 95       	com	r24
    1232:	70 95       	com	r23
    1234:	61 95       	neg	r22
    1236:	7f 4f       	sbci	r23, 0xFF	; 255
    1238:	8f 4f       	sbci	r24, 0xFF	; 255
    123a:	9f 4f       	sbci	r25, 0xFF	; 255
    123c:	99 23       	and	r25, r25
    123e:	a9 f0       	breq	.+42     	; 0x126a <__floatsisf+0x40>
    1240:	f9 2f       	mov	r31, r25
    1242:	96 e9       	ldi	r25, 0x96	; 150
    1244:	bb 27       	eor	r27, r27
    1246:	93 95       	inc	r25
    1248:	f6 95       	lsr	r31
    124a:	87 95       	ror	r24
    124c:	77 95       	ror	r23
    124e:	67 95       	ror	r22
    1250:	b7 95       	ror	r27
    1252:	f1 11       	cpse	r31, r1
    1254:	f8 cf       	rjmp	.-16     	; 0x1246 <__floatsisf+0x1c>
    1256:	fa f4       	brpl	.+62     	; 0x1296 <__floatsisf+0x6c>
    1258:	bb 0f       	add	r27, r27
    125a:	11 f4       	brne	.+4      	; 0x1260 <__floatsisf+0x36>
    125c:	60 ff       	sbrs	r22, 0
    125e:	1b c0       	rjmp	.+54     	; 0x1296 <__floatsisf+0x6c>
    1260:	6f 5f       	subi	r22, 0xFF	; 255
    1262:	7f 4f       	sbci	r23, 0xFF	; 255
    1264:	8f 4f       	sbci	r24, 0xFF	; 255
    1266:	9f 4f       	sbci	r25, 0xFF	; 255
    1268:	16 c0       	rjmp	.+44     	; 0x1296 <__floatsisf+0x6c>
    126a:	88 23       	and	r24, r24
    126c:	11 f0       	breq	.+4      	; 0x1272 <__floatsisf+0x48>
    126e:	96 e9       	ldi	r25, 0x96	; 150
    1270:	11 c0       	rjmp	.+34     	; 0x1294 <__floatsisf+0x6a>
    1272:	77 23       	and	r23, r23
    1274:	21 f0       	breq	.+8      	; 0x127e <__floatsisf+0x54>
    1276:	9e e8       	ldi	r25, 0x8E	; 142
    1278:	87 2f       	mov	r24, r23
    127a:	76 2f       	mov	r23, r22
    127c:	05 c0       	rjmp	.+10     	; 0x1288 <__floatsisf+0x5e>
    127e:	66 23       	and	r22, r22
    1280:	71 f0       	breq	.+28     	; 0x129e <__floatsisf+0x74>
    1282:	96 e8       	ldi	r25, 0x86	; 134
    1284:	86 2f       	mov	r24, r22
    1286:	70 e0       	ldi	r23, 0x00	; 0
    1288:	60 e0       	ldi	r22, 0x00	; 0
    128a:	2a f0       	brmi	.+10     	; 0x1296 <__floatsisf+0x6c>
    128c:	9a 95       	dec	r25
    128e:	66 0f       	add	r22, r22
    1290:	77 1f       	adc	r23, r23
    1292:	88 1f       	adc	r24, r24
    1294:	da f7       	brpl	.-10     	; 0x128c <__floatsisf+0x62>
    1296:	88 0f       	add	r24, r24
    1298:	96 95       	lsr	r25
    129a:	87 95       	ror	r24
    129c:	97 f9       	bld	r25, 7
    129e:	08 95       	ret

000012a0 <__fp_cmp>:
    12a0:	99 0f       	add	r25, r25
    12a2:	00 08       	sbc	r0, r0
    12a4:	55 0f       	add	r21, r21
    12a6:	aa 0b       	sbc	r26, r26
    12a8:	e0 e8       	ldi	r30, 0x80	; 128
    12aa:	fe ef       	ldi	r31, 0xFE	; 254
    12ac:	16 16       	cp	r1, r22
    12ae:	17 06       	cpc	r1, r23
    12b0:	e8 07       	cpc	r30, r24
    12b2:	f9 07       	cpc	r31, r25
    12b4:	c0 f0       	brcs	.+48     	; 0x12e6 <__fp_cmp+0x46>
    12b6:	12 16       	cp	r1, r18
    12b8:	13 06       	cpc	r1, r19
    12ba:	e4 07       	cpc	r30, r20
    12bc:	f5 07       	cpc	r31, r21
    12be:	98 f0       	brcs	.+38     	; 0x12e6 <__fp_cmp+0x46>
    12c0:	62 1b       	sub	r22, r18
    12c2:	73 0b       	sbc	r23, r19
    12c4:	84 0b       	sbc	r24, r20
    12c6:	95 0b       	sbc	r25, r21
    12c8:	39 f4       	brne	.+14     	; 0x12d8 <__fp_cmp+0x38>
    12ca:	0a 26       	eor	r0, r26
    12cc:	61 f0       	breq	.+24     	; 0x12e6 <__fp_cmp+0x46>
    12ce:	23 2b       	or	r18, r19
    12d0:	24 2b       	or	r18, r20
    12d2:	25 2b       	or	r18, r21
    12d4:	21 f4       	brne	.+8      	; 0x12de <__fp_cmp+0x3e>
    12d6:	08 95       	ret
    12d8:	0a 26       	eor	r0, r26
    12da:	09 f4       	brne	.+2      	; 0x12de <__fp_cmp+0x3e>
    12dc:	a1 40       	sbci	r26, 0x01	; 1
    12de:	a6 95       	lsr	r26
    12e0:	8f ef       	ldi	r24, 0xFF	; 255
    12e2:	81 1d       	adc	r24, r1
    12e4:	81 1d       	adc	r24, r1
    12e6:	08 95       	ret

000012e8 <__fp_inf>:
    12e8:	97 f9       	bld	r25, 7
    12ea:	9f 67       	ori	r25, 0x7F	; 127
    12ec:	80 e8       	ldi	r24, 0x80	; 128
    12ee:	70 e0       	ldi	r23, 0x00	; 0
    12f0:	60 e0       	ldi	r22, 0x00	; 0
    12f2:	08 95       	ret

000012f4 <__fp_nan>:
    12f4:	9f ef       	ldi	r25, 0xFF	; 255
    12f6:	80 ec       	ldi	r24, 0xC0	; 192
    12f8:	08 95       	ret

000012fa <__fp_pscA>:
    12fa:	00 24       	eor	r0, r0
    12fc:	0a 94       	dec	r0
    12fe:	16 16       	cp	r1, r22
    1300:	17 06       	cpc	r1, r23
    1302:	18 06       	cpc	r1, r24
    1304:	09 06       	cpc	r0, r25
    1306:	08 95       	ret

00001308 <__fp_pscB>:
    1308:	00 24       	eor	r0, r0
    130a:	0a 94       	dec	r0
    130c:	12 16       	cp	r1, r18
    130e:	13 06       	cpc	r1, r19
    1310:	14 06       	cpc	r1, r20
    1312:	05 06       	cpc	r0, r21
    1314:	08 95       	ret

00001316 <__fp_round>:
    1316:	09 2e       	mov	r0, r25
    1318:	03 94       	inc	r0
    131a:	00 0c       	add	r0, r0
    131c:	11 f4       	brne	.+4      	; 0x1322 <__fp_round+0xc>
    131e:	88 23       	and	r24, r24
    1320:	52 f0       	brmi	.+20     	; 0x1336 <__fp_round+0x20>
    1322:	bb 0f       	add	r27, r27
    1324:	40 f4       	brcc	.+16     	; 0x1336 <__fp_round+0x20>
    1326:	bf 2b       	or	r27, r31
    1328:	11 f4       	brne	.+4      	; 0x132e <__fp_round+0x18>
    132a:	60 ff       	sbrs	r22, 0
    132c:	04 c0       	rjmp	.+8      	; 0x1336 <__fp_round+0x20>
    132e:	6f 5f       	subi	r22, 0xFF	; 255
    1330:	7f 4f       	sbci	r23, 0xFF	; 255
    1332:	8f 4f       	sbci	r24, 0xFF	; 255
    1334:	9f 4f       	sbci	r25, 0xFF	; 255
    1336:	08 95       	ret

00001338 <__fp_split3>:
    1338:	57 fd       	sbrc	r21, 7
    133a:	90 58       	subi	r25, 0x80	; 128
    133c:	44 0f       	add	r20, r20
    133e:	55 1f       	adc	r21, r21
    1340:	59 f0       	breq	.+22     	; 0x1358 <__fp_splitA+0x10>
    1342:	5f 3f       	cpi	r21, 0xFF	; 255
    1344:	71 f0       	breq	.+28     	; 0x1362 <__fp_splitA+0x1a>
    1346:	47 95       	ror	r20

00001348 <__fp_splitA>:
    1348:	88 0f       	add	r24, r24
    134a:	97 fb       	bst	r25, 7
    134c:	99 1f       	adc	r25, r25
    134e:	61 f0       	breq	.+24     	; 0x1368 <__fp_splitA+0x20>
    1350:	9f 3f       	cpi	r25, 0xFF	; 255
    1352:	79 f0       	breq	.+30     	; 0x1372 <__fp_splitA+0x2a>
    1354:	87 95       	ror	r24
    1356:	08 95       	ret
    1358:	12 16       	cp	r1, r18
    135a:	13 06       	cpc	r1, r19
    135c:	14 06       	cpc	r1, r20
    135e:	55 1f       	adc	r21, r21
    1360:	f2 cf       	rjmp	.-28     	; 0x1346 <__fp_split3+0xe>
    1362:	46 95       	lsr	r20
    1364:	f1 df       	rcall	.-30     	; 0x1348 <__fp_splitA>
    1366:	08 c0       	rjmp	.+16     	; 0x1378 <__fp_splitA+0x30>
    1368:	16 16       	cp	r1, r22
    136a:	17 06       	cpc	r1, r23
    136c:	18 06       	cpc	r1, r24
    136e:	99 1f       	adc	r25, r25
    1370:	f1 cf       	rjmp	.-30     	; 0x1354 <__fp_splitA+0xc>
    1372:	86 95       	lsr	r24
    1374:	71 05       	cpc	r23, r1
    1376:	61 05       	cpc	r22, r1
    1378:	08 94       	sec
    137a:	08 95       	ret

0000137c <__fp_zero>:
    137c:	e8 94       	clt

0000137e <__fp_szero>:
    137e:	bb 27       	eor	r27, r27
    1380:	66 27       	eor	r22, r22
    1382:	77 27       	eor	r23, r23
    1384:	cb 01       	movw	r24, r22
    1386:	97 f9       	bld	r25, 7
    1388:	08 95       	ret

0000138a <__gesf2>:
    138a:	8a df       	rcall	.-236    	; 0x12a0 <__fp_cmp>
    138c:	08 f4       	brcc	.+2      	; 0x1390 <__gesf2+0x6>
    138e:	8f ef       	ldi	r24, 0xFF	; 255
    1390:	08 95       	ret

00001392 <__mulsf3>:
    1392:	0b d0       	rcall	.+22     	; 0x13aa <__mulsf3x>
    1394:	c0 cf       	rjmp	.-128    	; 0x1316 <__fp_round>
    1396:	b1 df       	rcall	.-158    	; 0x12fa <__fp_pscA>
    1398:	28 f0       	brcs	.+10     	; 0x13a4 <__mulsf3+0x12>
    139a:	b6 df       	rcall	.-148    	; 0x1308 <__fp_pscB>
    139c:	18 f0       	brcs	.+6      	; 0x13a4 <__mulsf3+0x12>
    139e:	95 23       	and	r25, r21
    13a0:	09 f0       	breq	.+2      	; 0x13a4 <__mulsf3+0x12>
    13a2:	a2 cf       	rjmp	.-188    	; 0x12e8 <__fp_inf>
    13a4:	a7 cf       	rjmp	.-178    	; 0x12f4 <__fp_nan>
    13a6:	11 24       	eor	r1, r1
    13a8:	ea cf       	rjmp	.-44     	; 0x137e <__fp_szero>

000013aa <__mulsf3x>:
    13aa:	c6 df       	rcall	.-116    	; 0x1338 <__fp_split3>
    13ac:	a0 f3       	brcs	.-24     	; 0x1396 <__mulsf3+0x4>

000013ae <__mulsf3_pse>:
    13ae:	95 9f       	mul	r25, r21
    13b0:	d1 f3       	breq	.-12     	; 0x13a6 <__mulsf3+0x14>
    13b2:	95 0f       	add	r25, r21
    13b4:	50 e0       	ldi	r21, 0x00	; 0
    13b6:	55 1f       	adc	r21, r21
    13b8:	62 9f       	mul	r22, r18
    13ba:	f0 01       	movw	r30, r0
    13bc:	72 9f       	mul	r23, r18
    13be:	bb 27       	eor	r27, r27
    13c0:	f0 0d       	add	r31, r0
    13c2:	b1 1d       	adc	r27, r1
    13c4:	63 9f       	mul	r22, r19
    13c6:	aa 27       	eor	r26, r26
    13c8:	f0 0d       	add	r31, r0
    13ca:	b1 1d       	adc	r27, r1
    13cc:	aa 1f       	adc	r26, r26
    13ce:	64 9f       	mul	r22, r20
    13d0:	66 27       	eor	r22, r22
    13d2:	b0 0d       	add	r27, r0
    13d4:	a1 1d       	adc	r26, r1
    13d6:	66 1f       	adc	r22, r22
    13d8:	82 9f       	mul	r24, r18
    13da:	22 27       	eor	r18, r18
    13dc:	b0 0d       	add	r27, r0
    13de:	a1 1d       	adc	r26, r1
    13e0:	62 1f       	adc	r22, r18
    13e2:	73 9f       	mul	r23, r19
    13e4:	b0 0d       	add	r27, r0
    13e6:	a1 1d       	adc	r26, r1
    13e8:	62 1f       	adc	r22, r18
    13ea:	83 9f       	mul	r24, r19
    13ec:	a0 0d       	add	r26, r0
    13ee:	61 1d       	adc	r22, r1
    13f0:	22 1f       	adc	r18, r18
    13f2:	74 9f       	mul	r23, r20
    13f4:	33 27       	eor	r19, r19
    13f6:	a0 0d       	add	r26, r0
    13f8:	61 1d       	adc	r22, r1
    13fa:	23 1f       	adc	r18, r19
    13fc:	84 9f       	mul	r24, r20
    13fe:	60 0d       	add	r22, r0
    1400:	21 1d       	adc	r18, r1
    1402:	82 2f       	mov	r24, r18
    1404:	76 2f       	mov	r23, r22
    1406:	6a 2f       	mov	r22, r26
    1408:	11 24       	eor	r1, r1
    140a:	9f 57       	subi	r25, 0x7F	; 127
    140c:	50 40       	sbci	r21, 0x00	; 0
    140e:	8a f0       	brmi	.+34     	; 0x1432 <__mulsf3_pse+0x84>
    1410:	e1 f0       	breq	.+56     	; 0x144a <__mulsf3_pse+0x9c>
    1412:	88 23       	and	r24, r24
    1414:	4a f0       	brmi	.+18     	; 0x1428 <__mulsf3_pse+0x7a>
    1416:	ee 0f       	add	r30, r30
    1418:	ff 1f       	adc	r31, r31
    141a:	bb 1f       	adc	r27, r27
    141c:	66 1f       	adc	r22, r22
    141e:	77 1f       	adc	r23, r23
    1420:	88 1f       	adc	r24, r24
    1422:	91 50       	subi	r25, 0x01	; 1
    1424:	50 40       	sbci	r21, 0x00	; 0
    1426:	a9 f7       	brne	.-22     	; 0x1412 <__mulsf3_pse+0x64>
    1428:	9e 3f       	cpi	r25, 0xFE	; 254
    142a:	51 05       	cpc	r21, r1
    142c:	70 f0       	brcs	.+28     	; 0x144a <__mulsf3_pse+0x9c>
    142e:	5c cf       	rjmp	.-328    	; 0x12e8 <__fp_inf>
    1430:	a6 cf       	rjmp	.-180    	; 0x137e <__fp_szero>
    1432:	5f 3f       	cpi	r21, 0xFF	; 255
    1434:	ec f3       	brlt	.-6      	; 0x1430 <__mulsf3_pse+0x82>
    1436:	98 3e       	cpi	r25, 0xE8	; 232
    1438:	dc f3       	brlt	.-10     	; 0x1430 <__mulsf3_pse+0x82>
    143a:	86 95       	lsr	r24
    143c:	77 95       	ror	r23
    143e:	67 95       	ror	r22
    1440:	b7 95       	ror	r27
    1442:	f7 95       	ror	r31
    1444:	e7 95       	ror	r30
    1446:	9f 5f       	subi	r25, 0xFF	; 255
    1448:	c1 f7       	brne	.-16     	; 0x143a <__mulsf3_pse+0x8c>
    144a:	fe 2b       	or	r31, r30
    144c:	88 0f       	add	r24, r24
    144e:	91 1d       	adc	r25, r1
    1450:	96 95       	lsr	r25
    1452:	87 95       	ror	r24
    1454:	97 f9       	bld	r25, 7
    1456:	08 95       	ret

00001458 <__prologue_saves__>:
    1458:	2f 92       	push	r2
    145a:	3f 92       	push	r3
    145c:	4f 92       	push	r4
    145e:	5f 92       	push	r5
    1460:	6f 92       	push	r6
    1462:	7f 92       	push	r7
    1464:	8f 92       	push	r8
    1466:	9f 92       	push	r9
    1468:	af 92       	push	r10
    146a:	bf 92       	push	r11
    146c:	cf 92       	push	r12
    146e:	df 92       	push	r13
    1470:	ef 92       	push	r14
    1472:	ff 92       	push	r15
    1474:	0f 93       	push	r16
    1476:	1f 93       	push	r17
    1478:	cf 93       	push	r28
    147a:	df 93       	push	r29
    147c:	cd b7       	in	r28, 0x3d	; 61
    147e:	de b7       	in	r29, 0x3e	; 62
    1480:	ca 1b       	sub	r28, r26
    1482:	db 0b       	sbc	r29, r27
    1484:	0f b6       	in	r0, 0x3f	; 63
    1486:	f8 94       	cli
    1488:	de bf       	out	0x3e, r29	; 62
    148a:	0f be       	out	0x3f, r0	; 63
    148c:	cd bf       	out	0x3d, r28	; 61
    148e:	09 94       	ijmp

00001490 <__epilogue_restores__>:
    1490:	2a 88       	ldd	r2, Y+18	; 0x12
    1492:	39 88       	ldd	r3, Y+17	; 0x11
    1494:	48 88       	ldd	r4, Y+16	; 0x10
    1496:	5f 84       	ldd	r5, Y+15	; 0x0f
    1498:	6e 84       	ldd	r6, Y+14	; 0x0e
    149a:	7d 84       	ldd	r7, Y+13	; 0x0d
    149c:	8c 84       	ldd	r8, Y+12	; 0x0c
    149e:	9b 84       	ldd	r9, Y+11	; 0x0b
    14a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    14a2:	b9 84       	ldd	r11, Y+9	; 0x09
    14a4:	c8 84       	ldd	r12, Y+8	; 0x08
    14a6:	df 80       	ldd	r13, Y+7	; 0x07
    14a8:	ee 80       	ldd	r14, Y+6	; 0x06
    14aa:	fd 80       	ldd	r15, Y+5	; 0x05
    14ac:	0c 81       	ldd	r16, Y+4	; 0x04
    14ae:	1b 81       	ldd	r17, Y+3	; 0x03
    14b0:	aa 81       	ldd	r26, Y+2	; 0x02
    14b2:	b9 81       	ldd	r27, Y+1	; 0x01
    14b4:	ce 0f       	add	r28, r30
    14b6:	d1 1d       	adc	r29, r1
    14b8:	0f b6       	in	r0, 0x3f	; 63
    14ba:	f8 94       	cli
    14bc:	de bf       	out	0x3e, r29	; 62
    14be:	0f be       	out	0x3f, r0	; 63
    14c0:	cd bf       	out	0x3d, r28	; 61
    14c2:	ed 01       	movw	r28, r26
    14c4:	08 95       	ret

000014c6 <__ftoa_engine>:
    14c6:	28 30       	cpi	r18, 0x08	; 8
    14c8:	08 f0       	brcs	.+2      	; 0x14cc <__ftoa_engine+0x6>
    14ca:	27 e0       	ldi	r18, 0x07	; 7
    14cc:	33 27       	eor	r19, r19
    14ce:	da 01       	movw	r26, r20
    14d0:	99 0f       	add	r25, r25
    14d2:	31 1d       	adc	r19, r1
    14d4:	87 fd       	sbrc	r24, 7
    14d6:	91 60       	ori	r25, 0x01	; 1
    14d8:	00 96       	adiw	r24, 0x00	; 0
    14da:	61 05       	cpc	r22, r1
    14dc:	71 05       	cpc	r23, r1
    14de:	39 f4       	brne	.+14     	; 0x14ee <__ftoa_engine+0x28>
    14e0:	32 60       	ori	r19, 0x02	; 2
    14e2:	2e 5f       	subi	r18, 0xFE	; 254
    14e4:	3d 93       	st	X+, r19
    14e6:	30 e3       	ldi	r19, 0x30	; 48
    14e8:	2a 95       	dec	r18
    14ea:	e1 f7       	brne	.-8      	; 0x14e4 <__ftoa_engine+0x1e>
    14ec:	08 95       	ret
    14ee:	9f 3f       	cpi	r25, 0xFF	; 255
    14f0:	30 f0       	brcs	.+12     	; 0x14fe <__ftoa_engine+0x38>
    14f2:	80 38       	cpi	r24, 0x80	; 128
    14f4:	71 05       	cpc	r23, r1
    14f6:	61 05       	cpc	r22, r1
    14f8:	09 f0       	breq	.+2      	; 0x14fc <__ftoa_engine+0x36>
    14fa:	3c 5f       	subi	r19, 0xFC	; 252
    14fc:	3c 5f       	subi	r19, 0xFC	; 252
    14fe:	3d 93       	st	X+, r19
    1500:	91 30       	cpi	r25, 0x01	; 1
    1502:	08 f0       	brcs	.+2      	; 0x1506 <__ftoa_engine+0x40>
    1504:	80 68       	ori	r24, 0x80	; 128
    1506:	91 1d       	adc	r25, r1
    1508:	df 93       	push	r29
    150a:	cf 93       	push	r28
    150c:	1f 93       	push	r17
    150e:	0f 93       	push	r16
    1510:	ff 92       	push	r15
    1512:	ef 92       	push	r14
    1514:	19 2f       	mov	r17, r25
    1516:	98 7f       	andi	r25, 0xF8	; 248
    1518:	96 95       	lsr	r25
    151a:	e9 2f       	mov	r30, r25
    151c:	96 95       	lsr	r25
    151e:	96 95       	lsr	r25
    1520:	e9 0f       	add	r30, r25
    1522:	ff 27       	eor	r31, r31
    1524:	ea 54       	subi	r30, 0x4A	; 74
    1526:	ff 4f       	sbci	r31, 0xFF	; 255
    1528:	99 27       	eor	r25, r25
    152a:	33 27       	eor	r19, r19
    152c:	ee 24       	eor	r14, r14
    152e:	ff 24       	eor	r15, r15
    1530:	a7 01       	movw	r20, r14
    1532:	e7 01       	movw	r28, r14
    1534:	05 90       	lpm	r0, Z+
    1536:	08 94       	sec
    1538:	07 94       	ror	r0
    153a:	28 f4       	brcc	.+10     	; 0x1546 <__ftoa_engine+0x80>
    153c:	36 0f       	add	r19, r22
    153e:	e7 1e       	adc	r14, r23
    1540:	f8 1e       	adc	r15, r24
    1542:	49 1f       	adc	r20, r25
    1544:	51 1d       	adc	r21, r1
    1546:	66 0f       	add	r22, r22
    1548:	77 1f       	adc	r23, r23
    154a:	88 1f       	adc	r24, r24
    154c:	99 1f       	adc	r25, r25
    154e:	06 94       	lsr	r0
    1550:	a1 f7       	brne	.-24     	; 0x153a <__ftoa_engine+0x74>
    1552:	05 90       	lpm	r0, Z+
    1554:	07 94       	ror	r0
    1556:	28 f4       	brcc	.+10     	; 0x1562 <__ftoa_engine+0x9c>
    1558:	e7 0e       	add	r14, r23
    155a:	f8 1e       	adc	r15, r24
    155c:	49 1f       	adc	r20, r25
    155e:	56 1f       	adc	r21, r22
    1560:	c1 1d       	adc	r28, r1
    1562:	77 0f       	add	r23, r23
    1564:	88 1f       	adc	r24, r24
    1566:	99 1f       	adc	r25, r25
    1568:	66 1f       	adc	r22, r22
    156a:	06 94       	lsr	r0
    156c:	a1 f7       	brne	.-24     	; 0x1556 <__ftoa_engine+0x90>
    156e:	05 90       	lpm	r0, Z+
    1570:	07 94       	ror	r0
    1572:	28 f4       	brcc	.+10     	; 0x157e <__ftoa_engine+0xb8>
    1574:	f8 0e       	add	r15, r24
    1576:	49 1f       	adc	r20, r25
    1578:	56 1f       	adc	r21, r22
    157a:	c7 1f       	adc	r28, r23
    157c:	d1 1d       	adc	r29, r1
    157e:	88 0f       	add	r24, r24
    1580:	99 1f       	adc	r25, r25
    1582:	66 1f       	adc	r22, r22
    1584:	77 1f       	adc	r23, r23
    1586:	06 94       	lsr	r0
    1588:	a1 f7       	brne	.-24     	; 0x1572 <__ftoa_engine+0xac>
    158a:	05 90       	lpm	r0, Z+
    158c:	07 94       	ror	r0
    158e:	20 f4       	brcc	.+8      	; 0x1598 <__ftoa_engine+0xd2>
    1590:	49 0f       	add	r20, r25
    1592:	56 1f       	adc	r21, r22
    1594:	c7 1f       	adc	r28, r23
    1596:	d8 1f       	adc	r29, r24
    1598:	99 0f       	add	r25, r25
    159a:	66 1f       	adc	r22, r22
    159c:	77 1f       	adc	r23, r23
    159e:	88 1f       	adc	r24, r24
    15a0:	06 94       	lsr	r0
    15a2:	a9 f7       	brne	.-22     	; 0x158e <__ftoa_engine+0xc8>
    15a4:	84 91       	lpm	r24, Z
    15a6:	10 95       	com	r17
    15a8:	17 70       	andi	r17, 0x07	; 7
    15aa:	41 f0       	breq	.+16     	; 0x15bc <__ftoa_engine+0xf6>
    15ac:	d6 95       	lsr	r29
    15ae:	c7 95       	ror	r28
    15b0:	57 95       	ror	r21
    15b2:	47 95       	ror	r20
    15b4:	f7 94       	ror	r15
    15b6:	e7 94       	ror	r14
    15b8:	1a 95       	dec	r17
    15ba:	c1 f7       	brne	.-16     	; 0x15ac <__ftoa_engine+0xe6>
    15bc:	ec e5       	ldi	r30, 0x5C	; 92
    15be:	f0 e0       	ldi	r31, 0x00	; 0
    15c0:	68 94       	set
    15c2:	15 90       	lpm	r1, Z+
    15c4:	15 91       	lpm	r17, Z+
    15c6:	35 91       	lpm	r19, Z+
    15c8:	65 91       	lpm	r22, Z+
    15ca:	95 91       	lpm	r25, Z+
    15cc:	05 90       	lpm	r0, Z+
    15ce:	7f e2       	ldi	r23, 0x2F	; 47
    15d0:	73 95       	inc	r23
    15d2:	e1 18       	sub	r14, r1
    15d4:	f1 0a       	sbc	r15, r17
    15d6:	43 0b       	sbc	r20, r19
    15d8:	56 0b       	sbc	r21, r22
    15da:	c9 0b       	sbc	r28, r25
    15dc:	d0 09       	sbc	r29, r0
    15de:	c0 f7       	brcc	.-16     	; 0x15d0 <__ftoa_engine+0x10a>
    15e0:	e1 0c       	add	r14, r1
    15e2:	f1 1e       	adc	r15, r17
    15e4:	43 1f       	adc	r20, r19
    15e6:	56 1f       	adc	r21, r22
    15e8:	c9 1f       	adc	r28, r25
    15ea:	d0 1d       	adc	r29, r0
    15ec:	7e f4       	brtc	.+30     	; 0x160c <__ftoa_engine+0x146>
    15ee:	70 33       	cpi	r23, 0x30	; 48
    15f0:	11 f4       	brne	.+4      	; 0x15f6 <__ftoa_engine+0x130>
    15f2:	8a 95       	dec	r24
    15f4:	e6 cf       	rjmp	.-52     	; 0x15c2 <__ftoa_engine+0xfc>
    15f6:	e8 94       	clt
    15f8:	01 50       	subi	r16, 0x01	; 1
    15fa:	30 f0       	brcs	.+12     	; 0x1608 <__ftoa_engine+0x142>
    15fc:	08 0f       	add	r16, r24
    15fe:	0a f4       	brpl	.+2      	; 0x1602 <__ftoa_engine+0x13c>
    1600:	00 27       	eor	r16, r16
    1602:	02 17       	cp	r16, r18
    1604:	08 f4       	brcc	.+2      	; 0x1608 <__ftoa_engine+0x142>
    1606:	20 2f       	mov	r18, r16
    1608:	23 95       	inc	r18
    160a:	02 2f       	mov	r16, r18
    160c:	7a 33       	cpi	r23, 0x3A	; 58
    160e:	28 f0       	brcs	.+10     	; 0x161a <__ftoa_engine+0x154>
    1610:	79 e3       	ldi	r23, 0x39	; 57
    1612:	7d 93       	st	X+, r23
    1614:	2a 95       	dec	r18
    1616:	e9 f7       	brne	.-6      	; 0x1612 <__ftoa_engine+0x14c>
    1618:	10 c0       	rjmp	.+32     	; 0x163a <__ftoa_engine+0x174>
    161a:	7d 93       	st	X+, r23
    161c:	2a 95       	dec	r18
    161e:	89 f6       	brne	.-94     	; 0x15c2 <__ftoa_engine+0xfc>
    1620:	06 94       	lsr	r0
    1622:	97 95       	ror	r25
    1624:	67 95       	ror	r22
    1626:	37 95       	ror	r19
    1628:	17 95       	ror	r17
    162a:	17 94       	ror	r1
    162c:	e1 18       	sub	r14, r1
    162e:	f1 0a       	sbc	r15, r17
    1630:	43 0b       	sbc	r20, r19
    1632:	56 0b       	sbc	r21, r22
    1634:	c9 0b       	sbc	r28, r25
    1636:	d0 09       	sbc	r29, r0
    1638:	98 f0       	brcs	.+38     	; 0x1660 <__ftoa_engine+0x19a>
    163a:	23 95       	inc	r18
    163c:	7e 91       	ld	r23, -X
    163e:	73 95       	inc	r23
    1640:	7a 33       	cpi	r23, 0x3A	; 58
    1642:	08 f0       	brcs	.+2      	; 0x1646 <__ftoa_engine+0x180>
    1644:	70 e3       	ldi	r23, 0x30	; 48
    1646:	7c 93       	st	X, r23
    1648:	20 13       	cpse	r18, r16
    164a:	b8 f7       	brcc	.-18     	; 0x163a <__ftoa_engine+0x174>
    164c:	7e 91       	ld	r23, -X
    164e:	70 61       	ori	r23, 0x10	; 16
    1650:	7d 93       	st	X+, r23
    1652:	30 f0       	brcs	.+12     	; 0x1660 <__ftoa_engine+0x19a>
    1654:	83 95       	inc	r24
    1656:	71 e3       	ldi	r23, 0x31	; 49
    1658:	7d 93       	st	X+, r23
    165a:	70 e3       	ldi	r23, 0x30	; 48
    165c:	2a 95       	dec	r18
    165e:	e1 f7       	brne	.-8      	; 0x1658 <__ftoa_engine+0x192>
    1660:	11 24       	eor	r1, r1
    1662:	ef 90       	pop	r14
    1664:	ff 90       	pop	r15
    1666:	0f 91       	pop	r16
    1668:	1f 91       	pop	r17
    166a:	cf 91       	pop	r28
    166c:	df 91       	pop	r29
    166e:	99 27       	eor	r25, r25
    1670:	87 fd       	sbrc	r24, 7
    1672:	90 95       	com	r25
    1674:	08 95       	ret

00001676 <strnlen_P>:
    1676:	fc 01       	movw	r30, r24
    1678:	05 90       	lpm	r0, Z+
    167a:	61 50       	subi	r22, 0x01	; 1
    167c:	70 40       	sbci	r23, 0x00	; 0
    167e:	01 10       	cpse	r0, r1
    1680:	d8 f7       	brcc	.-10     	; 0x1678 <strnlen_P+0x2>
    1682:	80 95       	com	r24
    1684:	90 95       	com	r25
    1686:	8e 0f       	add	r24, r30
    1688:	9f 1f       	adc	r25, r31
    168a:	08 95       	ret

0000168c <strnlen>:
    168c:	fc 01       	movw	r30, r24
    168e:	61 50       	subi	r22, 0x01	; 1
    1690:	70 40       	sbci	r23, 0x00	; 0
    1692:	01 90       	ld	r0, Z+
    1694:	01 10       	cpse	r0, r1
    1696:	d8 f7       	brcc	.-10     	; 0x168e <strnlen+0x2>
    1698:	80 95       	com	r24
    169a:	90 95       	com	r25
    169c:	8e 0f       	add	r24, r30
    169e:	9f 1f       	adc	r25, r31
    16a0:	08 95       	ret

000016a2 <fputc>:
    16a2:	0f 93       	push	r16
    16a4:	1f 93       	push	r17
    16a6:	cf 93       	push	r28
    16a8:	df 93       	push	r29
    16aa:	fb 01       	movw	r30, r22
    16ac:	23 81       	ldd	r18, Z+3	; 0x03
    16ae:	21 fd       	sbrc	r18, 1
    16b0:	03 c0       	rjmp	.+6      	; 0x16b8 <fputc+0x16>
    16b2:	8f ef       	ldi	r24, 0xFF	; 255
    16b4:	9f ef       	ldi	r25, 0xFF	; 255
    16b6:	2c c0       	rjmp	.+88     	; 0x1710 <fputc+0x6e>
    16b8:	22 ff       	sbrs	r18, 2
    16ba:	16 c0       	rjmp	.+44     	; 0x16e8 <fputc+0x46>
    16bc:	46 81       	ldd	r20, Z+6	; 0x06
    16be:	57 81       	ldd	r21, Z+7	; 0x07
    16c0:	24 81       	ldd	r18, Z+4	; 0x04
    16c2:	35 81       	ldd	r19, Z+5	; 0x05
    16c4:	42 17       	cp	r20, r18
    16c6:	53 07       	cpc	r21, r19
    16c8:	44 f4       	brge	.+16     	; 0x16da <fputc+0x38>
    16ca:	a0 81       	ld	r26, Z
    16cc:	b1 81       	ldd	r27, Z+1	; 0x01
    16ce:	9d 01       	movw	r18, r26
    16d0:	2f 5f       	subi	r18, 0xFF	; 255
    16d2:	3f 4f       	sbci	r19, 0xFF	; 255
    16d4:	31 83       	std	Z+1, r19	; 0x01
    16d6:	20 83       	st	Z, r18
    16d8:	8c 93       	st	X, r24
    16da:	26 81       	ldd	r18, Z+6	; 0x06
    16dc:	37 81       	ldd	r19, Z+7	; 0x07
    16de:	2f 5f       	subi	r18, 0xFF	; 255
    16e0:	3f 4f       	sbci	r19, 0xFF	; 255
    16e2:	37 83       	std	Z+7, r19	; 0x07
    16e4:	26 83       	std	Z+6, r18	; 0x06
    16e6:	14 c0       	rjmp	.+40     	; 0x1710 <fputc+0x6e>
    16e8:	8b 01       	movw	r16, r22
    16ea:	ec 01       	movw	r28, r24
    16ec:	fb 01       	movw	r30, r22
    16ee:	00 84       	ldd	r0, Z+8	; 0x08
    16f0:	f1 85       	ldd	r31, Z+9	; 0x09
    16f2:	e0 2d       	mov	r30, r0
    16f4:	09 95       	icall
    16f6:	89 2b       	or	r24, r25
    16f8:	e1 f6       	brne	.-72     	; 0x16b2 <fputc+0x10>
    16fa:	d8 01       	movw	r26, r16
    16fc:	16 96       	adiw	r26, 0x06	; 6
    16fe:	8d 91       	ld	r24, X+
    1700:	9c 91       	ld	r25, X
    1702:	17 97       	sbiw	r26, 0x07	; 7
    1704:	01 96       	adiw	r24, 0x01	; 1
    1706:	17 96       	adiw	r26, 0x07	; 7
    1708:	9c 93       	st	X, r25
    170a:	8e 93       	st	-X, r24
    170c:	16 97       	sbiw	r26, 0x06	; 6
    170e:	ce 01       	movw	r24, r28
    1710:	df 91       	pop	r29
    1712:	cf 91       	pop	r28
    1714:	1f 91       	pop	r17
    1716:	0f 91       	pop	r16
    1718:	08 95       	ret

0000171a <vsprintf>:
    171a:	ae e0       	ldi	r26, 0x0E	; 14
    171c:	b0 e0       	ldi	r27, 0x00	; 0
    171e:	e2 e9       	ldi	r30, 0x92	; 146
    1720:	fb e0       	ldi	r31, 0x0B	; 11
    1722:	a8 ce       	rjmp	.-688    	; 0x1474 <__prologue_saves__+0x1c>
    1724:	8c 01       	movw	r16, r24
    1726:	86 e0       	ldi	r24, 0x06	; 6
    1728:	8c 83       	std	Y+4, r24	; 0x04
    172a:	1a 83       	std	Y+2, r17	; 0x02
    172c:	09 83       	std	Y+1, r16	; 0x01
    172e:	8f ef       	ldi	r24, 0xFF	; 255
    1730:	9f e7       	ldi	r25, 0x7F	; 127
    1732:	9e 83       	std	Y+6, r25	; 0x06
    1734:	8d 83       	std	Y+5, r24	; 0x05
    1736:	ce 01       	movw	r24, r28
    1738:	01 96       	adiw	r24, 0x01	; 1
    173a:	15 d9       	rcall	.-3542   	; 0x966 <vfprintf>
    173c:	ef 81       	ldd	r30, Y+7	; 0x07
    173e:	f8 85       	ldd	r31, Y+8	; 0x08
    1740:	e0 0f       	add	r30, r16
    1742:	f1 1f       	adc	r31, r17
    1744:	10 82       	st	Z, r1
    1746:	2e 96       	adiw	r28, 0x0e	; 14
    1748:	e4 e0       	ldi	r30, 0x04	; 4
    174a:	b0 ce       	rjmp	.-672    	; 0x14ac <__epilogue_restores__+0x1c>

0000174c <__ultoa_invert>:
    174c:	fa 01       	movw	r30, r20
    174e:	aa 27       	eor	r26, r26
    1750:	28 30       	cpi	r18, 0x08	; 8
    1752:	51 f1       	breq	.+84     	; 0x17a8 <__ultoa_invert+0x5c>
    1754:	20 31       	cpi	r18, 0x10	; 16
    1756:	81 f1       	breq	.+96     	; 0x17b8 <__ultoa_invert+0x6c>
    1758:	e8 94       	clt
    175a:	6f 93       	push	r22
    175c:	6e 7f       	andi	r22, 0xFE	; 254
    175e:	6e 5f       	subi	r22, 0xFE	; 254
    1760:	7f 4f       	sbci	r23, 0xFF	; 255
    1762:	8f 4f       	sbci	r24, 0xFF	; 255
    1764:	9f 4f       	sbci	r25, 0xFF	; 255
    1766:	af 4f       	sbci	r26, 0xFF	; 255
    1768:	b1 e0       	ldi	r27, 0x01	; 1
    176a:	3e d0       	rcall	.+124    	; 0x17e8 <__ultoa_invert+0x9c>
    176c:	b4 e0       	ldi	r27, 0x04	; 4
    176e:	3c d0       	rcall	.+120    	; 0x17e8 <__ultoa_invert+0x9c>
    1770:	67 0f       	add	r22, r23
    1772:	78 1f       	adc	r23, r24
    1774:	89 1f       	adc	r24, r25
    1776:	9a 1f       	adc	r25, r26
    1778:	a1 1d       	adc	r26, r1
    177a:	68 0f       	add	r22, r24
    177c:	79 1f       	adc	r23, r25
    177e:	8a 1f       	adc	r24, r26
    1780:	91 1d       	adc	r25, r1
    1782:	a1 1d       	adc	r26, r1
    1784:	6a 0f       	add	r22, r26
    1786:	71 1d       	adc	r23, r1
    1788:	81 1d       	adc	r24, r1
    178a:	91 1d       	adc	r25, r1
    178c:	a1 1d       	adc	r26, r1
    178e:	20 d0       	rcall	.+64     	; 0x17d0 <__ultoa_invert+0x84>
    1790:	09 f4       	brne	.+2      	; 0x1794 <__ultoa_invert+0x48>
    1792:	68 94       	set
    1794:	3f 91       	pop	r19
    1796:	2a e0       	ldi	r18, 0x0A	; 10
    1798:	26 9f       	mul	r18, r22
    179a:	11 24       	eor	r1, r1
    179c:	30 19       	sub	r19, r0
    179e:	30 5d       	subi	r19, 0xD0	; 208
    17a0:	31 93       	st	Z+, r19
    17a2:	de f6       	brtc	.-74     	; 0x175a <__ultoa_invert+0xe>
    17a4:	cf 01       	movw	r24, r30
    17a6:	08 95       	ret
    17a8:	46 2f       	mov	r20, r22
    17aa:	47 70       	andi	r20, 0x07	; 7
    17ac:	40 5d       	subi	r20, 0xD0	; 208
    17ae:	41 93       	st	Z+, r20
    17b0:	b3 e0       	ldi	r27, 0x03	; 3
    17b2:	0f d0       	rcall	.+30     	; 0x17d2 <__ultoa_invert+0x86>
    17b4:	c9 f7       	brne	.-14     	; 0x17a8 <__ultoa_invert+0x5c>
    17b6:	f6 cf       	rjmp	.-20     	; 0x17a4 <__ultoa_invert+0x58>
    17b8:	46 2f       	mov	r20, r22
    17ba:	4f 70       	andi	r20, 0x0F	; 15
    17bc:	40 5d       	subi	r20, 0xD0	; 208
    17be:	4a 33       	cpi	r20, 0x3A	; 58
    17c0:	18 f0       	brcs	.+6      	; 0x17c8 <__ultoa_invert+0x7c>
    17c2:	49 5d       	subi	r20, 0xD9	; 217
    17c4:	31 fd       	sbrc	r19, 1
    17c6:	40 52       	subi	r20, 0x20	; 32
    17c8:	41 93       	st	Z+, r20
    17ca:	02 d0       	rcall	.+4      	; 0x17d0 <__ultoa_invert+0x84>
    17cc:	a9 f7       	brne	.-22     	; 0x17b8 <__ultoa_invert+0x6c>
    17ce:	ea cf       	rjmp	.-44     	; 0x17a4 <__ultoa_invert+0x58>
    17d0:	b4 e0       	ldi	r27, 0x04	; 4
    17d2:	a6 95       	lsr	r26
    17d4:	97 95       	ror	r25
    17d6:	87 95       	ror	r24
    17d8:	77 95       	ror	r23
    17da:	67 95       	ror	r22
    17dc:	ba 95       	dec	r27
    17de:	c9 f7       	brne	.-14     	; 0x17d2 <__ultoa_invert+0x86>
    17e0:	00 97       	sbiw	r24, 0x00	; 0
    17e2:	61 05       	cpc	r22, r1
    17e4:	71 05       	cpc	r23, r1
    17e6:	08 95       	ret
    17e8:	9b 01       	movw	r18, r22
    17ea:	ac 01       	movw	r20, r24
    17ec:	0a 2e       	mov	r0, r26
    17ee:	06 94       	lsr	r0
    17f0:	57 95       	ror	r21
    17f2:	47 95       	ror	r20
    17f4:	37 95       	ror	r19
    17f6:	27 95       	ror	r18
    17f8:	ba 95       	dec	r27
    17fa:	c9 f7       	brne	.-14     	; 0x17ee <__ultoa_invert+0xa2>
    17fc:	62 0f       	add	r22, r18
    17fe:	73 1f       	adc	r23, r19
    1800:	84 1f       	adc	r24, r20
    1802:	95 1f       	adc	r25, r21
    1804:	a0 1d       	adc	r26, r0
    1806:	08 95       	ret

00001808 <_exit>:
    1808:	f8 94       	cli

0000180a <__stop_program>:
    180a:	ff cf       	rjmp	.-2      	; 0x180a <__stop_program>
