
ppurs kod.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001268  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  00001268  000012fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080007c  0080007c  00001318  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001318  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001374  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000128  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012ea  00000000  00000000  000014d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a5  00000000  00000000  000027c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001208  00000000  00000000  00003167  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002e4  00000000  00000000  00004370  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00008cc1  00000000  00000000  00004654  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ad6  00000000  00000000  0000d315  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  0000ddeb  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  00002aba  00000000  00000000  0000ded3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	aa c0       	rjmp	.+340    	; 0x156 <__ctors_end>
       2:	00 00       	nop
       4:	c4 c0       	rjmp	.+392    	; 0x18e <__bad_interrupt>
       6:	00 00       	nop
       8:	cf c0       	rjmp	.+414    	; 0x1a8 <__vector_2>
       a:	00 00       	nop
       c:	d9 c0       	rjmp	.+434    	; 0x1c0 <__vector_3>
       e:	00 00       	nop
      10:	be c0       	rjmp	.+380    	; 0x18e <__bad_interrupt>
      12:	00 00       	nop
      14:	bc c0       	rjmp	.+376    	; 0x18e <__bad_interrupt>
      16:	00 00       	nop
      18:	ba c0       	rjmp	.+372    	; 0x18e <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b8 c0       	rjmp	.+368    	; 0x18e <__bad_interrupt>
      1e:	00 00       	nop
      20:	b6 c0       	rjmp	.+364    	; 0x18e <__bad_interrupt>
      22:	00 00       	nop
      24:	e1 c0       	rjmp	.+450    	; 0x1e8 <__vector_9>
      26:	00 00       	nop
      28:	b2 c0       	rjmp	.+356    	; 0x18e <__bad_interrupt>
      2a:	00 00       	nop
      2c:	b0 c0       	rjmp	.+352    	; 0x18e <__bad_interrupt>
      2e:	00 00       	nop
      30:	ae c0       	rjmp	.+348    	; 0x18e <__bad_interrupt>
      32:	00 00       	nop
      34:	ac c0       	rjmp	.+344    	; 0x18e <__bad_interrupt>
      36:	00 00       	nop
      38:	aa c0       	rjmp	.+340    	; 0x18e <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a8 c0       	rjmp	.+336    	; 0x18e <__bad_interrupt>
      3e:	00 00       	nop
      40:	a6 c0       	rjmp	.+332    	; 0x18e <__bad_interrupt>
      42:	00 00       	nop
      44:	a4 c0       	rjmp	.+328    	; 0x18e <__bad_interrupt>
      46:	00 00       	nop
      48:	a2 c0       	rjmp	.+324    	; 0x18e <__bad_interrupt>
      4a:	00 00       	nop
      4c:	a0 c0       	rjmp	.+320    	; 0x18e <__bad_interrupt>
      4e:	00 00       	nop
      50:	9e c0       	rjmp	.+316    	; 0x18e <__bad_interrupt>
	...

00000054 <__trampolines_end>:
      54:	6e 61       	ori	r22, 0x1E	; 30
      56:	6e 00       	.word	0x006e	; ????

00000058 <__c.2332>:
      58:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      68:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      78:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      88:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      98:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      a8:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      b8:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      c8:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      d8:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      e8:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
      f8:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     108:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     118:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     128:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     138:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     148:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

00000156 <__ctors_end>:
     156:	11 24       	eor	r1, r1
     158:	1f be       	out	0x3f, r1	; 63
     15a:	cf e5       	ldi	r28, 0x5F	; 95
     15c:	d8 e0       	ldi	r29, 0x08	; 8
     15e:	de bf       	out	0x3e, r29	; 62
     160:	cd bf       	out	0x3d, r28	; 61

00000162 <__do_copy_data>:
     162:	10 e0       	ldi	r17, 0x00	; 0
     164:	a0 e6       	ldi	r26, 0x60	; 96
     166:	b0 e0       	ldi	r27, 0x00	; 0
     168:	e8 e6       	ldi	r30, 0x68	; 104
     16a:	f2 e1       	ldi	r31, 0x12	; 18
     16c:	02 c0       	rjmp	.+4      	; 0x172 <__do_copy_data+0x10>
     16e:	05 90       	lpm	r0, Z+
     170:	0d 92       	st	X+, r0
     172:	ac 37       	cpi	r26, 0x7C	; 124
     174:	b1 07       	cpc	r27, r17
     176:	d9 f7       	brne	.-10     	; 0x16e <__do_copy_data+0xc>

00000178 <__do_clear_bss>:
     178:	20 e0       	ldi	r18, 0x00	; 0
     17a:	ac e7       	ldi	r26, 0x7C	; 124
     17c:	b0 e0       	ldi	r27, 0x00	; 0
     17e:	01 c0       	rjmp	.+2      	; 0x182 <.do_clear_bss_start>

00000180 <.do_clear_bss_loop>:
     180:	1d 92       	st	X+, r1

00000182 <.do_clear_bss_start>:
     182:	a0 38       	cpi	r26, 0x80	; 128
     184:	b2 07       	cpc	r27, r18
     186:	e1 f7       	brne	.-8      	; 0x180 <.do_clear_bss_loop>
     188:	7c d0       	rcall	.+248    	; 0x282 <main>
     18a:	0c 94 32 09 	jmp	0x1264	; 0x1264 <_exit>

0000018e <__bad_interrupt>:
     18e:	38 cf       	rjmp	.-400    	; 0x0 <__vectors>

00000190 <adc_init>:

// inicijalizacija adc pretvorbe
void adc_init()
{
		// postavi referencu
		ADMUX &= ~ADC_REFERENCE_MASK;
     190:	87 b1       	in	r24, 0x07	; 7
     192:	8f 73       	andi	r24, 0x3F	; 63
     194:	87 b9       	out	0x07, r24	; 7
		ADMUX |= ADC_REFERENCE << 6;
     196:	3e 9a       	sbi	0x07, 6	; 7
		
		// postavi djelitelj frekvencije
		ADCSRA &= ~ADC_PRESCALE_MASK;
     198:	86 b1       	in	r24, 0x06	; 6
     19a:	88 7f       	andi	r24, 0xF8	; 248
     19c:	86 b9       	out	0x06, r24	; 6
		ADCSRA |=  ADC_PRESCALE;
     19e:	86 b1       	in	r24, 0x06	; 6
     1a0:	87 60       	ori	r24, 0x07	; 7
     1a2:	86 b9       	out	0x06, r24	; 6
		
		// omoguæi adc pretvorbu
		ADCSRA|=(1<<ADEN);
     1a4:	37 9a       	sbi	0x06, 7	; 6
     1a6:	08 95       	ret

000001a8 <__vector_2>:
}


//interupti rade
//tajmer ne radi
ISR(INT1_vect){ // INT1 rastuci brid
     1a8:	1f 92       	push	r1
     1aa:	0f 92       	push	r0
     1ac:	0f b6       	in	r0, 0x3f	; 63
     1ae:	0f 92       	push	r0
     1b0:	11 24       	eor	r1, r1
	TCNT1 = 0;
     1b2:	1d bc       	out	0x2d, r1	; 45
     1b4:	1c bc       	out	0x2c, r1	; 44
}
     1b6:	0f 90       	pop	r0
     1b8:	0f be       	out	0x3f, r0	; 63
     1ba:	0f 90       	pop	r0
     1bc:	1f 90       	pop	r1
     1be:	18 95       	reti

000001c0 <__vector_3>:


ISR(INT2_vect){ // INT2 padajuci brid 
     1c0:	1f 92       	push	r1
     1c2:	0f 92       	push	r0
     1c4:	0f b6       	in	r0, 0x3f	; 63
     1c6:	0f 92       	push	r0
     1c8:	11 24       	eor	r1, r1
     1ca:	8f 93       	push	r24
     1cc:	9f 93       	push	r25
	duty_duljina = TCNT1;
     1ce:	8c b5       	in	r24, 0x2c	; 44
     1d0:	9d b5       	in	r25, 0x2d	; 45
     1d2:	90 93 7f 00 	sts	0x007F, r25	; 0x80007f <duty_duljina+0x1>
     1d6:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <duty_duljina>
}
     1da:	9f 91       	pop	r25
     1dc:	8f 91       	pop	r24
     1de:	0f 90       	pop	r0
     1e0:	0f be       	out	0x3f, r0	; 63
     1e2:	0f 90       	pop	r0
     1e4:	1f 90       	pop	r1
     1e6:	18 95       	reti

000001e8 <__vector_9>:

ISR(TIMER1_OVF_vect){  //prekit timera1
     1e8:	1f 92       	push	r1
     1ea:	0f 92       	push	r0
     1ec:	0f b6       	in	r0, 0x3f	; 63
     1ee:	0f 92       	push	r0
     1f0:	11 24       	eor	r1, r1
     1f2:	2f 93       	push	r18
     1f4:	3f 93       	push	r19
     1f6:	4f 93       	push	r20
     1f8:	5f 93       	push	r21
     1fa:	6f 93       	push	r22
     1fc:	7f 93       	push	r23
     1fe:	8f 93       	push	r24
     200:	9f 93       	push	r25
     202:	af 93       	push	r26
     204:	bf 93       	push	r27
     206:	ef 93       	push	r30
     208:	ff 93       	push	r31
	
	lcd_clrscr();
     20a:	83 d1       	rcall	.+774    	; 0x512 <lcd_clrscr>
	lcd_home();
     20c:	8f d1       	rcall	.+798    	; 0x52c <lcd_home>
     20e:	80 e6       	ldi	r24, 0x60	; 96
	lcd_print("preljev timera");
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	9f 93       	push	r25
     214:	8f 93       	push	r24
     216:	4e d1       	rcall	.+668    	; 0x4b4 <lcd_print>
     218:	2f ef       	ldi	r18, 0xFF	; 255
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     21a:	89 e6       	ldi	r24, 0x69	; 105
     21c:	98 e1       	ldi	r25, 0x18	; 24
     21e:	21 50       	subi	r18, 0x01	; 1
     220:	80 40       	sbci	r24, 0x00	; 0
     222:	90 40       	sbci	r25, 0x00	; 0
     224:	e1 f7       	brne	.-8      	; 0x21e <__vector_9+0x36>
     226:	00 c0       	rjmp	.+0      	; 0x228 <__vector_9+0x40>
     228:	00 00       	nop
     22a:	0f 90       	pop	r0
	_delay_ms(1000);
}
     22c:	0f 90       	pop	r0
     22e:	ff 91       	pop	r31
     230:	ef 91       	pop	r30
     232:	bf 91       	pop	r27
     234:	af 91       	pop	r26
     236:	9f 91       	pop	r25
     238:	8f 91       	pop	r24
     23a:	7f 91       	pop	r23
     23c:	6f 91       	pop	r22
     23e:	5f 91       	pop	r21
     240:	4f 91       	pop	r20
     242:	3f 91       	pop	r19
     244:	2f 91       	pop	r18
     246:	0f 90       	pop	r0
     248:	0f be       	out	0x3f, r0	; 63
     24a:	0f 90       	pop	r0
     24c:	1f 90       	pop	r1
     24e:	18 95       	reti

00000250 <inicijalizacija>:
     250:	b4 d0       	rcall	.+360    	; 0x3ba <lcd_init>


void inicijalizacija(){
	
	lcd_init();
	adc_init();
     252:	9e df       	rcall	.-196    	; 0x190 <adc_init>
     254:	c0 9a       	sbi	0x18, 0	; 24
	
	
	set_port(PORTB ,PB0 ,1);
     256:	bc 9a       	sbi	0x17, 4	; 23
	output_port(DDRB,PB4);		//PB4 postavljen kao izlazni pin
     258:	8b 98       	cbi	0x11, 3	; 17
	input_port(DDRD,PD3);		// pin PD3 postavljen kao ulazni
     25a:	8b b7       	in	r24, 0x3b	; 59
	
	
	
	//omoguceni prekidi na INT1 i INT2
	set_bit_reg(GICR ,INT1);
     25c:	80 68       	ori	r24, 0x80	; 128
     25e:	8b bf       	out	0x3b, r24	; 59
     260:	8b b7       	in	r24, 0x3b	; 59
	set_bit_reg(GICR ,INT2); 
     262:	80 62       	ori	r24, 0x20	; 32
     264:	8b bf       	out	0x3b, r24	; 59
     266:	85 b7       	in	r24, 0x35	; 53
	
	//INT1 okida na rastuci bit
	set_bit_reg(MCUCR,ISC10); // ISC10 = 1
     268:	84 60       	ori	r24, 0x04	; 4
     26a:	85 bf       	out	0x35, r24	; 53
     26c:	85 b7       	in	r24, 0x35	; 53
	set_bit_reg(MCUCR,ISC11); // ISC11 = 1
     26e:	88 60       	ori	r24, 0x08	; 8
     270:	85 bf       	out	0x35, r24	; 53
     272:	85 b7       	in	r24, 0x35	; 53

	//INT2 okida na padajuci bit
	//specijalni slucaj konfiguracije
	reset_bit_reg(MCUCR,ISC2); // ISC2 = 0
     274:	8f 7b       	andi	r24, 0xBF	; 191
     276:	85 bf       	out	0x35, r24	; 53
	reset_bit_reg(TCCR1A ,WGM11); // WGM11 = 0
	reset_bit_reg(TCCR1B ,WGM12); // WGM12 = 0
	reset_bit_reg(TCCR1B ,WGM13); // WGM13 = 0
	*/
	
	sei();		//omogucavanje prekida
     278:	78 94       	sei
	timer1_init();
     27a:	55 d0       	rcall	.+170    	; 0x326 <timer1_init>
     27c:	1d bc       	out	0x2d, r1	; 45
	
	TCNT1=0;
     27e:	1c bc       	out	0x2c, r1	; 44
     280:	08 95       	ret

00000282 <main>:
     282:	e6 df       	rcall	.-52     	; 0x250 <inicijalizacija>
		duty_cycle = duty_duljina * 0.001;
		postotak_duty = (duty_cycle/1.002)*100;  //1.002 je sirina impulsa
		CO2 = 2000 * (postotak_duty/100);
		lcd_clrscr();
		lcd_home();
		lcd_print("%f", postotak_duty);
     284:	0f e6       	ldi	r16, 0x6F	; 111
     286:	10 e0       	ldi	r17, 0x00	; 0
		lcd_gotoxy(1,0);							//redak pa stupac
		lcd_print("%0.0f ppm", CO2);
     288:	c2 e7       	ldi	r28, 0x72	; 114
     28a:	d0 e0       	ldi	r29, 0x00	; 0
		
	while (1)
	{

		duty_cycle = duty_duljina * 0.001;
		postotak_duty = (duty_cycle/1.002)*100;  //1.002 je sirina impulsa
     28c:	60 91 7e 00 	lds	r22, 0x007E	; 0x80007e <duty_duljina>
     290:	70 91 7f 00 	lds	r23, 0x007F	; 0x80007f <duty_duljina+0x1>
     294:	80 e0       	ldi	r24, 0x00	; 0
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	1c d5       	rcall	.+2616   	; 0xcd2 <__floatunsisf>
     29a:	2f e6       	ldi	r18, 0x6F	; 111
     29c:	32 e1       	ldi	r19, 0x12	; 18
     29e:	43 e8       	ldi	r20, 0x83	; 131
     2a0:	5a e3       	ldi	r21, 0x3A	; 58
     2a2:	a5 d5       	rcall	.+2890   	; 0xdee <__mulsf3>
     2a4:	29 e8       	ldi	r18, 0x89	; 137
     2a6:	31 e4       	ldi	r19, 0x41	; 65
     2a8:	40 e8       	ldi	r20, 0x80	; 128
     2aa:	5f e3       	ldi	r21, 0x3F	; 63
     2ac:	aa d4       	rcall	.+2388   	; 0xc02 <__divsf3>
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	48 ec       	ldi	r20, 0xC8	; 200
     2b4:	52 e4       	ldi	r21, 0x42	; 66
     2b6:	9b d5       	rcall	.+2870   	; 0xdee <__mulsf3>
     2b8:	c6 2e       	mov	r12, r22
     2ba:	d7 2e       	mov	r13, r23
     2bc:	e8 2e       	mov	r14, r24
		CO2 = 2000 * (postotak_duty/100);
		lcd_clrscr();
     2be:	f9 2e       	mov	r15, r25
     2c0:	28 d1       	rcall	.+592    	; 0x512 <lcd_clrscr>
		lcd_home();
     2c2:	34 d1       	rcall	.+616    	; 0x52c <lcd_home>
		lcd_print("%f", postotak_duty);
     2c4:	ff 92       	push	r15
     2c6:	ef 92       	push	r14
     2c8:	df 92       	push	r13
     2ca:	cf 92       	push	r12
     2cc:	1f 93       	push	r17
     2ce:	0f 93       	push	r16
     2d0:	f1 d0       	rcall	.+482    	; 0x4b4 <lcd_print>
		lcd_gotoxy(1,0);							//redak pa stupac
     2d2:	60 e0       	ldi	r22, 0x00	; 0
     2d4:	81 e0       	ldi	r24, 0x01	; 1
     2d6:	10 d1       	rcall	.+544    	; 0x4f8 <lcd_gotoxy>
		lcd_print("%0.0f ppm", CO2);
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	48 ec       	ldi	r20, 0xC8	; 200
     2de:	52 e4       	ldi	r21, 0x42	; 66
     2e0:	6c 2d       	mov	r22, r12
     2e2:	7d 2d       	mov	r23, r13
     2e4:	8e 2d       	mov	r24, r14
     2e6:	9f 2d       	mov	r25, r15
     2e8:	8c d4       	rcall	.+2328   	; 0xc02 <__divsf3>
     2ea:	20 e0       	ldi	r18, 0x00	; 0
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	4a ef       	ldi	r20, 0xFA	; 250
     2f0:	54 e4       	ldi	r21, 0x44	; 68
     2f2:	7d d5       	rcall	.+2810   	; 0xdee <__mulsf3>
     2f4:	9f 93       	push	r25
     2f6:	8f 93       	push	r24
     2f8:	7f 93       	push	r23
     2fa:	6f 93       	push	r22
     2fc:	df 93       	push	r29
     2fe:	cf 93       	push	r28
     300:	d9 d0       	rcall	.+434    	; 0x4b4 <lcd_print>
     302:	9f ef       	ldi	r25, 0xFF	; 255
     304:	24 e3       	ldi	r18, 0x34	; 52
     306:	8c e0       	ldi	r24, 0x0C	; 12
     308:	91 50       	subi	r25, 0x01	; 1
     30a:	20 40       	sbci	r18, 0x00	; 0
     30c:	80 40       	sbci	r24, 0x00	; 0
     30e:	e1 f7       	brne	.-8      	; 0x308 <main+0x86>
     310:	00 c0       	rjmp	.+0      	; 0x312 <main+0x90>
     312:	00 00       	nop
     314:	8d b7       	in	r24, 0x3d	; 61
     316:	9e b7       	in	r25, 0x3e	; 62
     318:	0c 96       	adiw	r24, 0x0c	; 12
     31a:	0f b6       	in	r0, 0x3f	; 63
     31c:	f8 94       	cli
     31e:	9e bf       	out	0x3e, r25	; 62
     320:	0f be       	out	0x3f, r0	; 63
     322:	8d bf       	out	0x3d, r24	; 61
     324:	b3 cf       	rjmp	.-154    	; 0x28c <main+0xa>

00000326 <timer1_init>:
     326:	8e b5       	in	r24, 0x2e	; 46
	TIMSK |= (1 << TOIE0); // omoguæi prekid TOV0
}

void timer1_init(){
	
	TCCR1B &= ~TIMER_PRESCALER_MASK;
     328:	88 7f       	andi	r24, 0xF8	; 248
     32a:	8e bd       	out	0x2e, r24	; 46
	TCCR1B |= TIMER1_PRESCALER_8; // postavi djelitelj za timer1
     32c:	8e b5       	in	r24, 0x2e	; 46
     32e:	82 60       	ori	r24, 0x02	; 2
     330:	8e bd       	out	0x2e, r24	; 46
	
	TIMSK |= (1 << TOIE1); // omoguæi prekid TOV1
     332:	89 b7       	in	r24, 0x39	; 57
     334:	84 60       	ori	r24, 0x04	; 4
     336:	89 bf       	out	0x39, r24	; 57
     338:	08 95       	ret

0000033a <lcd_e_toggle>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     33a:	89 ef       	ldi	r24, 0xF9	; 249
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	01 97       	sbiw	r24, 0x01	; 1
     340:	f1 f7       	brne	.-4      	; 0x33e <lcd_e_toggle+0x4>
     342:	00 c0       	rjmp	.+0      	; 0x344 <lcd_e_toggle+0xa>
     344:	00 00       	nop
// FUNCTION: _auxToggleE
// PURPOSE: flush channel E
void lcd_e_toggle(void)
{
	_delay_us(1000);
    lcd_e_high();
     346:	c7 9a       	sbi	0x18, 7	; 24
     348:	89 ef       	ldi	r24, 0xF9	; 249
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	01 97       	sbiw	r24, 0x01	; 1
     34e:	f1 f7       	brne	.-4      	; 0x34c <lcd_e_toggle+0x12>
     350:	00 c0       	rjmp	.+0      	; 0x352 <lcd_e_toggle+0x18>
     352:	00 00       	nop
	_delay_us(1000);	//sensitive when changing CPU MHz!!!!!!!!!!!!!
    lcd_e_low();
     354:	c7 98       	cbi	0x18, 7	; 24
     356:	89 ef       	ldi	r24, 0xF9	; 249
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	01 97       	sbiw	r24, 0x01	; 1
     35c:	f1 f7       	brne	.-4      	; 0x35a <lcd_e_toggle+0x20>
     35e:	00 c0       	rjmp	.+0      	; 0x360 <lcd_e_toggle+0x26>
     360:	00 00       	nop
     362:	08 95       	ret

00000364 <lcd_write>:

//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_write
// PURPOSE: send a character or an instruction to the LCD
void lcd_write(uint8_t data,uint8_t rs) 
{
     364:	cf 93       	push	r28
     366:	c8 2f       	mov	r28, r24
	//check write type
    if (rs)    
     368:	66 23       	and	r22, r22
     36a:	11 f0       	breq	.+4      	; 0x370 <lcd_write+0xc>
       lcd_rs_high(); //write data
     36c:	95 9a       	sbi	0x12, 5	; 18
     36e:	01 c0       	rjmp	.+2      	; 0x372 <lcd_write+0xe>
    else     
       lcd_rs_low();  //write instruciton
     370:	95 98       	cbi	0x12, 5	; 18
        
    // output high nibble first 
	// prvo se alje gornjih 4 bita instrukcije, zatim donjih 4 bita instruukcije
	
    LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     372:	ab 98       	cbi	0x15, 3	; 21
    LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     374:	aa 98       	cbi	0x15, 2	; 21
    LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     376:	a9 98       	cbi	0x15, 1	; 21
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     378:	a8 98       	cbi	0x15, 0	; 21
	if(data & 0x80) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     37a:	cc 23       	and	r28, r28
     37c:	0c f4       	brge	.+2      	; 0x380 <lcd_write+0x1c>
     37e:	ab 9a       	sbi	0x15, 3	; 21
	if(data & 0x40) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     380:	c6 fd       	sbrc	r28, 6
     382:	aa 9a       	sbi	0x15, 2	; 21
	if(data & 0x20) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     384:	c5 fd       	sbrc	r28, 5
     386:	a9 9a       	sbi	0x15, 1	; 21
	if(data & 0x10) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);   
     388:	c4 fd       	sbrc	r28, 4
     38a:	a8 9a       	sbi	0x15, 0	; 21
    lcd_e_toggle();
     38c:	d6 df       	rcall	.-84     	; 0x33a <lcd_e_toggle>
 
    // output low nibble 
    LCD_DATA3_PORT &= ~_BV(LCD_DATA3_PIN);
     38e:	ab 98       	cbi	0x15, 3	; 21
    LCD_DATA2_PORT &= ~_BV(LCD_DATA2_PIN);
     390:	aa 98       	cbi	0x15, 2	; 21
    LCD_DATA1_PORT &= ~_BV(LCD_DATA1_PIN);
     392:	a9 98       	cbi	0x15, 1	; 21
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN);
     394:	a8 98       	cbi	0x15, 0	; 21
	if(data & 0x08) LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     396:	c3 fd       	sbrc	r28, 3
     398:	ab 9a       	sbi	0x15, 3	; 21
	if(data & 0x04) LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     39a:	c2 fd       	sbrc	r28, 2
     39c:	aa 9a       	sbi	0x15, 2	; 21
	if(data & 0x02) LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     39e:	c1 fd       	sbrc	r28, 1
     3a0:	a9 9a       	sbi	0x15, 1	; 21
	if(data & 0x01) LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     3a2:	c0 fd       	sbrc	r28, 0
    lcd_e_toggle();     
     3a4:	a8 9a       	sbi	0x15, 0	; 21
     3a6:	c9 df       	rcall	.-110    	; 0x33a <lcd_e_toggle>
  
    
    // all data pins high (inactive) 
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN);
     3a8:	a8 9a       	sbi	0x15, 0	; 21
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN);
     3aa:	a9 9a       	sbi	0x15, 1	; 21
    LCD_DATA2_PORT |= _BV(LCD_DATA2_PIN);
     3ac:	aa 9a       	sbi	0x15, 2	; 21
    LCD_DATA3_PORT |= _BV(LCD_DATA3_PIN);
     3ae:	ab 9a       	sbi	0x15, 3	; 21
}
     3b0:	cf 91       	pop	r28
     3b2:	08 95       	ret

000003b4 <lcd_instr>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_instr
// PURPOSE:  send an instruction to the LCD
void lcd_instr(uint8_t instr)
{
	lcd_write(instr,0);
     3b4:	60 e0       	ldi	r22, 0x00	; 0
     3b6:	d6 cf       	rjmp	.-84     	; 0x364 <lcd_write>
     3b8:	08 95       	ret

000003ba <lcd_init>:
// FUNCTION: lcd_init
// PURPOSE:  Initialize LCD to 4 bit I/O mode
void lcd_init()
{
    // configure all port bits as output (LCD data and control lines on different ports 
    LCD_DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     3ba:	8d 9a       	sbi	0x11, 5	; 17
    LCD_DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     3bc:	bf 9a       	sbi	0x17, 7	; 23
    LCD_DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     3be:	a0 9a       	sbi	0x14, 0	; 20
    LCD_DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     3c0:	a1 9a       	sbi	0x14, 1	; 20
    LCD_DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     3c2:	a2 9a       	sbi	0x14, 2	; 20
    LCD_DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     3c4:	a3 9a       	sbi	0x14, 3	; 20
	
	lcd_e_low();
     3c6:	c7 98       	cbi	0x18, 7	; 24
	lcd_rs_low();
     3c8:	95 98       	cbi	0x12, 5	; 18
     3ca:	8f e9       	ldi	r24, 0x9F	; 159
     3cc:	9f e0       	ldi	r25, 0x0F	; 15
     3ce:	01 97       	sbiw	r24, 0x01	; 1
     3d0:	f1 f7       	brne	.-4      	; 0x3ce <lcd_init+0x14>
     3d2:	00 c0       	rjmp	.+0      	; 0x3d4 <lcd_init+0x1a>
     3d4:	00 00       	nop
	
    // wait 16ms or more after power-on
    _delay_us(16000);
    // initial write to lcd is 8bit 
    lcd_instr(0x3);
     3d6:	83 e0       	ldi	r24, 0x03	; 3
     3d8:	ed df       	rcall	.-38     	; 0x3b4 <lcd_instr>
    lcd_e_toggle();
     3da:	af df       	rcall	.-162    	; 0x33a <lcd_e_toggle>
     3dc:	81 ee       	ldi	r24, 0xE1	; 225
     3de:	94 e0       	ldi	r25, 0x04	; 4
     3e0:	01 97       	sbiw	r24, 0x01	; 1
     3e2:	f1 f7       	brne	.-4      	; 0x3e0 <lcd_init+0x26>
     3e4:	00 c0       	rjmp	.+0      	; 0x3e6 <lcd_init+0x2c>
     3e6:	00 00       	nop
    _delay_us(5000); //4992        // delay, busy flag can't be checked here 
	
	lcd_instr(0x3);
     3e8:	83 e0       	ldi	r24, 0x03	; 3
     3ea:	e4 df       	rcall	.-56     	; 0x3b4 <lcd_instr>
	lcd_e_toggle();
     3ec:	a6 df       	rcall	.-180    	; 0x33a <lcd_e_toggle>
     3ee:	89 ef       	ldi	r24, 0xF9	; 249
     3f0:	90 e0       	ldi	r25, 0x00	; 0
     3f2:	01 97       	sbiw	r24, 0x01	; 1
     3f4:	f1 f7       	brne	.-4      	; 0x3f2 <lcd_init+0x38>
     3f6:	00 c0       	rjmp	.+0      	; 0x3f8 <lcd_init+0x3e>
	_delay_us(1000); //4992        // delay, busy flag can't be checked here
	
	lcd_instr(0x3);
     3f8:	00 00       	nop
     3fa:	83 e0       	ldi	r24, 0x03	; 3
     3fc:	db df       	rcall	.-74     	; 0x3b4 <lcd_instr>
	lcd_e_toggle();
     3fe:	9d df       	rcall	.-198    	; 0x33a <lcd_e_toggle>
     400:	81 ee       	ldi	r24, 0xE1	; 225
     402:	94 e0       	ldi	r25, 0x04	; 4
     404:	01 97       	sbiw	r24, 0x01	; 1
     406:	f1 f7       	brne	.-4      	; 0x404 <__EEPROM_REGION_LENGTH__+0x4>
     408:	00 c0       	rjmp	.+0      	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
	_delay_us(5000); //4992        // delay, busy flag can't be checked here

   
    lcd_instr(LCD_FUNCTION_4BIT_2LINES); // 4-bit interface, dual line,   5x7 dots 
     40a:	00 00       	nop
     40c:	88 e3       	ldi	r24, 0x38	; 56
     40e:	d2 df       	rcall	.-92     	; 0x3b4 <lcd_instr>
	lcd_e_toggle();           // some displays need this additional delay 
     410:	94 df       	rcall	.-216    	; 0x33a <lcd_e_toggle>
     412:	81 e0       	ldi	r24, 0x01	; 1
	
	  
	lcd_instr(1<<LCD_CLR);	//clear display
     414:	cf df       	rcall	.-98     	; 0x3b4 <lcd_instr>
     416:	83 ec       	ldi	r24, 0xC3	; 195
     418:	99 e0       	ldi	r25, 0x09	; 9
     41a:	01 97       	sbiw	r24, 0x01	; 1
     41c:	f1 f7       	brne	.-4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
     41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     420:	00 00       	nop
     422:	82 e0       	ldi	r24, 0x02	; 2
	_delay_us(10000);	// some displays need this additional delay 
	
  	 lcd_instr(1<<LCD_HOME);
     424:	c7 df       	rcall	.-114    	; 0x3b4 <lcd_instr>
     426:	83 ec       	ldi	r24, 0xC3	; 195
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     428:	99 e0       	ldi	r25, 0x09	; 9
     42a:	01 97       	sbiw	r24, 0x01	; 1
     42c:	f1 f7       	brne	.-4      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
     42e:	00 c0       	rjmp	.+0      	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
     430:	00 00       	nop
     432:	8c e0       	ldi	r24, 0x0C	; 12
  	 _delay_ms(10);
	
	
	lcd_instr(LCD_DISP_ON);
     434:	bf df       	rcall	.-130    	; 0x3b4 <lcd_instr>
     436:	83 ec       	ldi	r24, 0xC3	; 195
     438:	99 e0       	ldi	r25, 0x09	; 9
     43a:	01 97       	sbiw	r24, 0x01	; 1
     43c:	f1 f7       	brne	.-4      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
     43e:	00 c0       	rjmp	.+0      	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     440:	00 00       	nop
     442:	08 95       	ret

00000444 <lcd_setline>:
     444:	82 30       	cpi	r24, 0x02	; 2
     446:	31 f0       	breq	.+12     	; 0x454 <lcd_setline+0x10>
// FUNCTION: lcd_newline
// PURPOSE:  Move cursor on specified line
void lcd_setline(uint8_t line)
{
    uint8_t addressCounter = 0;
	switch(line)
     448:	83 30       	cpi	r24, 0x03	; 3
     44a:	31 f0       	breq	.+12     	; 0x458 <lcd_setline+0x14>
     44c:	81 30       	cpi	r24, 0x01	; 1
     44e:	31 f4       	brne	.+12     	; 0x45c <lcd_setline+0x18>
	{
		case 0: addressCounter = LCD_START_LINE1; break;
		case 1: addressCounter = LCD_START_LINE2; break;
     450:	90 e4       	ldi	r25, 0x40	; 64
     452:	05 c0       	rjmp	.+10     	; 0x45e <lcd_setline+0x1a>
		case 2: addressCounter = LCD_START_LINE3; break;
     454:	94 e1       	ldi	r25, 0x14	; 20
     456:	03 c0       	rjmp	.+6      	; 0x45e <lcd_setline+0x1a>
		case 3: addressCounter = LCD_START_LINE4; break;
     458:	94 e5       	ldi	r25, 0x54	; 84
     45a:	01 c0       	rjmp	.+2      	; 0x45e <lcd_setline+0x1a>
void lcd_setline(uint8_t line)
{
    uint8_t addressCounter = 0;
	switch(line)
	{
		case 0: addressCounter = LCD_START_LINE1; break;
     45c:	90 e0       	ldi	r25, 0x00	; 0
		case 1: addressCounter = LCD_START_LINE2; break;
		case 2: addressCounter = LCD_START_LINE3; break;
		case 3: addressCounter = LCD_START_LINE4; break;
		default:addressCounter = LCD_START_LINE1; break;
	}
	g_nCurrentLine = line;
     45e:	28 2f       	mov	r18, r24
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	30 93 7d 00 	sts	0x007D, r19	; 0x80007d <__data_end+0x1>
     466:	20 93 7c 00 	sts	0x007C, r18	; 0x80007c <__data_end>

    lcd_instr((1<<LCD_DDRAM)+addressCounter);
     46a:	80 e8       	ldi	r24, 0x80	; 128
     46c:	89 0f       	add	r24, r25
     46e:	a2 cf       	rjmp	.-188    	; 0x3b4 <lcd_instr>
     470:	08 95       	ret

00000472 <lcd_char>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_char
// PURPOSE:  send a character to the LCD
void lcd_char(uint8_t data)
{
	if (data =='\n')
     472:	8a 30       	cpi	r24, 0x0A	; 10
     474:	69 f4       	brne	.+26     	; 0x490 <lcd_char+0x1e>
	{
		if (g_nCurrentLine >= LCD_LINES - 1)
     476:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__data_end>
     47a:	90 91 7d 00 	lds	r25, 0x007D	; 0x80007d <__data_end+0x1>
     47e:	18 16       	cp	r1, r24
     480:	19 06       	cpc	r1, r25
     482:	1c f4       	brge	.+6      	; 0x48a <lcd_char+0x18>
			lcd_setline(0);
     484:	80 e0       	ldi	r24, 0x00	; 0
     486:	de cf       	rjmp	.-68     	; 0x444 <lcd_setline>
     488:	08 95       	ret
		else
			lcd_setline(g_nCurrentLine+1);
     48a:	8f 5f       	subi	r24, 0xFF	; 255
     48c:	db cf       	rjmp	.-74     	; 0x444 <lcd_setline>
     48e:	08 95       	ret
	}
	else
	lcd_write(data,1);
     490:	61 e0       	ldi	r22, 0x01	; 1
     492:	68 cf       	rjmp	.-304    	; 0x364 <lcd_write>
     494:	08 95       	ret

00000496 <lcd_print2>:
     496:	cf 93       	push	r28

//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_print
// PURPOSE:  send a null terminated string to the LCD eg. char x[10]="hello!";
void lcd_print2(char *text)
{
     498:	df 93       	push	r29
	char c;
    while ( (c = *text++) )
     49a:	ec 01       	movw	r28, r24
     49c:	21 96       	adiw	r28, 0x01	; 1
     49e:	fc 01       	movw	r30, r24
     4a0:	80 81       	ld	r24, Z
     4a2:	88 23       	and	r24, r24
     4a4:	21 f0       	breq	.+8      	; 0x4ae <lcd_print2+0x18>
	lcd_char(c);	
     4a6:	e5 df       	rcall	.-54     	; 0x472 <lcd_char>
// FUNCTION: lcd_print
// PURPOSE:  send a null terminated string to the LCD eg. char x[10]="hello!";
void lcd_print2(char *text)
{
	char c;
    while ( (c = *text++) )
     4a8:	89 91       	ld	r24, Y+
     4aa:	81 11       	cpse	r24, r1
     4ac:	fc cf       	rjmp	.-8      	; 0x4a6 <lcd_print2+0x10>
	lcd_char(c);	
}
     4ae:	df 91       	pop	r29
     4b0:	cf 91       	pop	r28
     4b2:	08 95       	ret

000004b4 <lcd_print>:

void lcd_print(char *szFormat, ...)
{	
     4b4:	cf 93       	push	r28
     4b6:	df 93       	push	r29
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
     4bc:	c0 55       	subi	r28, 0x50	; 80
     4be:	d1 09       	sbc	r29, r1
     4c0:	0f b6       	in	r0, 0x3f	; 63
     4c2:	f8 94       	cli
     4c4:	de bf       	out	0x3e, r29	; 62
     4c6:	0f be       	out	0x3f, r0	; 63
     4c8:	cd bf       	out	0x3d, r28	; 61
     4ca:	ae 01       	movw	r20, r28
     4cc:	4b 5a       	subi	r20, 0xAB	; 171
     4ce:	5f 4f       	sbci	r21, 0xFF	; 255
     4d0:	fa 01       	movw	r30, r20
     4d2:	61 91       	ld	r22, Z+
     4d4:	71 91       	ld	r23, Z+
     4d6:	af 01       	movw	r20, r30
    char szBuffer[80]; //in this buffer we form the message
    va_list pArgs;
    va_start(pArgs, szFormat);
    vsprintf(szBuffer, szFormat, pArgs);
     4d8:	ce 01       	movw	r24, r28
     4da:	01 96       	adiw	r24, 0x01	; 1
     4dc:	4c d6       	rcall	.+3224   	; 0x1176 <vsprintf>
    va_end(pArgs);
	
	lcd_print2(szBuffer);
     4de:	ce 01       	movw	r24, r28
     4e0:	01 96       	adiw	r24, 0x01	; 1
     4e2:	d9 df       	rcall	.-78     	; 0x496 <lcd_print2>

}
     4e4:	c0 5b       	subi	r28, 0xB0	; 176
     4e6:	df 4f       	sbci	r29, 0xFF	; 255
     4e8:	0f b6       	in	r0, 0x3f	; 63
     4ea:	f8 94       	cli
     4ec:	de bf       	out	0x3e, r29	; 62
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	cd bf       	out	0x3d, r28	; 61
     4f2:	df 91       	pop	r29
     4f4:	cf 91       	pop	r28
     4f6:	08 95       	ret

000004f8 <lcd_gotoxy>:
void lcd_gotoxy(uint8_t y, uint8_t x)
{
#if LCD_LINES==1
    lcd_instr((1<<LCD_DDRAM)+LCD_START_LINE1+x);
#elif LCD_LINES==2
   	switch (y) 
     4f8:	88 23       	and	r24, r24
     4fa:	19 f0       	breq	.+6      	; 0x502 <lcd_gotoxy+0xa>
     4fc:	81 30       	cpi	r24, 0x01	; 1
     4fe:	29 f0       	breq	.+10     	; 0x50a <lcd_gotoxy+0x12>
     500:	08 95       	ret
	{
		case 0:lcd_instr((1<<LCD_DDRAM)+LCD_START_LINE1+x);break;
     502:	80 e8       	ldi	r24, 0x80	; 128
     504:	86 0f       	add	r24, r22
     506:	56 cf       	rjmp	.-340    	; 0x3b4 <lcd_instr>
     508:	08 95       	ret
    	case 1:lcd_instr((1<<LCD_DDRAM)+LCD_START_LINE2+x);break;
     50a:	80 ec       	ldi	r24, 0xC0	; 192
     50c:	86 0f       	add	r24, r22
     50e:	52 cf       	rjmp	.-348    	; 0x3b4 <lcd_instr>
     510:	08 95       	ret

00000512 <lcd_clrscr>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_clrscr
// PURPOSE:  Clear display and set cursor to home position
void lcd_clrscr(void)
{
	g_nCurrentLine = 0;
     512:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__data_end+0x1>
     516:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__data_end>
   	lcd_instr(1<<LCD_CLR);
     51a:	81 e0       	ldi	r24, 0x01	; 1
     51c:	4b df       	rcall	.-362    	; 0x3b4 <lcd_instr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     51e:	83 ec       	ldi	r24, 0xC3	; 195
     520:	99 e0       	ldi	r25, 0x09	; 9
     522:	01 97       	sbiw	r24, 0x01	; 1
     524:	f1 f7       	brne	.-4      	; 0x522 <lcd_clrscr+0x10>
     526:	00 c0       	rjmp	.+0      	; 0x528 <lcd_clrscr+0x16>
     528:	00 00       	nop
     52a:	08 95       	ret

0000052c <lcd_home>:
//-----------------------------------------------------------------------------------------
// FUNCTION: lcd_home
// PURPOSE:  Set cursor to home position
void lcd_home(void)
{
	g_nCurrentLine = 0;
     52c:	10 92 7d 00 	sts	0x007D, r1	; 0x80007d <__data_end+0x1>
     530:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__data_end>
    lcd_instr(1<<LCD_HOME);
     534:	82 e0       	ldi	r24, 0x02	; 2
     536:	3e df       	rcall	.-388    	; 0x3b4 <lcd_instr>
     538:	83 ec       	ldi	r24, 0xC3	; 195
     53a:	99 e0       	ldi	r25, 0x09	; 9
     53c:	01 97       	sbiw	r24, 0x01	; 1
     53e:	f1 f7       	brne	.-4      	; 0x53c <lcd_home+0x10>
     540:	00 c0       	rjmp	.+0      	; 0x542 <lcd_home+0x16>
     542:	00 00       	nop
     544:	08 95       	ret

00000546 <vfprintf>:
     546:	a0 e1       	ldi	r26, 0x10	; 16
     548:	b0 e0       	ldi	r27, 0x00	; 0
     54a:	e8 ea       	ldi	r30, 0xA8	; 168
     54c:	f2 e0       	ldi	r31, 0x02	; 2
     54e:	b2 c4       	rjmp	.+2404   	; 0xeb4 <__prologue_saves__>
     550:	7c 01       	movw	r14, r24
     552:	1b 01       	movw	r2, r22
     554:	6a 01       	movw	r12, r20
     556:	fc 01       	movw	r30, r24
     558:	17 82       	std	Z+7, r1	; 0x07
     55a:	16 82       	std	Z+6, r1	; 0x06
     55c:	83 81       	ldd	r24, Z+3	; 0x03
     55e:	81 ff       	sbrs	r24, 1
     560:	2a c3       	rjmp	.+1620   	; 0xbb6 <__stack+0x357>
     562:	9e 01       	movw	r18, r28
     564:	2f 5f       	subi	r18, 0xFF	; 255
     566:	3f 4f       	sbci	r19, 0xFF	; 255
     568:	39 01       	movw	r6, r18
     56a:	f7 01       	movw	r30, r14
     56c:	93 81       	ldd	r25, Z+3	; 0x03
     56e:	f1 01       	movw	r30, r2
     570:	93 fd       	sbrc	r25, 3
     572:	85 91       	lpm	r24, Z+
     574:	93 ff       	sbrs	r25, 3
     576:	81 91       	ld	r24, Z+
     578:	1f 01       	movw	r2, r30
     57a:	88 23       	and	r24, r24
     57c:	09 f4       	brne	.+2      	; 0x580 <vfprintf+0x3a>
     57e:	17 c3       	rjmp	.+1582   	; 0xbae <__stack+0x34f>
     580:	85 32       	cpi	r24, 0x25	; 37
     582:	39 f4       	brne	.+14     	; 0x592 <vfprintf+0x4c>
     584:	93 fd       	sbrc	r25, 3
     586:	85 91       	lpm	r24, Z+
     588:	93 ff       	sbrs	r25, 3
     58a:	81 91       	ld	r24, Z+
     58c:	1f 01       	movw	r2, r30
     58e:	85 32       	cpi	r24, 0x25	; 37
     590:	31 f4       	brne	.+12     	; 0x59e <vfprintf+0x58>
     592:	b7 01       	movw	r22, r14
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	b3 d5       	rcall	.+2918   	; 0x10fe <fputc>
     598:	56 01       	movw	r10, r12
     59a:	65 01       	movw	r12, r10
     59c:	e6 cf       	rjmp	.-52     	; 0x56a <vfprintf+0x24>
     59e:	10 e0       	ldi	r17, 0x00	; 0
     5a0:	51 2c       	mov	r5, r1
     5a2:	91 2c       	mov	r9, r1
     5a4:	ff e1       	ldi	r31, 0x1F	; 31
     5a6:	f9 15       	cp	r31, r9
     5a8:	d8 f0       	brcs	.+54     	; 0x5e0 <vfprintf+0x9a>
     5aa:	8b 32       	cpi	r24, 0x2B	; 43
     5ac:	79 f0       	breq	.+30     	; 0x5cc <vfprintf+0x86>
     5ae:	38 f4       	brcc	.+14     	; 0x5be <vfprintf+0x78>
     5b0:	80 32       	cpi	r24, 0x20	; 32
     5b2:	79 f0       	breq	.+30     	; 0x5d2 <vfprintf+0x8c>
     5b4:	83 32       	cpi	r24, 0x23	; 35
     5b6:	a1 f4       	brne	.+40     	; 0x5e0 <vfprintf+0x9a>
     5b8:	f9 2d       	mov	r31, r9
     5ba:	f0 61       	ori	r31, 0x10	; 16
     5bc:	2e c0       	rjmp	.+92     	; 0x61a <vfprintf+0xd4>
     5be:	8d 32       	cpi	r24, 0x2D	; 45
     5c0:	61 f0       	breq	.+24     	; 0x5da <vfprintf+0x94>
     5c2:	80 33       	cpi	r24, 0x30	; 48
     5c4:	69 f4       	brne	.+26     	; 0x5e0 <vfprintf+0x9a>
     5c6:	29 2d       	mov	r18, r9
     5c8:	21 60       	ori	r18, 0x01	; 1
     5ca:	2d c0       	rjmp	.+90     	; 0x626 <vfprintf+0xe0>
     5cc:	39 2d       	mov	r19, r9
     5ce:	32 60       	ori	r19, 0x02	; 2
     5d0:	93 2e       	mov	r9, r19
     5d2:	89 2d       	mov	r24, r9
     5d4:	84 60       	ori	r24, 0x04	; 4
     5d6:	98 2e       	mov	r9, r24
     5d8:	2a c0       	rjmp	.+84     	; 0x62e <vfprintf+0xe8>
     5da:	e9 2d       	mov	r30, r9
     5dc:	e8 60       	ori	r30, 0x08	; 8
     5de:	15 c0       	rjmp	.+42     	; 0x60a <vfprintf+0xc4>
     5e0:	97 fc       	sbrc	r9, 7
     5e2:	2d c0       	rjmp	.+90     	; 0x63e <vfprintf+0xf8>
     5e4:	20 ed       	ldi	r18, 0xD0	; 208
     5e6:	28 0f       	add	r18, r24
     5e8:	2a 30       	cpi	r18, 0x0A	; 10
     5ea:	88 f4       	brcc	.+34     	; 0x60e <vfprintf+0xc8>
     5ec:	96 fe       	sbrs	r9, 6
     5ee:	06 c0       	rjmp	.+12     	; 0x5fc <vfprintf+0xb6>
     5f0:	3a e0       	ldi	r19, 0x0A	; 10
     5f2:	13 9f       	mul	r17, r19
     5f4:	20 0d       	add	r18, r0
     5f6:	11 24       	eor	r1, r1
     5f8:	12 2f       	mov	r17, r18
     5fa:	19 c0       	rjmp	.+50     	; 0x62e <vfprintf+0xe8>
     5fc:	8a e0       	ldi	r24, 0x0A	; 10
     5fe:	58 9e       	mul	r5, r24
     600:	20 0d       	add	r18, r0
     602:	11 24       	eor	r1, r1
     604:	52 2e       	mov	r5, r18
     606:	e9 2d       	mov	r30, r9
     608:	e0 62       	ori	r30, 0x20	; 32
     60a:	9e 2e       	mov	r9, r30
     60c:	10 c0       	rjmp	.+32     	; 0x62e <vfprintf+0xe8>
     60e:	8e 32       	cpi	r24, 0x2E	; 46
     610:	31 f4       	brne	.+12     	; 0x61e <vfprintf+0xd8>
     612:	96 fc       	sbrc	r9, 6
     614:	cc c2       	rjmp	.+1432   	; 0xbae <__stack+0x34f>
     616:	f9 2d       	mov	r31, r9
     618:	f0 64       	ori	r31, 0x40	; 64
     61a:	9f 2e       	mov	r9, r31
     61c:	08 c0       	rjmp	.+16     	; 0x62e <vfprintf+0xe8>
     61e:	8c 36       	cpi	r24, 0x6C	; 108
     620:	21 f4       	brne	.+8      	; 0x62a <vfprintf+0xe4>
     622:	29 2d       	mov	r18, r9
     624:	20 68       	ori	r18, 0x80	; 128
     626:	92 2e       	mov	r9, r18
     628:	02 c0       	rjmp	.+4      	; 0x62e <vfprintf+0xe8>
     62a:	88 36       	cpi	r24, 0x68	; 104
     62c:	41 f4       	brne	.+16     	; 0x63e <vfprintf+0xf8>
     62e:	f1 01       	movw	r30, r2
     630:	93 fd       	sbrc	r25, 3
     632:	85 91       	lpm	r24, Z+
     634:	93 ff       	sbrs	r25, 3
     636:	81 91       	ld	r24, Z+
     638:	1f 01       	movw	r2, r30
     63a:	81 11       	cpse	r24, r1
     63c:	b3 cf       	rjmp	.-154    	; 0x5a4 <vfprintf+0x5e>
     63e:	9b eb       	ldi	r25, 0xBB	; 187
     640:	98 0f       	add	r25, r24
     642:	93 30       	cpi	r25, 0x03	; 3
     644:	20 f4       	brcc	.+8      	; 0x64e <vfprintf+0x108>
     646:	99 2d       	mov	r25, r9
     648:	90 61       	ori	r25, 0x10	; 16
     64a:	80 5e       	subi	r24, 0xE0	; 224
     64c:	07 c0       	rjmp	.+14     	; 0x65c <vfprintf+0x116>
     64e:	9b e9       	ldi	r25, 0x9B	; 155
     650:	98 0f       	add	r25, r24
     652:	93 30       	cpi	r25, 0x03	; 3
     654:	08 f0       	brcs	.+2      	; 0x658 <vfprintf+0x112>
     656:	59 c1       	rjmp	.+690    	; 0x90a <__stack+0xab>
     658:	99 2d       	mov	r25, r9
     65a:	9f 7e       	andi	r25, 0xEF	; 239
     65c:	96 ff       	sbrs	r25, 6
     65e:	16 e0       	ldi	r17, 0x06	; 6
     660:	9f 73       	andi	r25, 0x3F	; 63
     662:	99 2e       	mov	r9, r25
     664:	85 36       	cpi	r24, 0x65	; 101
     666:	19 f4       	brne	.+6      	; 0x66e <vfprintf+0x128>
     668:	90 64       	ori	r25, 0x40	; 64
     66a:	99 2e       	mov	r9, r25
     66c:	08 c0       	rjmp	.+16     	; 0x67e <vfprintf+0x138>
     66e:	86 36       	cpi	r24, 0x66	; 102
     670:	21 f4       	brne	.+8      	; 0x67a <vfprintf+0x134>
     672:	39 2f       	mov	r19, r25
     674:	30 68       	ori	r19, 0x80	; 128
     676:	93 2e       	mov	r9, r19
     678:	02 c0       	rjmp	.+4      	; 0x67e <vfprintf+0x138>
     67a:	11 11       	cpse	r17, r1
     67c:	11 50       	subi	r17, 0x01	; 1
     67e:	97 fe       	sbrs	r9, 7
     680:	07 c0       	rjmp	.+14     	; 0x690 <vfprintf+0x14a>
     682:	1c 33       	cpi	r17, 0x3C	; 60
     684:	50 f4       	brcc	.+20     	; 0x69a <vfprintf+0x154>
     686:	44 24       	eor	r4, r4
     688:	43 94       	inc	r4
     68a:	41 0e       	add	r4, r17
     68c:	27 e0       	ldi	r18, 0x07	; 7
     68e:	0b c0       	rjmp	.+22     	; 0x6a6 <vfprintf+0x160>
     690:	18 30       	cpi	r17, 0x08	; 8
     692:	38 f0       	brcs	.+14     	; 0x6a2 <vfprintf+0x15c>
     694:	27 e0       	ldi	r18, 0x07	; 7
     696:	17 e0       	ldi	r17, 0x07	; 7
     698:	05 c0       	rjmp	.+10     	; 0x6a4 <vfprintf+0x15e>
     69a:	27 e0       	ldi	r18, 0x07	; 7
     69c:	9c e3       	ldi	r25, 0x3C	; 60
     69e:	49 2e       	mov	r4, r25
     6a0:	02 c0       	rjmp	.+4      	; 0x6a6 <vfprintf+0x160>
     6a2:	21 2f       	mov	r18, r17
     6a4:	41 2c       	mov	r4, r1
     6a6:	56 01       	movw	r10, r12
     6a8:	84 e0       	ldi	r24, 0x04	; 4
     6aa:	a8 0e       	add	r10, r24
     6ac:	b1 1c       	adc	r11, r1
     6ae:	f6 01       	movw	r30, r12
     6b0:	60 81       	ld	r22, Z
     6b2:	71 81       	ldd	r23, Z+1	; 0x01
     6b4:	82 81       	ldd	r24, Z+2	; 0x02
     6b6:	93 81       	ldd	r25, Z+3	; 0x03
     6b8:	04 2d       	mov	r16, r4
     6ba:	a3 01       	movw	r20, r6
     6bc:	32 d4       	rcall	.+2148   	; 0xf22 <__ftoa_engine>
     6be:	6c 01       	movw	r12, r24
     6c0:	f9 81       	ldd	r31, Y+1	; 0x01
     6c2:	fc 87       	std	Y+12, r31	; 0x0c
     6c4:	f0 ff       	sbrs	r31, 0
     6c6:	02 c0       	rjmp	.+4      	; 0x6cc <vfprintf+0x186>
     6c8:	f3 ff       	sbrs	r31, 3
     6ca:	06 c0       	rjmp	.+12     	; 0x6d8 <vfprintf+0x192>
     6cc:	91 fc       	sbrc	r9, 1
     6ce:	06 c0       	rjmp	.+12     	; 0x6dc <vfprintf+0x196>
     6d0:	92 fe       	sbrs	r9, 2
     6d2:	06 c0       	rjmp	.+12     	; 0x6e0 <vfprintf+0x19a>
     6d4:	00 e2       	ldi	r16, 0x20	; 32
     6d6:	05 c0       	rjmp	.+10     	; 0x6e2 <vfprintf+0x19c>
     6d8:	0d e2       	ldi	r16, 0x2D	; 45
     6da:	03 c0       	rjmp	.+6      	; 0x6e2 <vfprintf+0x19c>
     6dc:	0b e2       	ldi	r16, 0x2B	; 43
     6de:	01 c0       	rjmp	.+2      	; 0x6e2 <vfprintf+0x19c>
     6e0:	00 e0       	ldi	r16, 0x00	; 0
     6e2:	8c 85       	ldd	r24, Y+12	; 0x0c
     6e4:	8c 70       	andi	r24, 0x0C	; 12
     6e6:	19 f0       	breq	.+6      	; 0x6ee <vfprintf+0x1a8>
     6e8:	01 11       	cpse	r16, r1
     6ea:	43 c2       	rjmp	.+1158   	; 0xb72 <__stack+0x313>
     6ec:	80 c2       	rjmp	.+1280   	; 0xbee <__stack+0x38f>
     6ee:	97 fe       	sbrs	r9, 7
     6f0:	10 c0       	rjmp	.+32     	; 0x712 <vfprintf+0x1cc>
     6f2:	4c 0c       	add	r4, r12
     6f4:	fc 85       	ldd	r31, Y+12	; 0x0c
     6f6:	f4 ff       	sbrs	r31, 4
     6f8:	04 c0       	rjmp	.+8      	; 0x702 <vfprintf+0x1bc>
     6fa:	8a 81       	ldd	r24, Y+2	; 0x02
     6fc:	81 33       	cpi	r24, 0x31	; 49
     6fe:	09 f4       	brne	.+2      	; 0x702 <vfprintf+0x1bc>
     700:	4a 94       	dec	r4
     702:	14 14       	cp	r1, r4
     704:	74 f5       	brge	.+92     	; 0x762 <vfprintf+0x21c>
     706:	28 e0       	ldi	r18, 0x08	; 8
     708:	24 15       	cp	r18, r4
     70a:	78 f5       	brcc	.+94     	; 0x76a <vfprintf+0x224>
     70c:	88 e0       	ldi	r24, 0x08	; 8
     70e:	48 2e       	mov	r4, r24
     710:	2c c0       	rjmp	.+88     	; 0x76a <vfprintf+0x224>
     712:	96 fc       	sbrc	r9, 6
     714:	2a c0       	rjmp	.+84     	; 0x76a <vfprintf+0x224>
     716:	81 2f       	mov	r24, r17
     718:	90 e0       	ldi	r25, 0x00	; 0
     71a:	8c 15       	cp	r24, r12
     71c:	9d 05       	cpc	r25, r13
     71e:	9c f0       	brlt	.+38     	; 0x746 <vfprintf+0x200>
     720:	3c ef       	ldi	r19, 0xFC	; 252
     722:	c3 16       	cp	r12, r19
     724:	3f ef       	ldi	r19, 0xFF	; 255
     726:	d3 06       	cpc	r13, r19
     728:	74 f0       	brlt	.+28     	; 0x746 <vfprintf+0x200>
     72a:	89 2d       	mov	r24, r9
     72c:	80 68       	ori	r24, 0x80	; 128
     72e:	98 2e       	mov	r9, r24
     730:	0a c0       	rjmp	.+20     	; 0x746 <vfprintf+0x200>
     732:	e2 e0       	ldi	r30, 0x02	; 2
     734:	f0 e0       	ldi	r31, 0x00	; 0
     736:	ec 0f       	add	r30, r28
     738:	fd 1f       	adc	r31, r29
     73a:	e1 0f       	add	r30, r17
     73c:	f1 1d       	adc	r31, r1
     73e:	80 81       	ld	r24, Z
     740:	80 33       	cpi	r24, 0x30	; 48
     742:	19 f4       	brne	.+6      	; 0x74a <vfprintf+0x204>
     744:	11 50       	subi	r17, 0x01	; 1
     746:	11 11       	cpse	r17, r1
     748:	f4 cf       	rjmp	.-24     	; 0x732 <vfprintf+0x1ec>
     74a:	97 fe       	sbrs	r9, 7
     74c:	0e c0       	rjmp	.+28     	; 0x76a <vfprintf+0x224>
     74e:	44 24       	eor	r4, r4
     750:	43 94       	inc	r4
     752:	41 0e       	add	r4, r17
     754:	81 2f       	mov	r24, r17
     756:	90 e0       	ldi	r25, 0x00	; 0
     758:	c8 16       	cp	r12, r24
     75a:	d9 06       	cpc	r13, r25
     75c:	2c f4       	brge	.+10     	; 0x768 <vfprintf+0x222>
     75e:	1c 19       	sub	r17, r12
     760:	04 c0       	rjmp	.+8      	; 0x76a <vfprintf+0x224>
     762:	44 24       	eor	r4, r4
     764:	43 94       	inc	r4
     766:	01 c0       	rjmp	.+2      	; 0x76a <vfprintf+0x224>
     768:	10 e0       	ldi	r17, 0x00	; 0
     76a:	97 fe       	sbrs	r9, 7
     76c:	06 c0       	rjmp	.+12     	; 0x77a <vfprintf+0x234>
     76e:	1c 14       	cp	r1, r12
     770:	1d 04       	cpc	r1, r13
     772:	34 f4       	brge	.+12     	; 0x780 <vfprintf+0x23a>
     774:	c6 01       	movw	r24, r12
     776:	01 96       	adiw	r24, 0x01	; 1
     778:	05 c0       	rjmp	.+10     	; 0x784 <vfprintf+0x23e>
     77a:	85 e0       	ldi	r24, 0x05	; 5
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	02 c0       	rjmp	.+4      	; 0x784 <vfprintf+0x23e>
     780:	81 e0       	ldi	r24, 0x01	; 1
     782:	90 e0       	ldi	r25, 0x00	; 0
     784:	01 11       	cpse	r16, r1
     786:	01 96       	adiw	r24, 0x01	; 1
     788:	11 23       	and	r17, r17
     78a:	31 f0       	breq	.+12     	; 0x798 <vfprintf+0x252>
     78c:	21 2f       	mov	r18, r17
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	2f 5f       	subi	r18, 0xFF	; 255
     792:	3f 4f       	sbci	r19, 0xFF	; 255
     794:	82 0f       	add	r24, r18
     796:	93 1f       	adc	r25, r19
     798:	25 2d       	mov	r18, r5
     79a:	30 e0       	ldi	r19, 0x00	; 0
     79c:	82 17       	cp	r24, r18
     79e:	93 07       	cpc	r25, r19
     7a0:	14 f4       	brge	.+4      	; 0x7a6 <vfprintf+0x260>
     7a2:	58 1a       	sub	r5, r24
     7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <vfprintf+0x262>
     7a6:	51 2c       	mov	r5, r1
     7a8:	89 2d       	mov	r24, r9
     7aa:	89 70       	andi	r24, 0x09	; 9
     7ac:	41 f4       	brne	.+16     	; 0x7be <vfprintf+0x278>
     7ae:	55 20       	and	r5, r5
     7b0:	31 f0       	breq	.+12     	; 0x7be <vfprintf+0x278>
     7b2:	b7 01       	movw	r22, r14
     7b4:	80 e2       	ldi	r24, 0x20	; 32
     7b6:	90 e0       	ldi	r25, 0x00	; 0
     7b8:	a2 d4       	rcall	.+2372   	; 0x10fe <fputc>
     7ba:	5a 94       	dec	r5
     7bc:	f8 cf       	rjmp	.-16     	; 0x7ae <vfprintf+0x268>
     7be:	00 23       	and	r16, r16
     7c0:	21 f0       	breq	.+8      	; 0x7ca <vfprintf+0x284>
     7c2:	b7 01       	movw	r22, r14
     7c4:	80 2f       	mov	r24, r16
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	9a d4       	rcall	.+2356   	; 0x10fe <fputc>
     7ca:	93 fc       	sbrc	r9, 3
     7cc:	08 c0       	rjmp	.+16     	; 0x7de <vfprintf+0x298>
     7ce:	55 20       	and	r5, r5
     7d0:	31 f0       	breq	.+12     	; 0x7de <vfprintf+0x298>
     7d2:	b7 01       	movw	r22, r14
     7d4:	80 e3       	ldi	r24, 0x30	; 48
     7d6:	90 e0       	ldi	r25, 0x00	; 0
     7d8:	92 d4       	rcall	.+2340   	; 0x10fe <fputc>
     7da:	5a 94       	dec	r5
     7dc:	f8 cf       	rjmp	.-16     	; 0x7ce <vfprintf+0x288>
     7de:	97 fe       	sbrs	r9, 7
     7e0:	4a c0       	rjmp	.+148    	; 0x876 <__stack+0x17>
     7e2:	46 01       	movw	r8, r12
     7e4:	d7 fe       	sbrs	r13, 7
     7e6:	02 c0       	rjmp	.+4      	; 0x7ec <vfprintf+0x2a6>
     7e8:	81 2c       	mov	r8, r1
     7ea:	91 2c       	mov	r9, r1
     7ec:	c6 01       	movw	r24, r12
     7ee:	88 19       	sub	r24, r8
     7f0:	99 09       	sbc	r25, r9
     7f2:	f3 01       	movw	r30, r6
     7f4:	e8 0f       	add	r30, r24
     7f6:	f9 1f       	adc	r31, r25
     7f8:	fe 87       	std	Y+14, r31	; 0x0e
     7fa:	ed 87       	std	Y+13, r30	; 0x0d
     7fc:	96 01       	movw	r18, r12
     7fe:	24 19       	sub	r18, r4
     800:	31 09       	sbc	r19, r1
     802:	38 8b       	std	Y+16, r19	; 0x10
     804:	2f 87       	std	Y+15, r18	; 0x0f
     806:	01 2f       	mov	r16, r17
     808:	10 e0       	ldi	r17, 0x00	; 0
     80a:	11 95       	neg	r17
     80c:	01 95       	neg	r16
     80e:	11 09       	sbc	r17, r1
     810:	3f ef       	ldi	r19, 0xFF	; 255
     812:	83 16       	cp	r8, r19
     814:	93 06       	cpc	r9, r19
     816:	21 f4       	brne	.+8      	; 0x820 <__DATA_REGION_LENGTH__+0x20>
     818:	b7 01       	movw	r22, r14
     81a:	8e e2       	ldi	r24, 0x2E	; 46
     81c:	90 e0       	ldi	r25, 0x00	; 0
     81e:	6f d4       	rcall	.+2270   	; 0x10fe <fputc>
     820:	c8 14       	cp	r12, r8
     822:	d9 04       	cpc	r13, r9
     824:	4c f0       	brlt	.+18     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
     826:	8f 85       	ldd	r24, Y+15	; 0x0f
     828:	98 89       	ldd	r25, Y+16	; 0x10
     82a:	88 15       	cp	r24, r8
     82c:	99 05       	cpc	r25, r9
     82e:	24 f4       	brge	.+8      	; 0x838 <__DATA_REGION_LENGTH__+0x38>
     830:	ed 85       	ldd	r30, Y+13	; 0x0d
     832:	fe 85       	ldd	r31, Y+14	; 0x0e
     834:	81 81       	ldd	r24, Z+1	; 0x01
     836:	01 c0       	rjmp	.+2      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
     838:	80 e3       	ldi	r24, 0x30	; 48
     83a:	f1 e0       	ldi	r31, 0x01	; 1
     83c:	8f 1a       	sub	r8, r31
     83e:	91 08       	sbc	r9, r1
     840:	2d 85       	ldd	r18, Y+13	; 0x0d
     842:	3e 85       	ldd	r19, Y+14	; 0x0e
     844:	2f 5f       	subi	r18, 0xFF	; 255
     846:	3f 4f       	sbci	r19, 0xFF	; 255
     848:	3e 87       	std	Y+14, r19	; 0x0e
     84a:	2d 87       	std	Y+13, r18	; 0x0d
     84c:	80 16       	cp	r8, r16
     84e:	91 06       	cpc	r9, r17
     850:	24 f0       	brlt	.+8      	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
     852:	b7 01       	movw	r22, r14
     854:	90 e0       	ldi	r25, 0x00	; 0
     856:	53 d4       	rcall	.+2214   	; 0x10fe <fputc>
     858:	db cf       	rjmp	.-74     	; 0x810 <__DATA_REGION_LENGTH__+0x10>
     85a:	c8 14       	cp	r12, r8
     85c:	d9 04       	cpc	r13, r9
     85e:	41 f4       	brne	.+16     	; 0x870 <__stack+0x11>
     860:	9a 81       	ldd	r25, Y+2	; 0x02
     862:	96 33       	cpi	r25, 0x36	; 54
     864:	20 f4       	brcc	.+8      	; 0x86e <__stack+0xf>
     866:	95 33       	cpi	r25, 0x35	; 53
     868:	19 f4       	brne	.+6      	; 0x870 <__stack+0x11>
     86a:	3c 85       	ldd	r19, Y+12	; 0x0c
     86c:	34 ff       	sbrs	r19, 4
     86e:	81 e3       	ldi	r24, 0x31	; 49
     870:	b7 01       	movw	r22, r14
     872:	90 e0       	ldi	r25, 0x00	; 0
     874:	48 c0       	rjmp	.+144    	; 0x906 <__stack+0xa7>
     876:	8a 81       	ldd	r24, Y+2	; 0x02
     878:	81 33       	cpi	r24, 0x31	; 49
     87a:	19 f0       	breq	.+6      	; 0x882 <__stack+0x23>
     87c:	9c 85       	ldd	r25, Y+12	; 0x0c
     87e:	9f 7e       	andi	r25, 0xEF	; 239
     880:	9c 87       	std	Y+12, r25	; 0x0c
     882:	b7 01       	movw	r22, r14
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	3b d4       	rcall	.+2166   	; 0x10fe <fputc>
     888:	11 11       	cpse	r17, r1
     88a:	05 c0       	rjmp	.+10     	; 0x896 <__stack+0x37>
     88c:	94 fc       	sbrc	r9, 4
     88e:	16 c0       	rjmp	.+44     	; 0x8bc <__stack+0x5d>
     890:	85 e6       	ldi	r24, 0x65	; 101
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	15 c0       	rjmp	.+42     	; 0x8c0 <__stack+0x61>
     896:	b7 01       	movw	r22, r14
     898:	8e e2       	ldi	r24, 0x2E	; 46
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	30 d4       	rcall	.+2144   	; 0x10fe <fputc>
     89e:	1e 5f       	subi	r17, 0xFE	; 254
     8a0:	82 e0       	ldi	r24, 0x02	; 2
     8a2:	01 e0       	ldi	r16, 0x01	; 1
     8a4:	08 0f       	add	r16, r24
     8a6:	f3 01       	movw	r30, r6
     8a8:	e8 0f       	add	r30, r24
     8aa:	f1 1d       	adc	r31, r1
     8ac:	80 81       	ld	r24, Z
     8ae:	b7 01       	movw	r22, r14
     8b0:	90 e0       	ldi	r25, 0x00	; 0
     8b2:	25 d4       	rcall	.+2122   	; 0x10fe <fputc>
     8b4:	80 2f       	mov	r24, r16
     8b6:	01 13       	cpse	r16, r17
     8b8:	f4 cf       	rjmp	.-24     	; 0x8a2 <__stack+0x43>
     8ba:	e8 cf       	rjmp	.-48     	; 0x88c <__stack+0x2d>
     8bc:	85 e4       	ldi	r24, 0x45	; 69
     8be:	90 e0       	ldi	r25, 0x00	; 0
     8c0:	b7 01       	movw	r22, r14
     8c2:	1d d4       	rcall	.+2106   	; 0x10fe <fputc>
     8c4:	d7 fc       	sbrc	r13, 7
     8c6:	06 c0       	rjmp	.+12     	; 0x8d4 <__stack+0x75>
     8c8:	c1 14       	cp	r12, r1
     8ca:	d1 04       	cpc	r13, r1
     8cc:	41 f4       	brne	.+16     	; 0x8de <__stack+0x7f>
     8ce:	ec 85       	ldd	r30, Y+12	; 0x0c
     8d0:	e4 ff       	sbrs	r30, 4
     8d2:	05 c0       	rjmp	.+10     	; 0x8de <__stack+0x7f>
     8d4:	d1 94       	neg	r13
     8d6:	c1 94       	neg	r12
     8d8:	d1 08       	sbc	r13, r1
     8da:	8d e2       	ldi	r24, 0x2D	; 45
     8dc:	01 c0       	rjmp	.+2      	; 0x8e0 <__stack+0x81>
     8de:	8b e2       	ldi	r24, 0x2B	; 43
     8e0:	b7 01       	movw	r22, r14
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	0c d4       	rcall	.+2072   	; 0x10fe <fputc>
     8e6:	80 e3       	ldi	r24, 0x30	; 48
     8e8:	2a e0       	ldi	r18, 0x0A	; 10
     8ea:	c2 16       	cp	r12, r18
     8ec:	d1 04       	cpc	r13, r1
     8ee:	2c f0       	brlt	.+10     	; 0x8fa <__stack+0x9b>
     8f0:	8f 5f       	subi	r24, 0xFF	; 255
     8f2:	fa e0       	ldi	r31, 0x0A	; 10
     8f4:	cf 1a       	sub	r12, r31
     8f6:	d1 08       	sbc	r13, r1
     8f8:	f7 cf       	rjmp	.-18     	; 0x8e8 <__stack+0x89>
     8fa:	b7 01       	movw	r22, r14
     8fc:	90 e0       	ldi	r25, 0x00	; 0
     8fe:	ff d3       	rcall	.+2046   	; 0x10fe <fputc>
     900:	b7 01       	movw	r22, r14
     902:	c6 01       	movw	r24, r12
     904:	c0 96       	adiw	r24, 0x30	; 48
     906:	fb d3       	rcall	.+2038   	; 0x10fe <fputc>
     908:	49 c1       	rjmp	.+658    	; 0xb9c <__stack+0x33d>
     90a:	83 36       	cpi	r24, 0x63	; 99
     90c:	31 f0       	breq	.+12     	; 0x91a <__stack+0xbb>
     90e:	83 37       	cpi	r24, 0x73	; 115
     910:	79 f0       	breq	.+30     	; 0x930 <__stack+0xd1>
     912:	83 35       	cpi	r24, 0x53	; 83
     914:	09 f0       	breq	.+2      	; 0x918 <__stack+0xb9>
     916:	52 c0       	rjmp	.+164    	; 0x9bc <__stack+0x15d>
     918:	1f c0       	rjmp	.+62     	; 0x958 <__stack+0xf9>
     91a:	56 01       	movw	r10, r12
     91c:	32 e0       	ldi	r19, 0x02	; 2
     91e:	a3 0e       	add	r10, r19
     920:	b1 1c       	adc	r11, r1
     922:	f6 01       	movw	r30, r12
     924:	80 81       	ld	r24, Z
     926:	89 83       	std	Y+1, r24	; 0x01
     928:	01 e0       	ldi	r16, 0x01	; 1
     92a:	10 e0       	ldi	r17, 0x00	; 0
     92c:	63 01       	movw	r12, r6
     92e:	11 c0       	rjmp	.+34     	; 0x952 <__stack+0xf3>
     930:	56 01       	movw	r10, r12
     932:	f2 e0       	ldi	r31, 0x02	; 2
     934:	af 0e       	add	r10, r31
     936:	b1 1c       	adc	r11, r1
     938:	f6 01       	movw	r30, r12
     93a:	c0 80       	ld	r12, Z
     93c:	d1 80       	ldd	r13, Z+1	; 0x01
     93e:	96 fe       	sbrs	r9, 6
     940:	03 c0       	rjmp	.+6      	; 0x948 <__stack+0xe9>
     942:	61 2f       	mov	r22, r17
     944:	70 e0       	ldi	r23, 0x00	; 0
     946:	02 c0       	rjmp	.+4      	; 0x94c <__stack+0xed>
     948:	6f ef       	ldi	r22, 0xFF	; 255
     94a:	7f ef       	ldi	r23, 0xFF	; 255
     94c:	c6 01       	movw	r24, r12
     94e:	cc d3       	rcall	.+1944   	; 0x10e8 <strnlen>
     950:	8c 01       	movw	r16, r24
     952:	f9 2d       	mov	r31, r9
     954:	ff 77       	andi	r31, 0x7F	; 127
     956:	13 c0       	rjmp	.+38     	; 0x97e <__stack+0x11f>
     958:	56 01       	movw	r10, r12
     95a:	22 e0       	ldi	r18, 0x02	; 2
     95c:	a2 0e       	add	r10, r18
     95e:	b1 1c       	adc	r11, r1
     960:	f6 01       	movw	r30, r12
     962:	c0 80       	ld	r12, Z
     964:	d1 80       	ldd	r13, Z+1	; 0x01
     966:	96 fe       	sbrs	r9, 6
     968:	03 c0       	rjmp	.+6      	; 0x970 <__stack+0x111>
     96a:	61 2f       	mov	r22, r17
     96c:	70 e0       	ldi	r23, 0x00	; 0
     96e:	02 c0       	rjmp	.+4      	; 0x974 <__stack+0x115>
     970:	6f ef       	ldi	r22, 0xFF	; 255
     972:	7f ef       	ldi	r23, 0xFF	; 255
     974:	c6 01       	movw	r24, r12
     976:	ad d3       	rcall	.+1882   	; 0x10d2 <strnlen_P>
     978:	8c 01       	movw	r16, r24
     97a:	f9 2d       	mov	r31, r9
     97c:	f0 68       	ori	r31, 0x80	; 128
     97e:	9f 2e       	mov	r9, r31
     980:	f3 fd       	sbrc	r31, 3
     982:	18 c0       	rjmp	.+48     	; 0x9b4 <__stack+0x155>
     984:	85 2d       	mov	r24, r5
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	08 17       	cp	r16, r24
     98a:	19 07       	cpc	r17, r25
     98c:	98 f4       	brcc	.+38     	; 0x9b4 <__stack+0x155>
     98e:	b7 01       	movw	r22, r14
     990:	80 e2       	ldi	r24, 0x20	; 32
     992:	90 e0       	ldi	r25, 0x00	; 0
     994:	b4 d3       	rcall	.+1896   	; 0x10fe <fputc>
     996:	5a 94       	dec	r5
     998:	f5 cf       	rjmp	.-22     	; 0x984 <__stack+0x125>
     99a:	f6 01       	movw	r30, r12
     99c:	97 fc       	sbrc	r9, 7
     99e:	85 91       	lpm	r24, Z+
     9a0:	97 fe       	sbrs	r9, 7
     9a2:	81 91       	ld	r24, Z+
     9a4:	6f 01       	movw	r12, r30
     9a6:	b7 01       	movw	r22, r14
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	a9 d3       	rcall	.+1874   	; 0x10fe <fputc>
     9ac:	51 10       	cpse	r5, r1
     9ae:	5a 94       	dec	r5
     9b0:	01 50       	subi	r16, 0x01	; 1
     9b2:	11 09       	sbc	r17, r1
     9b4:	01 15       	cp	r16, r1
     9b6:	11 05       	cpc	r17, r1
     9b8:	81 f7       	brne	.-32     	; 0x99a <__stack+0x13b>
     9ba:	f0 c0       	rjmp	.+480    	; 0xb9c <__stack+0x33d>
     9bc:	84 36       	cpi	r24, 0x64	; 100
     9be:	11 f0       	breq	.+4      	; 0x9c4 <__stack+0x165>
     9c0:	89 36       	cpi	r24, 0x69	; 105
     9c2:	59 f5       	brne	.+86     	; 0xa1a <__stack+0x1bb>
     9c4:	56 01       	movw	r10, r12
     9c6:	97 fe       	sbrs	r9, 7
     9c8:	09 c0       	rjmp	.+18     	; 0x9dc <__stack+0x17d>
     9ca:	24 e0       	ldi	r18, 0x04	; 4
     9cc:	a2 0e       	add	r10, r18
     9ce:	b1 1c       	adc	r11, r1
     9d0:	f6 01       	movw	r30, r12
     9d2:	60 81       	ld	r22, Z
     9d4:	71 81       	ldd	r23, Z+1	; 0x01
     9d6:	82 81       	ldd	r24, Z+2	; 0x02
     9d8:	93 81       	ldd	r25, Z+3	; 0x03
     9da:	0a c0       	rjmp	.+20     	; 0x9f0 <__stack+0x191>
     9dc:	f2 e0       	ldi	r31, 0x02	; 2
     9de:	af 0e       	add	r10, r31
     9e0:	b1 1c       	adc	r11, r1
     9e2:	f6 01       	movw	r30, r12
     9e4:	60 81       	ld	r22, Z
     9e6:	71 81       	ldd	r23, Z+1	; 0x01
     9e8:	07 2e       	mov	r0, r23
     9ea:	00 0c       	add	r0, r0
     9ec:	88 0b       	sbc	r24, r24
     9ee:	99 0b       	sbc	r25, r25
     9f0:	f9 2d       	mov	r31, r9
     9f2:	ff 76       	andi	r31, 0x6F	; 111
     9f4:	9f 2e       	mov	r9, r31
     9f6:	97 ff       	sbrs	r25, 7
     9f8:	09 c0       	rjmp	.+18     	; 0xa0c <__stack+0x1ad>
     9fa:	90 95       	com	r25
     9fc:	80 95       	com	r24
     9fe:	70 95       	com	r23
     a00:	61 95       	neg	r22
     a02:	7f 4f       	sbci	r23, 0xFF	; 255
     a04:	8f 4f       	sbci	r24, 0xFF	; 255
     a06:	9f 4f       	sbci	r25, 0xFF	; 255
     a08:	f0 68       	ori	r31, 0x80	; 128
     a0a:	9f 2e       	mov	r9, r31
     a0c:	2a e0       	ldi	r18, 0x0A	; 10
     a0e:	30 e0       	ldi	r19, 0x00	; 0
     a10:	a3 01       	movw	r20, r6
     a12:	ca d3       	rcall	.+1940   	; 0x11a8 <__ultoa_invert>
     a14:	c8 2e       	mov	r12, r24
     a16:	c6 18       	sub	r12, r6
     a18:	3e c0       	rjmp	.+124    	; 0xa96 <__stack+0x237>
     a1a:	09 2d       	mov	r16, r9
     a1c:	85 37       	cpi	r24, 0x75	; 117
     a1e:	21 f4       	brne	.+8      	; 0xa28 <__stack+0x1c9>
     a20:	0f 7e       	andi	r16, 0xEF	; 239
     a22:	2a e0       	ldi	r18, 0x0A	; 10
     a24:	30 e0       	ldi	r19, 0x00	; 0
     a26:	1d c0       	rjmp	.+58     	; 0xa62 <__stack+0x203>
     a28:	09 7f       	andi	r16, 0xF9	; 249
     a2a:	8f 36       	cpi	r24, 0x6F	; 111
     a2c:	91 f0       	breq	.+36     	; 0xa52 <__stack+0x1f3>
     a2e:	18 f4       	brcc	.+6      	; 0xa36 <__stack+0x1d7>
     a30:	88 35       	cpi	r24, 0x58	; 88
     a32:	59 f0       	breq	.+22     	; 0xa4a <__stack+0x1eb>
     a34:	bc c0       	rjmp	.+376    	; 0xbae <__stack+0x34f>
     a36:	80 37       	cpi	r24, 0x70	; 112
     a38:	19 f0       	breq	.+6      	; 0xa40 <__stack+0x1e1>
     a3a:	88 37       	cpi	r24, 0x78	; 120
     a3c:	11 f0       	breq	.+4      	; 0xa42 <__stack+0x1e3>
     a3e:	b7 c0       	rjmp	.+366    	; 0xbae <__stack+0x34f>
     a40:	00 61       	ori	r16, 0x10	; 16
     a42:	04 ff       	sbrs	r16, 4
     a44:	09 c0       	rjmp	.+18     	; 0xa58 <__stack+0x1f9>
     a46:	04 60       	ori	r16, 0x04	; 4
     a48:	07 c0       	rjmp	.+14     	; 0xa58 <__stack+0x1f9>
     a4a:	94 fe       	sbrs	r9, 4
     a4c:	08 c0       	rjmp	.+16     	; 0xa5e <__stack+0x1ff>
     a4e:	06 60       	ori	r16, 0x06	; 6
     a50:	06 c0       	rjmp	.+12     	; 0xa5e <__stack+0x1ff>
     a52:	28 e0       	ldi	r18, 0x08	; 8
     a54:	30 e0       	ldi	r19, 0x00	; 0
     a56:	05 c0       	rjmp	.+10     	; 0xa62 <__stack+0x203>
     a58:	20 e1       	ldi	r18, 0x10	; 16
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	02 c0       	rjmp	.+4      	; 0xa62 <__stack+0x203>
     a5e:	20 e1       	ldi	r18, 0x10	; 16
     a60:	32 e0       	ldi	r19, 0x02	; 2
     a62:	56 01       	movw	r10, r12
     a64:	07 ff       	sbrs	r16, 7
     a66:	09 c0       	rjmp	.+18     	; 0xa7a <__stack+0x21b>
     a68:	84 e0       	ldi	r24, 0x04	; 4
     a6a:	a8 0e       	add	r10, r24
     a6c:	b1 1c       	adc	r11, r1
     a6e:	f6 01       	movw	r30, r12
     a70:	60 81       	ld	r22, Z
     a72:	71 81       	ldd	r23, Z+1	; 0x01
     a74:	82 81       	ldd	r24, Z+2	; 0x02
     a76:	93 81       	ldd	r25, Z+3	; 0x03
     a78:	08 c0       	rjmp	.+16     	; 0xa8a <__stack+0x22b>
     a7a:	f2 e0       	ldi	r31, 0x02	; 2
     a7c:	af 0e       	add	r10, r31
     a7e:	b1 1c       	adc	r11, r1
     a80:	f6 01       	movw	r30, r12
     a82:	60 81       	ld	r22, Z
     a84:	71 81       	ldd	r23, Z+1	; 0x01
     a86:	80 e0       	ldi	r24, 0x00	; 0
     a88:	90 e0       	ldi	r25, 0x00	; 0
     a8a:	a3 01       	movw	r20, r6
     a8c:	8d d3       	rcall	.+1818   	; 0x11a8 <__ultoa_invert>
     a8e:	c8 2e       	mov	r12, r24
     a90:	c6 18       	sub	r12, r6
     a92:	0f 77       	andi	r16, 0x7F	; 127
     a94:	90 2e       	mov	r9, r16
     a96:	96 fe       	sbrs	r9, 6
     a98:	0b c0       	rjmp	.+22     	; 0xab0 <__stack+0x251>
     a9a:	09 2d       	mov	r16, r9
     a9c:	0e 7f       	andi	r16, 0xFE	; 254
     a9e:	c1 16       	cp	r12, r17
     aa0:	50 f4       	brcc	.+20     	; 0xab6 <__stack+0x257>
     aa2:	94 fe       	sbrs	r9, 4
     aa4:	0a c0       	rjmp	.+20     	; 0xaba <__stack+0x25b>
     aa6:	92 fc       	sbrc	r9, 2
     aa8:	08 c0       	rjmp	.+16     	; 0xaba <__stack+0x25b>
     aaa:	09 2d       	mov	r16, r9
     aac:	0e 7e       	andi	r16, 0xEE	; 238
     aae:	05 c0       	rjmp	.+10     	; 0xaba <__stack+0x25b>
     ab0:	dc 2c       	mov	r13, r12
     ab2:	09 2d       	mov	r16, r9
     ab4:	03 c0       	rjmp	.+6      	; 0xabc <__stack+0x25d>
     ab6:	dc 2c       	mov	r13, r12
     ab8:	01 c0       	rjmp	.+2      	; 0xabc <__stack+0x25d>
     aba:	d1 2e       	mov	r13, r17
     abc:	04 ff       	sbrs	r16, 4
     abe:	0d c0       	rjmp	.+26     	; 0xada <__stack+0x27b>
     ac0:	fe 01       	movw	r30, r28
     ac2:	ec 0d       	add	r30, r12
     ac4:	f1 1d       	adc	r31, r1
     ac6:	80 81       	ld	r24, Z
     ac8:	80 33       	cpi	r24, 0x30	; 48
     aca:	11 f4       	brne	.+4      	; 0xad0 <__stack+0x271>
     acc:	09 7e       	andi	r16, 0xE9	; 233
     ace:	09 c0       	rjmp	.+18     	; 0xae2 <__stack+0x283>
     ad0:	02 ff       	sbrs	r16, 2
     ad2:	06 c0       	rjmp	.+12     	; 0xae0 <__stack+0x281>
     ad4:	d3 94       	inc	r13
     ad6:	d3 94       	inc	r13
     ad8:	04 c0       	rjmp	.+8      	; 0xae2 <__stack+0x283>
     ada:	80 2f       	mov	r24, r16
     adc:	86 78       	andi	r24, 0x86	; 134
     ade:	09 f0       	breq	.+2      	; 0xae2 <__stack+0x283>
     ae0:	d3 94       	inc	r13
     ae2:	03 fd       	sbrc	r16, 3
     ae4:	10 c0       	rjmp	.+32     	; 0xb06 <__stack+0x2a7>
     ae6:	00 ff       	sbrs	r16, 0
     ae8:	06 c0       	rjmp	.+12     	; 0xaf6 <__stack+0x297>
     aea:	1c 2d       	mov	r17, r12
     aec:	d5 14       	cp	r13, r5
     aee:	78 f4       	brcc	.+30     	; 0xb0e <__stack+0x2af>
     af0:	15 0d       	add	r17, r5
     af2:	1d 19       	sub	r17, r13
     af4:	0c c0       	rjmp	.+24     	; 0xb0e <__stack+0x2af>
     af6:	d5 14       	cp	r13, r5
     af8:	50 f4       	brcc	.+20     	; 0xb0e <__stack+0x2af>
     afa:	b7 01       	movw	r22, r14
     afc:	80 e2       	ldi	r24, 0x20	; 32
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	fe d2       	rcall	.+1532   	; 0x10fe <fputc>
     b02:	d3 94       	inc	r13
     b04:	f8 cf       	rjmp	.-16     	; 0xaf6 <__stack+0x297>
     b06:	d5 14       	cp	r13, r5
     b08:	10 f4       	brcc	.+4      	; 0xb0e <__stack+0x2af>
     b0a:	5d 18       	sub	r5, r13
     b0c:	01 c0       	rjmp	.+2      	; 0xb10 <__stack+0x2b1>
     b0e:	51 2c       	mov	r5, r1
     b10:	04 ff       	sbrs	r16, 4
     b12:	0f c0       	rjmp	.+30     	; 0xb32 <__stack+0x2d3>
     b14:	b7 01       	movw	r22, r14
     b16:	80 e3       	ldi	r24, 0x30	; 48
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	f1 d2       	rcall	.+1506   	; 0x10fe <fputc>
     b1c:	02 ff       	sbrs	r16, 2
     b1e:	16 c0       	rjmp	.+44     	; 0xb4c <__stack+0x2ed>
     b20:	01 fd       	sbrc	r16, 1
     b22:	03 c0       	rjmp	.+6      	; 0xb2a <__stack+0x2cb>
     b24:	88 e7       	ldi	r24, 0x78	; 120
     b26:	90 e0       	ldi	r25, 0x00	; 0
     b28:	02 c0       	rjmp	.+4      	; 0xb2e <__stack+0x2cf>
     b2a:	88 e5       	ldi	r24, 0x58	; 88
     b2c:	90 e0       	ldi	r25, 0x00	; 0
     b2e:	b7 01       	movw	r22, r14
     b30:	0c c0       	rjmp	.+24     	; 0xb4a <__stack+0x2eb>
     b32:	80 2f       	mov	r24, r16
     b34:	86 78       	andi	r24, 0x86	; 134
     b36:	51 f0       	breq	.+20     	; 0xb4c <__stack+0x2ed>
     b38:	01 ff       	sbrs	r16, 1
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__stack+0x2e1>
     b3c:	8b e2       	ldi	r24, 0x2B	; 43
     b3e:	01 c0       	rjmp	.+2      	; 0xb42 <__stack+0x2e3>
     b40:	80 e2       	ldi	r24, 0x20	; 32
     b42:	07 fd       	sbrc	r16, 7
     b44:	8d e2       	ldi	r24, 0x2D	; 45
     b46:	b7 01       	movw	r22, r14
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	d9 d2       	rcall	.+1458   	; 0x10fe <fputc>
     b4c:	c1 16       	cp	r12, r17
     b4e:	30 f4       	brcc	.+12     	; 0xb5c <__stack+0x2fd>
     b50:	b7 01       	movw	r22, r14
     b52:	80 e3       	ldi	r24, 0x30	; 48
     b54:	90 e0       	ldi	r25, 0x00	; 0
     b56:	d3 d2       	rcall	.+1446   	; 0x10fe <fputc>
     b58:	11 50       	subi	r17, 0x01	; 1
     b5a:	f8 cf       	rjmp	.-16     	; 0xb4c <__stack+0x2ed>
     b5c:	ca 94       	dec	r12
     b5e:	f3 01       	movw	r30, r6
     b60:	ec 0d       	add	r30, r12
     b62:	f1 1d       	adc	r31, r1
     b64:	80 81       	ld	r24, Z
     b66:	b7 01       	movw	r22, r14
     b68:	90 e0       	ldi	r25, 0x00	; 0
     b6a:	c9 d2       	rcall	.+1426   	; 0x10fe <fputc>
     b6c:	c1 10       	cpse	r12, r1
     b6e:	f6 cf       	rjmp	.-20     	; 0xb5c <__stack+0x2fd>
     b70:	15 c0       	rjmp	.+42     	; 0xb9c <__stack+0x33d>
     b72:	f4 e0       	ldi	r31, 0x04	; 4
     b74:	f5 15       	cp	r31, r5
     b76:	50 f5       	brcc	.+84     	; 0xbcc <__stack+0x36d>
     b78:	84 e0       	ldi	r24, 0x04	; 4
     b7a:	58 1a       	sub	r5, r24
     b7c:	93 fe       	sbrs	r9, 3
     b7e:	1e c0       	rjmp	.+60     	; 0xbbc <__stack+0x35d>
     b80:	01 11       	cpse	r16, r1
     b82:	25 c0       	rjmp	.+74     	; 0xbce <__stack+0x36f>
     b84:	2c 85       	ldd	r18, Y+12	; 0x0c
     b86:	23 ff       	sbrs	r18, 3
     b88:	27 c0       	rjmp	.+78     	; 0xbd8 <__stack+0x379>
     b8a:	04 e5       	ldi	r16, 0x54	; 84
     b8c:	10 e0       	ldi	r17, 0x00	; 0
     b8e:	39 2d       	mov	r19, r9
     b90:	30 71       	andi	r19, 0x10	; 16
     b92:	93 2e       	mov	r9, r19
     b94:	f8 01       	movw	r30, r16
     b96:	84 91       	lpm	r24, Z
     b98:	81 11       	cpse	r24, r1
     b9a:	21 c0       	rjmp	.+66     	; 0xbde <__stack+0x37f>
     b9c:	55 20       	and	r5, r5
     b9e:	09 f4       	brne	.+2      	; 0xba2 <__stack+0x343>
     ba0:	fc cc       	rjmp	.-1544   	; 0x59a <vfprintf+0x54>
     ba2:	b7 01       	movw	r22, r14
     ba4:	80 e2       	ldi	r24, 0x20	; 32
     ba6:	90 e0       	ldi	r25, 0x00	; 0
     ba8:	aa d2       	rcall	.+1364   	; 0x10fe <fputc>
     baa:	5a 94       	dec	r5
     bac:	f7 cf       	rjmp	.-18     	; 0xb9c <__stack+0x33d>
     bae:	f7 01       	movw	r30, r14
     bb0:	86 81       	ldd	r24, Z+6	; 0x06
     bb2:	97 81       	ldd	r25, Z+7	; 0x07
     bb4:	23 c0       	rjmp	.+70     	; 0xbfc <__stack+0x39d>
     bb6:	8f ef       	ldi	r24, 0xFF	; 255
     bb8:	9f ef       	ldi	r25, 0xFF	; 255
     bba:	20 c0       	rjmp	.+64     	; 0xbfc <__stack+0x39d>
     bbc:	b7 01       	movw	r22, r14
     bbe:	80 e2       	ldi	r24, 0x20	; 32
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	9d d2       	rcall	.+1338   	; 0x10fe <fputc>
     bc4:	5a 94       	dec	r5
     bc6:	51 10       	cpse	r5, r1
     bc8:	f9 cf       	rjmp	.-14     	; 0xbbc <__stack+0x35d>
     bca:	da cf       	rjmp	.-76     	; 0xb80 <__stack+0x321>
     bcc:	51 2c       	mov	r5, r1
     bce:	b7 01       	movw	r22, r14
     bd0:	80 2f       	mov	r24, r16
     bd2:	90 e0       	ldi	r25, 0x00	; 0
     bd4:	94 d2       	rcall	.+1320   	; 0x10fe <fputc>
     bd6:	d6 cf       	rjmp	.-84     	; 0xb84 <__stack+0x325>
     bd8:	08 e5       	ldi	r16, 0x58	; 88
     bda:	10 e0       	ldi	r17, 0x00	; 0
     bdc:	d8 cf       	rjmp	.-80     	; 0xb8e <__stack+0x32f>
     bde:	91 10       	cpse	r9, r1
     be0:	80 52       	subi	r24, 0x20	; 32
     be2:	b7 01       	movw	r22, r14
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	8b d2       	rcall	.+1302   	; 0x10fe <fputc>
     be8:	0f 5f       	subi	r16, 0xFF	; 255
     bea:	1f 4f       	sbci	r17, 0xFF	; 255
     bec:	d3 cf       	rjmp	.-90     	; 0xb94 <__stack+0x335>
     bee:	23 e0       	ldi	r18, 0x03	; 3
     bf0:	25 15       	cp	r18, r5
     bf2:	10 f4       	brcc	.+4      	; 0xbf8 <__stack+0x399>
     bf4:	83 e0       	ldi	r24, 0x03	; 3
     bf6:	c1 cf       	rjmp	.-126    	; 0xb7a <__stack+0x31b>
     bf8:	51 2c       	mov	r5, r1
     bfa:	c4 cf       	rjmp	.-120    	; 0xb84 <__stack+0x325>
     bfc:	60 96       	adiw	r28, 0x10	; 16
     bfe:	e2 e1       	ldi	r30, 0x12	; 18
     c00:	75 c1       	rjmp	.+746    	; 0xeec <__epilogue_restores__>

00000c02 <__divsf3>:
     c02:	0c d0       	rcall	.+24     	; 0xc1c <__divsf3x>
     c04:	ba c0       	rjmp	.+372    	; 0xd7a <__fp_round>
     c06:	b2 d0       	rcall	.+356    	; 0xd6c <__fp_pscB>
     c08:	40 f0       	brcs	.+16     	; 0xc1a <__divsf3+0x18>
     c0a:	a9 d0       	rcall	.+338    	; 0xd5e <__fp_pscA>
     c0c:	30 f0       	brcs	.+12     	; 0xc1a <__divsf3+0x18>
     c0e:	21 f4       	brne	.+8      	; 0xc18 <__divsf3+0x16>
     c10:	5f 3f       	cpi	r21, 0xFF	; 255
     c12:	19 f0       	breq	.+6      	; 0xc1a <__divsf3+0x18>
     c14:	9b c0       	rjmp	.+310    	; 0xd4c <__fp_inf>
     c16:	51 11       	cpse	r21, r1
     c18:	e4 c0       	rjmp	.+456    	; 0xde2 <__fp_szero>
     c1a:	9e c0       	rjmp	.+316    	; 0xd58 <__fp_nan>

00000c1c <__divsf3x>:
     c1c:	bf d0       	rcall	.+382    	; 0xd9c <__fp_split3>
     c1e:	98 f3       	brcs	.-26     	; 0xc06 <__divsf3+0x4>

00000c20 <__divsf3_pse>:
     c20:	99 23       	and	r25, r25
     c22:	c9 f3       	breq	.-14     	; 0xc16 <__divsf3+0x14>
     c24:	55 23       	and	r21, r21
     c26:	b1 f3       	breq	.-20     	; 0xc14 <__divsf3+0x12>
     c28:	95 1b       	sub	r25, r21
     c2a:	55 0b       	sbc	r21, r21
     c2c:	bb 27       	eor	r27, r27
     c2e:	aa 27       	eor	r26, r26
     c30:	62 17       	cp	r22, r18
     c32:	73 07       	cpc	r23, r19
     c34:	84 07       	cpc	r24, r20
     c36:	38 f0       	brcs	.+14     	; 0xc46 <__divsf3_pse+0x26>
     c38:	9f 5f       	subi	r25, 0xFF	; 255
     c3a:	5f 4f       	sbci	r21, 0xFF	; 255
     c3c:	22 0f       	add	r18, r18
     c3e:	33 1f       	adc	r19, r19
     c40:	44 1f       	adc	r20, r20
     c42:	aa 1f       	adc	r26, r26
     c44:	a9 f3       	breq	.-22     	; 0xc30 <__divsf3_pse+0x10>
     c46:	33 d0       	rcall	.+102    	; 0xcae <__divsf3_pse+0x8e>
     c48:	0e 2e       	mov	r0, r30
     c4a:	3a f0       	brmi	.+14     	; 0xc5a <__divsf3_pse+0x3a>
     c4c:	e0 e8       	ldi	r30, 0x80	; 128
     c4e:	30 d0       	rcall	.+96     	; 0xcb0 <__divsf3_pse+0x90>
     c50:	91 50       	subi	r25, 0x01	; 1
     c52:	50 40       	sbci	r21, 0x00	; 0
     c54:	e6 95       	lsr	r30
     c56:	00 1c       	adc	r0, r0
     c58:	ca f7       	brpl	.-14     	; 0xc4c <__divsf3_pse+0x2c>
     c5a:	29 d0       	rcall	.+82     	; 0xcae <__divsf3_pse+0x8e>
     c5c:	fe 2f       	mov	r31, r30
     c5e:	27 d0       	rcall	.+78     	; 0xcae <__divsf3_pse+0x8e>
     c60:	66 0f       	add	r22, r22
     c62:	77 1f       	adc	r23, r23
     c64:	88 1f       	adc	r24, r24
     c66:	bb 1f       	adc	r27, r27
     c68:	26 17       	cp	r18, r22
     c6a:	37 07       	cpc	r19, r23
     c6c:	48 07       	cpc	r20, r24
     c6e:	ab 07       	cpc	r26, r27
     c70:	b0 e8       	ldi	r27, 0x80	; 128
     c72:	09 f0       	breq	.+2      	; 0xc76 <__divsf3_pse+0x56>
     c74:	bb 0b       	sbc	r27, r27
     c76:	80 2d       	mov	r24, r0
     c78:	bf 01       	movw	r22, r30
     c7a:	ff 27       	eor	r31, r31
     c7c:	93 58       	subi	r25, 0x83	; 131
     c7e:	5f 4f       	sbci	r21, 0xFF	; 255
     c80:	2a f0       	brmi	.+10     	; 0xc8c <__divsf3_pse+0x6c>
     c82:	9e 3f       	cpi	r25, 0xFE	; 254
     c84:	51 05       	cpc	r21, r1
     c86:	68 f0       	brcs	.+26     	; 0xca2 <__divsf3_pse+0x82>
     c88:	61 c0       	rjmp	.+194    	; 0xd4c <__fp_inf>
     c8a:	ab c0       	rjmp	.+342    	; 0xde2 <__fp_szero>
     c8c:	5f 3f       	cpi	r21, 0xFF	; 255
     c8e:	ec f3       	brlt	.-6      	; 0xc8a <__divsf3_pse+0x6a>
     c90:	98 3e       	cpi	r25, 0xE8	; 232
     c92:	dc f3       	brlt	.-10     	; 0xc8a <__divsf3_pse+0x6a>
     c94:	86 95       	lsr	r24
     c96:	77 95       	ror	r23
     c98:	67 95       	ror	r22
     c9a:	b7 95       	ror	r27
     c9c:	f7 95       	ror	r31
     c9e:	9f 5f       	subi	r25, 0xFF	; 255
     ca0:	c9 f7       	brne	.-14     	; 0xc94 <__divsf3_pse+0x74>
     ca2:	88 0f       	add	r24, r24
     ca4:	91 1d       	adc	r25, r1
     ca6:	96 95       	lsr	r25
     ca8:	87 95       	ror	r24
     caa:	97 f9       	bld	r25, 7
     cac:	08 95       	ret
     cae:	e1 e0       	ldi	r30, 0x01	; 1
     cb0:	66 0f       	add	r22, r22
     cb2:	77 1f       	adc	r23, r23
     cb4:	88 1f       	adc	r24, r24
     cb6:	bb 1f       	adc	r27, r27
     cb8:	62 17       	cp	r22, r18
     cba:	73 07       	cpc	r23, r19
     cbc:	84 07       	cpc	r24, r20
     cbe:	ba 07       	cpc	r27, r26
     cc0:	20 f0       	brcs	.+8      	; 0xcca <__divsf3_pse+0xaa>
     cc2:	62 1b       	sub	r22, r18
     cc4:	73 0b       	sbc	r23, r19
     cc6:	84 0b       	sbc	r24, r20
     cc8:	ba 0b       	sbc	r27, r26
     cca:	ee 1f       	adc	r30, r30
     ccc:	88 f7       	brcc	.-30     	; 0xcb0 <__divsf3_pse+0x90>
     cce:	e0 95       	com	r30
     cd0:	08 95       	ret

00000cd2 <__floatunsisf>:
     cd2:	e8 94       	clt
     cd4:	09 c0       	rjmp	.+18     	; 0xce8 <__floatsisf+0x12>

00000cd6 <__floatsisf>:
     cd6:	97 fb       	bst	r25, 7
     cd8:	3e f4       	brtc	.+14     	; 0xce8 <__floatsisf+0x12>
     cda:	90 95       	com	r25
     cdc:	80 95       	com	r24
     cde:	70 95       	com	r23
     ce0:	61 95       	neg	r22
     ce2:	7f 4f       	sbci	r23, 0xFF	; 255
     ce4:	8f 4f       	sbci	r24, 0xFF	; 255
     ce6:	9f 4f       	sbci	r25, 0xFF	; 255
     ce8:	99 23       	and	r25, r25
     cea:	a9 f0       	breq	.+42     	; 0xd16 <__floatsisf+0x40>
     cec:	f9 2f       	mov	r31, r25
     cee:	96 e9       	ldi	r25, 0x96	; 150
     cf0:	bb 27       	eor	r27, r27
     cf2:	93 95       	inc	r25
     cf4:	f6 95       	lsr	r31
     cf6:	87 95       	ror	r24
     cf8:	77 95       	ror	r23
     cfa:	67 95       	ror	r22
     cfc:	b7 95       	ror	r27
     cfe:	f1 11       	cpse	r31, r1
     d00:	f8 cf       	rjmp	.-16     	; 0xcf2 <__floatsisf+0x1c>
     d02:	fa f4       	brpl	.+62     	; 0xd42 <__floatsisf+0x6c>
     d04:	bb 0f       	add	r27, r27
     d06:	11 f4       	brne	.+4      	; 0xd0c <__floatsisf+0x36>
     d08:	60 ff       	sbrs	r22, 0
     d0a:	1b c0       	rjmp	.+54     	; 0xd42 <__floatsisf+0x6c>
     d0c:	6f 5f       	subi	r22, 0xFF	; 255
     d0e:	7f 4f       	sbci	r23, 0xFF	; 255
     d10:	8f 4f       	sbci	r24, 0xFF	; 255
     d12:	9f 4f       	sbci	r25, 0xFF	; 255
     d14:	16 c0       	rjmp	.+44     	; 0xd42 <__floatsisf+0x6c>
     d16:	88 23       	and	r24, r24
     d18:	11 f0       	breq	.+4      	; 0xd1e <__floatsisf+0x48>
     d1a:	96 e9       	ldi	r25, 0x96	; 150
     d1c:	11 c0       	rjmp	.+34     	; 0xd40 <__floatsisf+0x6a>
     d1e:	77 23       	and	r23, r23
     d20:	21 f0       	breq	.+8      	; 0xd2a <__floatsisf+0x54>
     d22:	9e e8       	ldi	r25, 0x8E	; 142
     d24:	87 2f       	mov	r24, r23
     d26:	76 2f       	mov	r23, r22
     d28:	05 c0       	rjmp	.+10     	; 0xd34 <__floatsisf+0x5e>
     d2a:	66 23       	and	r22, r22
     d2c:	71 f0       	breq	.+28     	; 0xd4a <__floatsisf+0x74>
     d2e:	96 e8       	ldi	r25, 0x86	; 134
     d30:	86 2f       	mov	r24, r22
     d32:	70 e0       	ldi	r23, 0x00	; 0
     d34:	60 e0       	ldi	r22, 0x00	; 0
     d36:	2a f0       	brmi	.+10     	; 0xd42 <__floatsisf+0x6c>
     d38:	9a 95       	dec	r25
     d3a:	66 0f       	add	r22, r22
     d3c:	77 1f       	adc	r23, r23
     d3e:	88 1f       	adc	r24, r24
     d40:	da f7       	brpl	.-10     	; 0xd38 <__floatsisf+0x62>
     d42:	88 0f       	add	r24, r24
     d44:	96 95       	lsr	r25
     d46:	87 95       	ror	r24
     d48:	97 f9       	bld	r25, 7
     d4a:	08 95       	ret

00000d4c <__fp_inf>:
     d4c:	97 f9       	bld	r25, 7
     d4e:	9f 67       	ori	r25, 0x7F	; 127
     d50:	80 e8       	ldi	r24, 0x80	; 128
     d52:	70 e0       	ldi	r23, 0x00	; 0
     d54:	60 e0       	ldi	r22, 0x00	; 0
     d56:	08 95       	ret

00000d58 <__fp_nan>:
     d58:	9f ef       	ldi	r25, 0xFF	; 255
     d5a:	80 ec       	ldi	r24, 0xC0	; 192
     d5c:	08 95       	ret

00000d5e <__fp_pscA>:
     d5e:	00 24       	eor	r0, r0
     d60:	0a 94       	dec	r0
     d62:	16 16       	cp	r1, r22
     d64:	17 06       	cpc	r1, r23
     d66:	18 06       	cpc	r1, r24
     d68:	09 06       	cpc	r0, r25
     d6a:	08 95       	ret

00000d6c <__fp_pscB>:
     d6c:	00 24       	eor	r0, r0
     d6e:	0a 94       	dec	r0
     d70:	12 16       	cp	r1, r18
     d72:	13 06       	cpc	r1, r19
     d74:	14 06       	cpc	r1, r20
     d76:	05 06       	cpc	r0, r21
     d78:	08 95       	ret

00000d7a <__fp_round>:
     d7a:	09 2e       	mov	r0, r25
     d7c:	03 94       	inc	r0
     d7e:	00 0c       	add	r0, r0
     d80:	11 f4       	brne	.+4      	; 0xd86 <__fp_round+0xc>
     d82:	88 23       	and	r24, r24
     d84:	52 f0       	brmi	.+20     	; 0xd9a <__fp_round+0x20>
     d86:	bb 0f       	add	r27, r27
     d88:	40 f4       	brcc	.+16     	; 0xd9a <__fp_round+0x20>
     d8a:	bf 2b       	or	r27, r31
     d8c:	11 f4       	brne	.+4      	; 0xd92 <__fp_round+0x18>
     d8e:	60 ff       	sbrs	r22, 0
     d90:	04 c0       	rjmp	.+8      	; 0xd9a <__fp_round+0x20>
     d92:	6f 5f       	subi	r22, 0xFF	; 255
     d94:	7f 4f       	sbci	r23, 0xFF	; 255
     d96:	8f 4f       	sbci	r24, 0xFF	; 255
     d98:	9f 4f       	sbci	r25, 0xFF	; 255
     d9a:	08 95       	ret

00000d9c <__fp_split3>:
     d9c:	57 fd       	sbrc	r21, 7
     d9e:	90 58       	subi	r25, 0x80	; 128
     da0:	44 0f       	add	r20, r20
     da2:	55 1f       	adc	r21, r21
     da4:	59 f0       	breq	.+22     	; 0xdbc <__fp_splitA+0x10>
     da6:	5f 3f       	cpi	r21, 0xFF	; 255
     da8:	71 f0       	breq	.+28     	; 0xdc6 <__fp_splitA+0x1a>
     daa:	47 95       	ror	r20

00000dac <__fp_splitA>:
     dac:	88 0f       	add	r24, r24
     dae:	97 fb       	bst	r25, 7
     db0:	99 1f       	adc	r25, r25
     db2:	61 f0       	breq	.+24     	; 0xdcc <__fp_splitA+0x20>
     db4:	9f 3f       	cpi	r25, 0xFF	; 255
     db6:	79 f0       	breq	.+30     	; 0xdd6 <__fp_splitA+0x2a>
     db8:	87 95       	ror	r24
     dba:	08 95       	ret
     dbc:	12 16       	cp	r1, r18
     dbe:	13 06       	cpc	r1, r19
     dc0:	14 06       	cpc	r1, r20
     dc2:	55 1f       	adc	r21, r21
     dc4:	f2 cf       	rjmp	.-28     	; 0xdaa <__fp_split3+0xe>
     dc6:	46 95       	lsr	r20
     dc8:	f1 df       	rcall	.-30     	; 0xdac <__fp_splitA>
     dca:	08 c0       	rjmp	.+16     	; 0xddc <__fp_splitA+0x30>
     dcc:	16 16       	cp	r1, r22
     dce:	17 06       	cpc	r1, r23
     dd0:	18 06       	cpc	r1, r24
     dd2:	99 1f       	adc	r25, r25
     dd4:	f1 cf       	rjmp	.-30     	; 0xdb8 <__fp_splitA+0xc>
     dd6:	86 95       	lsr	r24
     dd8:	71 05       	cpc	r23, r1
     dda:	61 05       	cpc	r22, r1
     ddc:	08 94       	sec
     dde:	08 95       	ret

00000de0 <__fp_zero>:
     de0:	e8 94       	clt

00000de2 <__fp_szero>:
     de2:	bb 27       	eor	r27, r27
     de4:	66 27       	eor	r22, r22
     de6:	77 27       	eor	r23, r23
     de8:	cb 01       	movw	r24, r22
     dea:	97 f9       	bld	r25, 7
     dec:	08 95       	ret

00000dee <__mulsf3>:
     dee:	0b d0       	rcall	.+22     	; 0xe06 <__mulsf3x>
     df0:	c4 cf       	rjmp	.-120    	; 0xd7a <__fp_round>
     df2:	b5 df       	rcall	.-150    	; 0xd5e <__fp_pscA>
     df4:	28 f0       	brcs	.+10     	; 0xe00 <__mulsf3+0x12>
     df6:	ba df       	rcall	.-140    	; 0xd6c <__fp_pscB>
     df8:	18 f0       	brcs	.+6      	; 0xe00 <__mulsf3+0x12>
     dfa:	95 23       	and	r25, r21
     dfc:	09 f0       	breq	.+2      	; 0xe00 <__mulsf3+0x12>
     dfe:	a6 cf       	rjmp	.-180    	; 0xd4c <__fp_inf>
     e00:	ab cf       	rjmp	.-170    	; 0xd58 <__fp_nan>
     e02:	11 24       	eor	r1, r1
     e04:	ee cf       	rjmp	.-36     	; 0xde2 <__fp_szero>

00000e06 <__mulsf3x>:
     e06:	ca df       	rcall	.-108    	; 0xd9c <__fp_split3>
     e08:	a0 f3       	brcs	.-24     	; 0xdf2 <__mulsf3+0x4>

00000e0a <__mulsf3_pse>:
     e0a:	95 9f       	mul	r25, r21
     e0c:	d1 f3       	breq	.-12     	; 0xe02 <__mulsf3+0x14>
     e0e:	95 0f       	add	r25, r21
     e10:	50 e0       	ldi	r21, 0x00	; 0
     e12:	55 1f       	adc	r21, r21
     e14:	62 9f       	mul	r22, r18
     e16:	f0 01       	movw	r30, r0
     e18:	72 9f       	mul	r23, r18
     e1a:	bb 27       	eor	r27, r27
     e1c:	f0 0d       	add	r31, r0
     e1e:	b1 1d       	adc	r27, r1
     e20:	63 9f       	mul	r22, r19
     e22:	aa 27       	eor	r26, r26
     e24:	f0 0d       	add	r31, r0
     e26:	b1 1d       	adc	r27, r1
     e28:	aa 1f       	adc	r26, r26
     e2a:	64 9f       	mul	r22, r20
     e2c:	66 27       	eor	r22, r22
     e2e:	b0 0d       	add	r27, r0
     e30:	a1 1d       	adc	r26, r1
     e32:	66 1f       	adc	r22, r22
     e34:	82 9f       	mul	r24, r18
     e36:	22 27       	eor	r18, r18
     e38:	b0 0d       	add	r27, r0
     e3a:	a1 1d       	adc	r26, r1
     e3c:	62 1f       	adc	r22, r18
     e3e:	73 9f       	mul	r23, r19
     e40:	b0 0d       	add	r27, r0
     e42:	a1 1d       	adc	r26, r1
     e44:	62 1f       	adc	r22, r18
     e46:	83 9f       	mul	r24, r19
     e48:	a0 0d       	add	r26, r0
     e4a:	61 1d       	adc	r22, r1
     e4c:	22 1f       	adc	r18, r18
     e4e:	74 9f       	mul	r23, r20
     e50:	33 27       	eor	r19, r19
     e52:	a0 0d       	add	r26, r0
     e54:	61 1d       	adc	r22, r1
     e56:	23 1f       	adc	r18, r19
     e58:	84 9f       	mul	r24, r20
     e5a:	60 0d       	add	r22, r0
     e5c:	21 1d       	adc	r18, r1
     e5e:	82 2f       	mov	r24, r18
     e60:	76 2f       	mov	r23, r22
     e62:	6a 2f       	mov	r22, r26
     e64:	11 24       	eor	r1, r1
     e66:	9f 57       	subi	r25, 0x7F	; 127
     e68:	50 40       	sbci	r21, 0x00	; 0
     e6a:	8a f0       	brmi	.+34     	; 0xe8e <__mulsf3_pse+0x84>
     e6c:	e1 f0       	breq	.+56     	; 0xea6 <__mulsf3_pse+0x9c>
     e6e:	88 23       	and	r24, r24
     e70:	4a f0       	brmi	.+18     	; 0xe84 <__mulsf3_pse+0x7a>
     e72:	ee 0f       	add	r30, r30
     e74:	ff 1f       	adc	r31, r31
     e76:	bb 1f       	adc	r27, r27
     e78:	66 1f       	adc	r22, r22
     e7a:	77 1f       	adc	r23, r23
     e7c:	88 1f       	adc	r24, r24
     e7e:	91 50       	subi	r25, 0x01	; 1
     e80:	50 40       	sbci	r21, 0x00	; 0
     e82:	a9 f7       	brne	.-22     	; 0xe6e <__mulsf3_pse+0x64>
     e84:	9e 3f       	cpi	r25, 0xFE	; 254
     e86:	51 05       	cpc	r21, r1
     e88:	70 f0       	brcs	.+28     	; 0xea6 <__mulsf3_pse+0x9c>
     e8a:	60 cf       	rjmp	.-320    	; 0xd4c <__fp_inf>
     e8c:	aa cf       	rjmp	.-172    	; 0xde2 <__fp_szero>
     e8e:	5f 3f       	cpi	r21, 0xFF	; 255
     e90:	ec f3       	brlt	.-6      	; 0xe8c <__mulsf3_pse+0x82>
     e92:	98 3e       	cpi	r25, 0xE8	; 232
     e94:	dc f3       	brlt	.-10     	; 0xe8c <__mulsf3_pse+0x82>
     e96:	86 95       	lsr	r24
     e98:	77 95       	ror	r23
     e9a:	67 95       	ror	r22
     e9c:	b7 95       	ror	r27
     e9e:	f7 95       	ror	r31
     ea0:	e7 95       	ror	r30
     ea2:	9f 5f       	subi	r25, 0xFF	; 255
     ea4:	c1 f7       	brne	.-16     	; 0xe96 <__mulsf3_pse+0x8c>
     ea6:	fe 2b       	or	r31, r30
     ea8:	88 0f       	add	r24, r24
     eaa:	91 1d       	adc	r25, r1
     eac:	96 95       	lsr	r25
     eae:	87 95       	ror	r24
     eb0:	97 f9       	bld	r25, 7
     eb2:	08 95       	ret

00000eb4 <__prologue_saves__>:
     eb4:	2f 92       	push	r2
     eb6:	3f 92       	push	r3
     eb8:	4f 92       	push	r4
     eba:	5f 92       	push	r5
     ebc:	6f 92       	push	r6
     ebe:	7f 92       	push	r7
     ec0:	8f 92       	push	r8
     ec2:	9f 92       	push	r9
     ec4:	af 92       	push	r10
     ec6:	bf 92       	push	r11
     ec8:	cf 92       	push	r12
     eca:	df 92       	push	r13
     ecc:	ef 92       	push	r14
     ece:	ff 92       	push	r15
     ed0:	0f 93       	push	r16
     ed2:	1f 93       	push	r17
     ed4:	cf 93       	push	r28
     ed6:	df 93       	push	r29
     ed8:	cd b7       	in	r28, 0x3d	; 61
     eda:	de b7       	in	r29, 0x3e	; 62
     edc:	ca 1b       	sub	r28, r26
     ede:	db 0b       	sbc	r29, r27
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	f8 94       	cli
     ee4:	de bf       	out	0x3e, r29	; 62
     ee6:	0f be       	out	0x3f, r0	; 63
     ee8:	cd bf       	out	0x3d, r28	; 61
     eea:	09 94       	ijmp

00000eec <__epilogue_restores__>:
     eec:	2a 88       	ldd	r2, Y+18	; 0x12
     eee:	39 88       	ldd	r3, Y+17	; 0x11
     ef0:	48 88       	ldd	r4, Y+16	; 0x10
     ef2:	5f 84       	ldd	r5, Y+15	; 0x0f
     ef4:	6e 84       	ldd	r6, Y+14	; 0x0e
     ef6:	7d 84       	ldd	r7, Y+13	; 0x0d
     ef8:	8c 84       	ldd	r8, Y+12	; 0x0c
     efa:	9b 84       	ldd	r9, Y+11	; 0x0b
     efc:	aa 84       	ldd	r10, Y+10	; 0x0a
     efe:	b9 84       	ldd	r11, Y+9	; 0x09
     f00:	c8 84       	ldd	r12, Y+8	; 0x08
     f02:	df 80       	ldd	r13, Y+7	; 0x07
     f04:	ee 80       	ldd	r14, Y+6	; 0x06
     f06:	fd 80       	ldd	r15, Y+5	; 0x05
     f08:	0c 81       	ldd	r16, Y+4	; 0x04
     f0a:	1b 81       	ldd	r17, Y+3	; 0x03
     f0c:	aa 81       	ldd	r26, Y+2	; 0x02
     f0e:	b9 81       	ldd	r27, Y+1	; 0x01
     f10:	ce 0f       	add	r28, r30
     f12:	d1 1d       	adc	r29, r1
     f14:	0f b6       	in	r0, 0x3f	; 63
     f16:	f8 94       	cli
     f18:	de bf       	out	0x3e, r29	; 62
     f1a:	0f be       	out	0x3f, r0	; 63
     f1c:	cd bf       	out	0x3d, r28	; 61
     f1e:	ed 01       	movw	r28, r26
     f20:	08 95       	ret

00000f22 <__ftoa_engine>:
     f22:	28 30       	cpi	r18, 0x08	; 8
     f24:	08 f0       	brcs	.+2      	; 0xf28 <__ftoa_engine+0x6>
     f26:	27 e0       	ldi	r18, 0x07	; 7
     f28:	33 27       	eor	r19, r19
     f2a:	da 01       	movw	r26, r20
     f2c:	99 0f       	add	r25, r25
     f2e:	31 1d       	adc	r19, r1
     f30:	87 fd       	sbrc	r24, 7
     f32:	91 60       	ori	r25, 0x01	; 1
     f34:	00 96       	adiw	r24, 0x00	; 0
     f36:	61 05       	cpc	r22, r1
     f38:	71 05       	cpc	r23, r1
     f3a:	39 f4       	brne	.+14     	; 0xf4a <__ftoa_engine+0x28>
     f3c:	32 60       	ori	r19, 0x02	; 2
     f3e:	2e 5f       	subi	r18, 0xFE	; 254
     f40:	3d 93       	st	X+, r19
     f42:	30 e3       	ldi	r19, 0x30	; 48
     f44:	2a 95       	dec	r18
     f46:	e1 f7       	brne	.-8      	; 0xf40 <__ftoa_engine+0x1e>
     f48:	08 95       	ret
     f4a:	9f 3f       	cpi	r25, 0xFF	; 255
     f4c:	30 f0       	brcs	.+12     	; 0xf5a <__ftoa_engine+0x38>
     f4e:	80 38       	cpi	r24, 0x80	; 128
     f50:	71 05       	cpc	r23, r1
     f52:	61 05       	cpc	r22, r1
     f54:	09 f0       	breq	.+2      	; 0xf58 <__ftoa_engine+0x36>
     f56:	3c 5f       	subi	r19, 0xFC	; 252
     f58:	3c 5f       	subi	r19, 0xFC	; 252
     f5a:	3d 93       	st	X+, r19
     f5c:	91 30       	cpi	r25, 0x01	; 1
     f5e:	08 f0       	brcs	.+2      	; 0xf62 <__ftoa_engine+0x40>
     f60:	80 68       	ori	r24, 0x80	; 128
     f62:	91 1d       	adc	r25, r1
     f64:	df 93       	push	r29
     f66:	cf 93       	push	r28
     f68:	1f 93       	push	r17
     f6a:	0f 93       	push	r16
     f6c:	ff 92       	push	r15
     f6e:	ef 92       	push	r14
     f70:	19 2f       	mov	r17, r25
     f72:	98 7f       	andi	r25, 0xF8	; 248
     f74:	96 95       	lsr	r25
     f76:	e9 2f       	mov	r30, r25
     f78:	96 95       	lsr	r25
     f7a:	96 95       	lsr	r25
     f7c:	e9 0f       	add	r30, r25
     f7e:	ff 27       	eor	r31, r31
     f80:	ea 54       	subi	r30, 0x4A	; 74
     f82:	ff 4f       	sbci	r31, 0xFF	; 255
     f84:	99 27       	eor	r25, r25
     f86:	33 27       	eor	r19, r19
     f88:	ee 24       	eor	r14, r14
     f8a:	ff 24       	eor	r15, r15
     f8c:	a7 01       	movw	r20, r14
     f8e:	e7 01       	movw	r28, r14
     f90:	05 90       	lpm	r0, Z+
     f92:	08 94       	sec
     f94:	07 94       	ror	r0
     f96:	28 f4       	brcc	.+10     	; 0xfa2 <__ftoa_engine+0x80>
     f98:	36 0f       	add	r19, r22
     f9a:	e7 1e       	adc	r14, r23
     f9c:	f8 1e       	adc	r15, r24
     f9e:	49 1f       	adc	r20, r25
     fa0:	51 1d       	adc	r21, r1
     fa2:	66 0f       	add	r22, r22
     fa4:	77 1f       	adc	r23, r23
     fa6:	88 1f       	adc	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	06 94       	lsr	r0
     fac:	a1 f7       	brne	.-24     	; 0xf96 <__ftoa_engine+0x74>
     fae:	05 90       	lpm	r0, Z+
     fb0:	07 94       	ror	r0
     fb2:	28 f4       	brcc	.+10     	; 0xfbe <__ftoa_engine+0x9c>
     fb4:	e7 0e       	add	r14, r23
     fb6:	f8 1e       	adc	r15, r24
     fb8:	49 1f       	adc	r20, r25
     fba:	56 1f       	adc	r21, r22
     fbc:	c1 1d       	adc	r28, r1
     fbe:	77 0f       	add	r23, r23
     fc0:	88 1f       	adc	r24, r24
     fc2:	99 1f       	adc	r25, r25
     fc4:	66 1f       	adc	r22, r22
     fc6:	06 94       	lsr	r0
     fc8:	a1 f7       	brne	.-24     	; 0xfb2 <__ftoa_engine+0x90>
     fca:	05 90       	lpm	r0, Z+
     fcc:	07 94       	ror	r0
     fce:	28 f4       	brcc	.+10     	; 0xfda <__ftoa_engine+0xb8>
     fd0:	f8 0e       	add	r15, r24
     fd2:	49 1f       	adc	r20, r25
     fd4:	56 1f       	adc	r21, r22
     fd6:	c7 1f       	adc	r28, r23
     fd8:	d1 1d       	adc	r29, r1
     fda:	88 0f       	add	r24, r24
     fdc:	99 1f       	adc	r25, r25
     fde:	66 1f       	adc	r22, r22
     fe0:	77 1f       	adc	r23, r23
     fe2:	06 94       	lsr	r0
     fe4:	a1 f7       	brne	.-24     	; 0xfce <__ftoa_engine+0xac>
     fe6:	05 90       	lpm	r0, Z+
     fe8:	07 94       	ror	r0
     fea:	20 f4       	brcc	.+8      	; 0xff4 <__ftoa_engine+0xd2>
     fec:	49 0f       	add	r20, r25
     fee:	56 1f       	adc	r21, r22
     ff0:	c7 1f       	adc	r28, r23
     ff2:	d8 1f       	adc	r29, r24
     ff4:	99 0f       	add	r25, r25
     ff6:	66 1f       	adc	r22, r22
     ff8:	77 1f       	adc	r23, r23
     ffa:	88 1f       	adc	r24, r24
     ffc:	06 94       	lsr	r0
     ffe:	a9 f7       	brne	.-22     	; 0xfea <__ftoa_engine+0xc8>
    1000:	84 91       	lpm	r24, Z
    1002:	10 95       	com	r17
    1004:	17 70       	andi	r17, 0x07	; 7
    1006:	41 f0       	breq	.+16     	; 0x1018 <__ftoa_engine+0xf6>
    1008:	d6 95       	lsr	r29
    100a:	c7 95       	ror	r28
    100c:	57 95       	ror	r21
    100e:	47 95       	ror	r20
    1010:	f7 94       	ror	r15
    1012:	e7 94       	ror	r14
    1014:	1a 95       	dec	r17
    1016:	c1 f7       	brne	.-16     	; 0x1008 <__ftoa_engine+0xe6>
    1018:	ec e5       	ldi	r30, 0x5C	; 92
    101a:	f0 e0       	ldi	r31, 0x00	; 0
    101c:	68 94       	set
    101e:	15 90       	lpm	r1, Z+
    1020:	15 91       	lpm	r17, Z+
    1022:	35 91       	lpm	r19, Z+
    1024:	65 91       	lpm	r22, Z+
    1026:	95 91       	lpm	r25, Z+
    1028:	05 90       	lpm	r0, Z+
    102a:	7f e2       	ldi	r23, 0x2F	; 47
    102c:	73 95       	inc	r23
    102e:	e1 18       	sub	r14, r1
    1030:	f1 0a       	sbc	r15, r17
    1032:	43 0b       	sbc	r20, r19
    1034:	56 0b       	sbc	r21, r22
    1036:	c9 0b       	sbc	r28, r25
    1038:	d0 09       	sbc	r29, r0
    103a:	c0 f7       	brcc	.-16     	; 0x102c <__ftoa_engine+0x10a>
    103c:	e1 0c       	add	r14, r1
    103e:	f1 1e       	adc	r15, r17
    1040:	43 1f       	adc	r20, r19
    1042:	56 1f       	adc	r21, r22
    1044:	c9 1f       	adc	r28, r25
    1046:	d0 1d       	adc	r29, r0
    1048:	7e f4       	brtc	.+30     	; 0x1068 <__ftoa_engine+0x146>
    104a:	70 33       	cpi	r23, 0x30	; 48
    104c:	11 f4       	brne	.+4      	; 0x1052 <__ftoa_engine+0x130>
    104e:	8a 95       	dec	r24
    1050:	e6 cf       	rjmp	.-52     	; 0x101e <__ftoa_engine+0xfc>
    1052:	e8 94       	clt
    1054:	01 50       	subi	r16, 0x01	; 1
    1056:	30 f0       	brcs	.+12     	; 0x1064 <__ftoa_engine+0x142>
    1058:	08 0f       	add	r16, r24
    105a:	0a f4       	brpl	.+2      	; 0x105e <__ftoa_engine+0x13c>
    105c:	00 27       	eor	r16, r16
    105e:	02 17       	cp	r16, r18
    1060:	08 f4       	brcc	.+2      	; 0x1064 <__ftoa_engine+0x142>
    1062:	20 2f       	mov	r18, r16
    1064:	23 95       	inc	r18
    1066:	02 2f       	mov	r16, r18
    1068:	7a 33       	cpi	r23, 0x3A	; 58
    106a:	28 f0       	brcs	.+10     	; 0x1076 <__ftoa_engine+0x154>
    106c:	79 e3       	ldi	r23, 0x39	; 57
    106e:	7d 93       	st	X+, r23
    1070:	2a 95       	dec	r18
    1072:	e9 f7       	brne	.-6      	; 0x106e <__ftoa_engine+0x14c>
    1074:	10 c0       	rjmp	.+32     	; 0x1096 <__ftoa_engine+0x174>
    1076:	7d 93       	st	X+, r23
    1078:	2a 95       	dec	r18
    107a:	89 f6       	brne	.-94     	; 0x101e <__ftoa_engine+0xfc>
    107c:	06 94       	lsr	r0
    107e:	97 95       	ror	r25
    1080:	67 95       	ror	r22
    1082:	37 95       	ror	r19
    1084:	17 95       	ror	r17
    1086:	17 94       	ror	r1
    1088:	e1 18       	sub	r14, r1
    108a:	f1 0a       	sbc	r15, r17
    108c:	43 0b       	sbc	r20, r19
    108e:	56 0b       	sbc	r21, r22
    1090:	c9 0b       	sbc	r28, r25
    1092:	d0 09       	sbc	r29, r0
    1094:	98 f0       	brcs	.+38     	; 0x10bc <__ftoa_engine+0x19a>
    1096:	23 95       	inc	r18
    1098:	7e 91       	ld	r23, -X
    109a:	73 95       	inc	r23
    109c:	7a 33       	cpi	r23, 0x3A	; 58
    109e:	08 f0       	brcs	.+2      	; 0x10a2 <__ftoa_engine+0x180>
    10a0:	70 e3       	ldi	r23, 0x30	; 48
    10a2:	7c 93       	st	X, r23
    10a4:	20 13       	cpse	r18, r16
    10a6:	b8 f7       	brcc	.-18     	; 0x1096 <__ftoa_engine+0x174>
    10a8:	7e 91       	ld	r23, -X
    10aa:	70 61       	ori	r23, 0x10	; 16
    10ac:	7d 93       	st	X+, r23
    10ae:	30 f0       	brcs	.+12     	; 0x10bc <__ftoa_engine+0x19a>
    10b0:	83 95       	inc	r24
    10b2:	71 e3       	ldi	r23, 0x31	; 49
    10b4:	7d 93       	st	X+, r23
    10b6:	70 e3       	ldi	r23, 0x30	; 48
    10b8:	2a 95       	dec	r18
    10ba:	e1 f7       	brne	.-8      	; 0x10b4 <__ftoa_engine+0x192>
    10bc:	11 24       	eor	r1, r1
    10be:	ef 90       	pop	r14
    10c0:	ff 90       	pop	r15
    10c2:	0f 91       	pop	r16
    10c4:	1f 91       	pop	r17
    10c6:	cf 91       	pop	r28
    10c8:	df 91       	pop	r29
    10ca:	99 27       	eor	r25, r25
    10cc:	87 fd       	sbrc	r24, 7
    10ce:	90 95       	com	r25
    10d0:	08 95       	ret

000010d2 <strnlen_P>:
    10d2:	fc 01       	movw	r30, r24
    10d4:	05 90       	lpm	r0, Z+
    10d6:	61 50       	subi	r22, 0x01	; 1
    10d8:	70 40       	sbci	r23, 0x00	; 0
    10da:	01 10       	cpse	r0, r1
    10dc:	d8 f7       	brcc	.-10     	; 0x10d4 <strnlen_P+0x2>
    10de:	80 95       	com	r24
    10e0:	90 95       	com	r25
    10e2:	8e 0f       	add	r24, r30
    10e4:	9f 1f       	adc	r25, r31
    10e6:	08 95       	ret

000010e8 <strnlen>:
    10e8:	fc 01       	movw	r30, r24
    10ea:	61 50       	subi	r22, 0x01	; 1
    10ec:	70 40       	sbci	r23, 0x00	; 0
    10ee:	01 90       	ld	r0, Z+
    10f0:	01 10       	cpse	r0, r1
    10f2:	d8 f7       	brcc	.-10     	; 0x10ea <strnlen+0x2>
    10f4:	80 95       	com	r24
    10f6:	90 95       	com	r25
    10f8:	8e 0f       	add	r24, r30
    10fa:	9f 1f       	adc	r25, r31
    10fc:	08 95       	ret

000010fe <fputc>:
    10fe:	0f 93       	push	r16
    1100:	1f 93       	push	r17
    1102:	cf 93       	push	r28
    1104:	df 93       	push	r29
    1106:	fb 01       	movw	r30, r22
    1108:	23 81       	ldd	r18, Z+3	; 0x03
    110a:	21 fd       	sbrc	r18, 1
    110c:	03 c0       	rjmp	.+6      	; 0x1114 <fputc+0x16>
    110e:	8f ef       	ldi	r24, 0xFF	; 255
    1110:	9f ef       	ldi	r25, 0xFF	; 255
    1112:	2c c0       	rjmp	.+88     	; 0x116c <fputc+0x6e>
    1114:	22 ff       	sbrs	r18, 2
    1116:	16 c0       	rjmp	.+44     	; 0x1144 <fputc+0x46>
    1118:	46 81       	ldd	r20, Z+6	; 0x06
    111a:	57 81       	ldd	r21, Z+7	; 0x07
    111c:	24 81       	ldd	r18, Z+4	; 0x04
    111e:	35 81       	ldd	r19, Z+5	; 0x05
    1120:	42 17       	cp	r20, r18
    1122:	53 07       	cpc	r21, r19
    1124:	44 f4       	brge	.+16     	; 0x1136 <fputc+0x38>
    1126:	a0 81       	ld	r26, Z
    1128:	b1 81       	ldd	r27, Z+1	; 0x01
    112a:	9d 01       	movw	r18, r26
    112c:	2f 5f       	subi	r18, 0xFF	; 255
    112e:	3f 4f       	sbci	r19, 0xFF	; 255
    1130:	31 83       	std	Z+1, r19	; 0x01
    1132:	20 83       	st	Z, r18
    1134:	8c 93       	st	X, r24
    1136:	26 81       	ldd	r18, Z+6	; 0x06
    1138:	37 81       	ldd	r19, Z+7	; 0x07
    113a:	2f 5f       	subi	r18, 0xFF	; 255
    113c:	3f 4f       	sbci	r19, 0xFF	; 255
    113e:	37 83       	std	Z+7, r19	; 0x07
    1140:	26 83       	std	Z+6, r18	; 0x06
    1142:	14 c0       	rjmp	.+40     	; 0x116c <fputc+0x6e>
    1144:	8b 01       	movw	r16, r22
    1146:	ec 01       	movw	r28, r24
    1148:	fb 01       	movw	r30, r22
    114a:	00 84       	ldd	r0, Z+8	; 0x08
    114c:	f1 85       	ldd	r31, Z+9	; 0x09
    114e:	e0 2d       	mov	r30, r0
    1150:	09 95       	icall
    1152:	89 2b       	or	r24, r25
    1154:	e1 f6       	brne	.-72     	; 0x110e <fputc+0x10>
    1156:	d8 01       	movw	r26, r16
    1158:	16 96       	adiw	r26, 0x06	; 6
    115a:	8d 91       	ld	r24, X+
    115c:	9c 91       	ld	r25, X
    115e:	17 97       	sbiw	r26, 0x07	; 7
    1160:	01 96       	adiw	r24, 0x01	; 1
    1162:	17 96       	adiw	r26, 0x07	; 7
    1164:	9c 93       	st	X, r25
    1166:	8e 93       	st	-X, r24
    1168:	16 97       	sbiw	r26, 0x06	; 6
    116a:	ce 01       	movw	r24, r28
    116c:	df 91       	pop	r29
    116e:	cf 91       	pop	r28
    1170:	1f 91       	pop	r17
    1172:	0f 91       	pop	r16
    1174:	08 95       	ret

00001176 <vsprintf>:
    1176:	ae e0       	ldi	r26, 0x0E	; 14
    1178:	b0 e0       	ldi	r27, 0x00	; 0
    117a:	e0 ec       	ldi	r30, 0xC0	; 192
    117c:	f8 e0       	ldi	r31, 0x08	; 8
    117e:	a8 ce       	rjmp	.-688    	; 0xed0 <__prologue_saves__+0x1c>
    1180:	8c 01       	movw	r16, r24
    1182:	86 e0       	ldi	r24, 0x06	; 6
    1184:	8c 83       	std	Y+4, r24	; 0x04
    1186:	1a 83       	std	Y+2, r17	; 0x02
    1188:	09 83       	std	Y+1, r16	; 0x01
    118a:	8f ef       	ldi	r24, 0xFF	; 255
    118c:	9f e7       	ldi	r25, 0x7F	; 127
    118e:	9e 83       	std	Y+6, r25	; 0x06
    1190:	8d 83       	std	Y+5, r24	; 0x05
    1192:	ce 01       	movw	r24, r28
    1194:	01 96       	adiw	r24, 0x01	; 1
    1196:	d7 d9       	rcall	.-3154   	; 0x546 <vfprintf>
    1198:	ef 81       	ldd	r30, Y+7	; 0x07
    119a:	f8 85       	ldd	r31, Y+8	; 0x08
    119c:	e0 0f       	add	r30, r16
    119e:	f1 1f       	adc	r31, r17
    11a0:	10 82       	st	Z, r1
    11a2:	2e 96       	adiw	r28, 0x0e	; 14
    11a4:	e4 e0       	ldi	r30, 0x04	; 4
    11a6:	b0 ce       	rjmp	.-672    	; 0xf08 <__epilogue_restores__+0x1c>

000011a8 <__ultoa_invert>:
    11a8:	fa 01       	movw	r30, r20
    11aa:	aa 27       	eor	r26, r26
    11ac:	28 30       	cpi	r18, 0x08	; 8
    11ae:	51 f1       	breq	.+84     	; 0x1204 <__ultoa_invert+0x5c>
    11b0:	20 31       	cpi	r18, 0x10	; 16
    11b2:	81 f1       	breq	.+96     	; 0x1214 <__ultoa_invert+0x6c>
    11b4:	e8 94       	clt
    11b6:	6f 93       	push	r22
    11b8:	6e 7f       	andi	r22, 0xFE	; 254
    11ba:	6e 5f       	subi	r22, 0xFE	; 254
    11bc:	7f 4f       	sbci	r23, 0xFF	; 255
    11be:	8f 4f       	sbci	r24, 0xFF	; 255
    11c0:	9f 4f       	sbci	r25, 0xFF	; 255
    11c2:	af 4f       	sbci	r26, 0xFF	; 255
    11c4:	b1 e0       	ldi	r27, 0x01	; 1
    11c6:	3e d0       	rcall	.+124    	; 0x1244 <__ultoa_invert+0x9c>
    11c8:	b4 e0       	ldi	r27, 0x04	; 4
    11ca:	3c d0       	rcall	.+120    	; 0x1244 <__ultoa_invert+0x9c>
    11cc:	67 0f       	add	r22, r23
    11ce:	78 1f       	adc	r23, r24
    11d0:	89 1f       	adc	r24, r25
    11d2:	9a 1f       	adc	r25, r26
    11d4:	a1 1d       	adc	r26, r1
    11d6:	68 0f       	add	r22, r24
    11d8:	79 1f       	adc	r23, r25
    11da:	8a 1f       	adc	r24, r26
    11dc:	91 1d       	adc	r25, r1
    11de:	a1 1d       	adc	r26, r1
    11e0:	6a 0f       	add	r22, r26
    11e2:	71 1d       	adc	r23, r1
    11e4:	81 1d       	adc	r24, r1
    11e6:	91 1d       	adc	r25, r1
    11e8:	a1 1d       	adc	r26, r1
    11ea:	20 d0       	rcall	.+64     	; 0x122c <__ultoa_invert+0x84>
    11ec:	09 f4       	brne	.+2      	; 0x11f0 <__ultoa_invert+0x48>
    11ee:	68 94       	set
    11f0:	3f 91       	pop	r19
    11f2:	2a e0       	ldi	r18, 0x0A	; 10
    11f4:	26 9f       	mul	r18, r22
    11f6:	11 24       	eor	r1, r1
    11f8:	30 19       	sub	r19, r0
    11fa:	30 5d       	subi	r19, 0xD0	; 208
    11fc:	31 93       	st	Z+, r19
    11fe:	de f6       	brtc	.-74     	; 0x11b6 <__ultoa_invert+0xe>
    1200:	cf 01       	movw	r24, r30
    1202:	08 95       	ret
    1204:	46 2f       	mov	r20, r22
    1206:	47 70       	andi	r20, 0x07	; 7
    1208:	40 5d       	subi	r20, 0xD0	; 208
    120a:	41 93       	st	Z+, r20
    120c:	b3 e0       	ldi	r27, 0x03	; 3
    120e:	0f d0       	rcall	.+30     	; 0x122e <__ultoa_invert+0x86>
    1210:	c9 f7       	brne	.-14     	; 0x1204 <__ultoa_invert+0x5c>
    1212:	f6 cf       	rjmp	.-20     	; 0x1200 <__ultoa_invert+0x58>
    1214:	46 2f       	mov	r20, r22
    1216:	4f 70       	andi	r20, 0x0F	; 15
    1218:	40 5d       	subi	r20, 0xD0	; 208
    121a:	4a 33       	cpi	r20, 0x3A	; 58
    121c:	18 f0       	brcs	.+6      	; 0x1224 <__ultoa_invert+0x7c>
    121e:	49 5d       	subi	r20, 0xD9	; 217
    1220:	31 fd       	sbrc	r19, 1
    1222:	40 52       	subi	r20, 0x20	; 32
    1224:	41 93       	st	Z+, r20
    1226:	02 d0       	rcall	.+4      	; 0x122c <__ultoa_invert+0x84>
    1228:	a9 f7       	brne	.-22     	; 0x1214 <__ultoa_invert+0x6c>
    122a:	ea cf       	rjmp	.-44     	; 0x1200 <__ultoa_invert+0x58>
    122c:	b4 e0       	ldi	r27, 0x04	; 4
    122e:	a6 95       	lsr	r26
    1230:	97 95       	ror	r25
    1232:	87 95       	ror	r24
    1234:	77 95       	ror	r23
    1236:	67 95       	ror	r22
    1238:	ba 95       	dec	r27
    123a:	c9 f7       	brne	.-14     	; 0x122e <__ultoa_invert+0x86>
    123c:	00 97       	sbiw	r24, 0x00	; 0
    123e:	61 05       	cpc	r22, r1
    1240:	71 05       	cpc	r23, r1
    1242:	08 95       	ret
    1244:	9b 01       	movw	r18, r22
    1246:	ac 01       	movw	r20, r24
    1248:	0a 2e       	mov	r0, r26
    124a:	06 94       	lsr	r0
    124c:	57 95       	ror	r21
    124e:	47 95       	ror	r20
    1250:	37 95       	ror	r19
    1252:	27 95       	ror	r18
    1254:	ba 95       	dec	r27
    1256:	c9 f7       	brne	.-14     	; 0x124a <__ultoa_invert+0xa2>
    1258:	62 0f       	add	r22, r18
    125a:	73 1f       	adc	r23, r19
    125c:	84 1f       	adc	r24, r20
    125e:	95 1f       	adc	r25, r21
    1260:	a0 1d       	adc	r26, r0
    1262:	08 95       	ret

00001264 <_exit>:
    1264:	f8 94       	cli

00001266 <__stop_program>:
    1266:	ff cf       	rjmp	.-2      	; 0x1266 <__stop_program>
